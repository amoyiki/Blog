{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1471489285284},{"_id":"themes/next/.gitignore","hash":"de5b9b9e5b313b4a86e805b02f334d35c87bfe56","modified":1481077838766},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1478508694165},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1471489285299},{"_id":"themes/next/.javascript_ignore","hash":"74b54cf920cbbf4038a68e54b7138af8b8f45588","modified":1481077838766},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1471489285299},{"_id":"themes/next/gulpfile.coffee","hash":"e549561461642051d195550ec49d793e44ee22a0","modified":1481077838770},{"_id":"themes/next/README.en.md","hash":"fa31bbc6dd8778b8dee469740c92b3b5b59702af","modified":1471489285299},{"_id":"themes/next/bower.json","hash":"bd70cf5988bbfc8cbcf13adae659151a55466524","modified":1481077838769},{"_id":"source/_posts/Java垃圾回收.md","hash":"c0b82dbb0854ceab36e18849042e6d2d887c0499","modified":1481013847237},{"_id":"source/_posts/LeetCode-217-Contains-Duplicate.md","hash":"2907827d290dc4b346b81a8762878c996ba72256","modified":1481095749014},{"_id":"themes/next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1471489285315},{"_id":"source/_posts/LeetCode-303-Range-Sum-Query-Immutable.md","hash":"9cb4e3c69808eb12e3d89536e3e1fea326341bc1","modified":1481093691255},{"_id":"themes/next/package.json","hash":"48e2352f8e41f2b6bbf55254d10f3192ee206d5a","modified":1481077838831},{"_id":"source/_posts/LeetCode-453-Minimum-Moves-to-Equal-Array-Elements.md","hash":"3f65a7007e9c6a9f9cd1630e3dc2340ee68e4e28","modified":1481093055266},{"_id":"source/_posts/LeetCode-74-Search-a-2D-Matrix.md","hash":"b0574104c6e4e36926971ec8b5451ba56d99d245","modified":1482291291057},{"_id":"source/_posts/LeetCode-290-Word-Pattern.md","hash":"a3cb2d651b78f865fcf0fdb22c6d9e6363439fe9","modified":1481676313632},{"_id":"themes/next/_config.yml","hash":"29715783cfd25c548916d6f89841e07b4c9dacd1","modified":1481786190297},{"_id":"source/_posts/LeetCode-463-Island-Perimeter.md","hash":"6dba52afb3cf33bd2cdd36589b3aee39ab4c5bd8","modified":1481093028683},{"_id":"source/_posts/Python一些小技巧.md","hash":"32ef681d1a4224c6cc7a7294f5c000c0363541b4","modified":1478050996414},{"_id":"source/_posts/SQL-生成10万条测试数据.md","hash":"9d0f7a84aff1a62b12fa35bf9fce9422e652172d","modified":1481601171801},{"_id":"source/_posts/vim使用技巧.md","hash":"63a76dd85d6b807a45c9fc2e03260e4e2cede0a4","modified":1477293714799},{"_id":"source/_posts/windows-下使用Virtualenv-管理Python项目.md","hash":"967a34c4cee19b6d6b6b3842f863d0751ba51faf","modified":1477293638037},{"_id":"source/_posts/LeetCode-409-Longest-Palindrome.md","hash":"b8ae85a30461a145252616ed1221a36d86ce7089","modified":1481093074487},{"_id":"source/_posts/Python协程.md","hash":"9fa8cbcfbdc67ed302e210152956a0df6c7812d2","modified":1482131473231},{"_id":"source/_posts/Linux注意事项.md","hash":"deb14594a262c25daae003d38c04d4fc83294fc5","modified":1480302819360},{"_id":"source/_posts/离线安装WMWare-Tools.md","hash":"68a87ef86d9c8876f0b91b4f2052d8e2218effdf","modified":1482285290289},{"_id":"source/_posts/了解HashMap.md","hash":"1e363ffc4eb84e301e484584dac48c148db16387","modified":1481082373034},{"_id":"source/_posts/数据结构-Java（1）-实现Stack.md","hash":"d27a6871637a754b79b83fcd8efd745e045941eb","modified":1477901019591},{"_id":"source/_posts/编写简单的ORM.md","hash":"95f922f47169d2a790bedbf4707fcdd5eb1c7c7a","modified":1476697582788},{"_id":"source/_posts/SQL 中Group by 的使用.md","hash":"09f15ed2af55f92c687f0273c1a988885850a0e8","modified":1471489284956},{"_id":"source/_posts/Nginx学习笔记（一）.md","hash":"6b5f5426e33d7b35770ec1e841fc6c2e65cfc802","modified":1480064550683},{"_id":"source/about/index.md","hash":"092743c47b386730c57ee9df730731330485dd61","modified":1471489284972},{"_id":"source/categories/index.md","hash":"bf824d61d7e2268a1ede8c7918c4f0b9560ff6e4","modified":1471489284972},{"_id":"source/_posts/数据结构-Java（2）实现链表.md","hash":"cbd224a0d60caf22aa02c321ba59baee5d879254","modified":1478507825523},{"_id":"source/tags/index.md","hash":"23c6eb3b63cdbf7766728afb7ddd0af4d15f69c9","modified":1471489284987},{"_id":"source/_posts/git技巧-gitignore配置.md","hash":"45a5399223ef2f04cae1764ddcbce0d3f5c64bd4","modified":1481783544983},{"_id":"source/_posts/编写一个Chrome-extension-网页二维码生成.md","hash":"217ce0618f74144280e4e632323bcef24fdb8ecf","modified":1481708186533},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"4312fb37fa2b8663006be3c4fe01125ec01171c1","modified":1481077838763},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"2692e36cc35b1594530981e7727771f601720a43","modified":1481077838765},{"_id":"source/images/avatar.jpg","hash":"d2874bd0c190119d36e7f1dc3510389a42de730f","modified":1471489284972},{"_id":"source/_posts/零碎的小技巧.md","hash":"74c1420c54c74f5e738da62c7f2bcd393cf65423","modified":1481708156851},{"_id":"source/_posts/新的开始.md","hash":"e6516fb63e8515224c6556e82f06800823dbf1a9","modified":1476697582788},{"_id":"themes/next/layout/_layout.swig","hash":"b4ef30f7da073bf2a9052186f76e0e080de1c794","modified":1481077838787},{"_id":"themes/next/layout/archive.swig","hash":"b867a08f6b43de8b5d700c84b943df55917407ae","modified":1471489285490},{"_id":"themes/next/layout/index.swig","hash":"e5b52e04296203262a400e8e36ae12426d31fd5b","modified":1481077838826},{"_id":"themes/next/layout/schedule.swig","hash":"595013860078799d455af4965b3a7c5c4fd3923c","modified":1481077838830},{"_id":"themes/next/layout/category.swig","hash":"58cf08388901f7549b1fca95548b2c79173aa840","modified":1471489285490},{"_id":"themes/next/layout/page.swig","hash":"2a13804aa186f6062738d136e430870c53789bf4","modified":1481077838827},{"_id":"themes/next/layout/post.swig","hash":"b8334c479840b7724638eec71971cbd8512ae58d","modified":1481077838829},{"_id":"themes/next/layout/tag.swig","hash":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1471489285490},{"_id":"themes/next/languages/de.yml","hash":"db6a9d669f4b6282cda6c0a2d4e03d3e308a4846","modified":1481077838771},{"_id":"themes/next/languages/default.yml","hash":"fe00529a94bb2550194a31d178f5810b45014ab6","modified":1481077838772},{"_id":"themes/next/languages/en.yml","hash":"d02acdce503c86fbb01920ad22d31ec56fc285f1","modified":1481077838773},{"_id":"themes/next/languages/id.yml","hash":"d8b9dc017da0be7f71fda1cacd8064cbc38963b9","modified":1481077838775},{"_id":"themes/next/languages/fr-FR.yml","hash":"91cf55b9d75879e72c8008d2659fe2ea993a4cca","modified":1481077838774},{"_id":"themes/next/languages/ko.yml","hash":"c59676f2af80c3c594c34c4a0fcbf65fd8864ff3","modified":1481077838777},{"_id":"themes/next/languages/ja.yml","hash":"bc89436a2a015ef72f43f265e56e37d94e73c0cd","modified":1481077838777},{"_id":"themes/next/languages/pt-BR.yml","hash":"4b91f96b07e05705b28964df7460466c9b522e2c","modified":1481077838778},{"_id":"themes/next/languages/pt.yml","hash":"f364905121a816c9797acce07c0a4f248965b29a","modified":1481077838779},{"_id":"themes/next/languages/ru.yml","hash":"402e676252ab1fc4522257a578738cb9536eb077","modified":1481077838780},{"_id":"themes/next/scripts/merge-configs.js","hash":"f8cde6953939802f92da5b7a2458c6c539e9be69","modified":1471489285506},{"_id":"themes/next/languages/zh-Hans.yml","hash":"439c16c744b1596f24d9e0b4e230c4d3c93b7d85","modified":1481077838780},{"_id":"themes/next/languages/zh-hk.yml","hash":"a59f3f3114f5eb4d170a76da4359307e8f5159a7","modified":1481077838781},{"_id":"themes/next/languages/zh-tw.yml","hash":"18da1324d2212faca9a6e5e6ce98b419c86d4b0c","modified":1481077838782},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1481077838931},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1471489285849},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1471489286069},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1471489286069},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1481077838784},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1481077838784},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"b87a5122dbff1d5fccf8f3d09d1640bd4b01c4a0","modified":1471489285346},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"c5cc0070ca7c9a8dbd4b09e0398db536c3cdbe8a","modified":1481077838792},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"3b261c758a7673d91c116367be1bb5223403f9e0","modified":1481077838791},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1471489285362},{"_id":"themes/next/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1481077838790},{"_id":"themes/next/layout/_macro/post.swig","hash":"abfc88f34f2c0ae52229c4ffa577b00ad7cecdc6","modified":1481077838789},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"dfbb6e9692333166aa78231ad12b2a40c153cbcb","modified":1481077838797},{"_id":"themes/next/layout/_partials/comments.swig","hash":"a5ffadb516522f85c052b290b94c0e4af3002644","modified":1481077838792},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1471489285389},{"_id":"themes/next/layout/_partials/footer.swig","hash":"683616f4a80796051e2346d80acf838a589450b0","modified":1481077838793},{"_id":"themes/next/layout/_partials/search.swig","hash":"952b7b8d9ce2c81d4002a9dc2331f1e710f99616","modified":1481077838797},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1481077838800},{"_id":"themes/next/layout/_partials/head.swig","hash":"740684ef2b6e56183529387882042612e904bc8d","modified":1481077838794},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1471489285428},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1471489285428},{"_id":"themes/next/layout/_partials/header.swig","hash":"d9b10a92fdccd57a0c0d6773831f9c1b0f1bb449","modified":1481077838796},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"c9d45628330ce8bf5fbe71c9f131c7d75334c1c4","modified":1471489285474},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1471489285506},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1481077838833},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1471489285506},{"_id":"themes/next/scripts/tags/note.js","hash":"7dc14db08f2c74f8f1952534b424f220f5c000c6","modified":1481077838834},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1471489285833},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1481077838861},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1471489285849},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1471489285849},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1471489285849},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1471489285864},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1471489285864},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1471489285849},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1481077838861},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1471489285864},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1471489285864},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1471489285880},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1471489285864},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1471489285428},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1471489285428},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1471489285880},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1471489285864},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1471489285740},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1471489285740},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1471489285755},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1471489285818},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1471489285833},{"_id":"themes/next/layout/_components/algolia-search/dom.swig","hash":"bb2c3a926bb7f8fea54d424882b25d93dfde7ae6","modified":1481077838783},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1481077838794},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"efa7efcbb575381b508f9aa0e0c53140eef72a7b","modified":1471489285396},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1471489285396},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1471489285396},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1481077838798},{"_id":"themes/next/layout/_components/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1481077838783},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1471489285428},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1481077838795},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1471489285428},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1471489285412},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"188423f7df0eb8c99a03cb6741384415651c4665","modified":1481077838801},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"9c8f4b2a29741d96adf0b8fef52ae7f4396f27f5","modified":1481077838809},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1471489285396},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1481077838799},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"e495aed8fb36bf8015ddbd64366270a7debad2b0","modified":1481077838823},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1471489285474},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1481077838825},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1481077838825},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"f592adff22628b271ec9657b080cf6b9cc200615","modified":1481077838824},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1471489285740},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1481077838855},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1471489285818},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1471489285740},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"d7826b48a20162835450495db534d353ac52e476","modified":1481077838859},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1471489285880},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"4a0da1bed19e65bd7db42421b447061bc1618710","modified":1471489285880},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1471489285880},{"_id":"themes/next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1471489285896},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"84bdc8a4fe127849a5c99bdefe1d0b65ee1a4a0a","modified":1481077838862},{"_id":"themes/next/source/css/_variables/base.styl","hash":"cd432e79f482336c1fc5806a234f395452eeaf6d","modified":1481082265973},{"_id":"themes/next/source/js/src/post-details.js","hash":"458af3b1bd7783c1950808e66cedfa9fb68bf21f","modified":1471489285896},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1471489285896},{"_id":"themes/next/source/js/src/utils.js","hash":"e34f83848883732ddd7a34a3e3ed2a293f0f76a7","modified":1481077838864},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1481077838865},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1471489285942},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1471489285942},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1471489285958},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1471489285958},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1471489285974},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1481077838871},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1471489285942},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1471489285942},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1471489286020},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1471489286005},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1471489286020},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"8868275e8b6340c87a81c69a54ed138d11fb3c3e","modified":1481077838869},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1471489286005},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1471489286020},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1471489286020},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1471489286020},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1471489286036},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1471489286052},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1471489286036},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1471489286052},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1471489286005},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1481077838802},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1471489286052},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1481077838802},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"1b6af02fd0ba3f729675cd95429a0cea4aebf358","modified":1471489285459},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"a79e7e0d809fcf407593dd7ed9e023db21c3cbd6","modified":1481077838803},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1471489285459},{"_id":"themes/next/layout/_scripts/third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1481077838801},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"24105e62d7f26946907fa14cd02589f899bf8122","modified":1471489285443},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1481077838820},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"e4a13e8cd19762ef3aea0e59dfae8b3c1f251f11","modified":1481077838819},{"_id":"themes/next/layout/_scripts/third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1481077838821},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ad69cbf94eedacc27e756cdb9c7073416db697d0","modified":1471489285521},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"b7d5cc29586ac796a50d90974ad99d24a5982137","modified":1471489285552},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1471489285552},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1471489285662},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1471489285537},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"b6ee5fefa6046086a76ddbcfafc82482816fa3e0","modified":1481077838854},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1471489285599},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1471489285724},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1471489285724},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1471489285755},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5a35aa0381b0e1d465b952a997194441020446ea","modified":1471489285724},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1471489285755},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1471489285724},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1471489285740},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1471489285755},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1471489285771},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1481077838856},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1471489285786},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"f23ac53ab901c48859dd29eee6e386b60ff956ba","modified":1481077838857},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1471489285786},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1471489285786},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c9875c010bebd77b4f59d459a10455fceb0a66a1","modified":1471489285802},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"de31e923bf5102498f06b1ae6bdf2ea22409f3e0","modified":1471489285802},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1471489285771},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"55b44e03054cd20ed8129bf986b15fba5fd85aad","modified":1471489285771},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1471489285771},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1471489285818},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"88a5e0e95f93e4adb196bff1aac17d6cfb03768a","modified":1481082369265},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"c2390263a298a2b78c5f941e6827c13f02e1ee85","modified":1481077838863},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1471489285896},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"338e9475519ce72af29a1bc05610f9f486e0f1c2","modified":1481077838858},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"983c0723e8cfd84b67c2e66da0c26425a8db06e0","modified":1481077838858},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"9887bd3894db5394c1e64e800afaae55f47e8dd0","modified":1471489285818},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1471489285896},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1471489285896},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1471489285896},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1471489285911},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1471489285911},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1471489285927},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1471489285927},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1471489285927},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1471489285958},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1471489285942},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"a02674d823c7b577d38c3cdb91953993b6e4b3a0","modified":1481077838895},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"3c1d63dd1176c77f9f4cdb1616fbb08c31b9822f","modified":1481077838899},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1471489285974},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1471489286036},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1471489286036},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1481077838903},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1481077838907},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1481077838921},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1481077838928},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1471489286052},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1471489285552},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1471489285568},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1471489285552},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1471489285568},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"852fd77500bda2c1a6651a14aa48d7d6222adc9d","modified":1471489285568},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1481077838835},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1471489285584},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1481077838839},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1471489285599},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1471489285584},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"cd2def16d31feb234be27dcdce2a919f70cc6919","modified":1481077838837},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1481077838838},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1471489285568},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"98b33a693e8cf3ee76fc4fdda5d5a35fc146c3c9","modified":1481082324365},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1471489285615},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a45f5fce643eec4e1b927165229d560364bcace1","modified":1471489285599},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"2bc3e33fdfbcf348c96ca60598f629dcd7ba3617","modified":1471489285615},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"4866fb9453d7d4c83a1c4e55d74e4afed336eb8b","modified":1471489285599},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1471489285615},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1481077838839},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"e28c805011f65b54060f03be90ec5a23714c4985","modified":1481077838840},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1471489285630},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1471489285630},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"74e9989a10fc682388cbd25ff7df0d7d4025fb8c","modified":1481077838841},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"821991c0890966a512b43e8b1cf9537e738a09a0","modified":1471489285630},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"681b7c8ce4dc47130a0ca67c1ec62be7c96e4c4f","modified":1481077838843},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1481077838842},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1481077838844},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1471489285646},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1471489285646},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"394888efec32749b353292a59ec7f1b609d6325e","modified":1471489285646},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"06b9a99d63b4d57fdbf70b88ab7036fbc47e3f52","modified":1471489285646},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1471489285646},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1471489285662},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"dd941824210733588841897457e0cc9697ca5608","modified":1471489285677},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1481077838844},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"c8a05ce90784db9744c22fab22019eb637df1f2f","modified":1481077838846},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1471489285677},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"8420b4be386469337243336aee694297875bd439","modified":1481077838845},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1471489285708},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"3b1aabbab57b0b1fafa311feb1212f59e78e7928","modified":1481077838847},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"4f1e9d96940aa3e42d58fb63a26d4fa260323b0d","modified":1481077838853},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1471489285677},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"7f7e9df15148608a9c29326dd880d8e8e8efc0ec","modified":1471489285677},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1471489285771},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1471489285786},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1471489285802},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1471489285708},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"eb4ede7d7446d8a2f2ddeef3b17f497a6ad30756","modified":1481077838851},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1471489285911},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1471489285911},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1481077838841},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1471489285927},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1481077838918},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1471489285927},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1471489285911},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1471489285927},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1481077838868},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"964e8dac2cee79c4b49b5bc300675773f6518812","modified":1481077838913}],"Category":[{"name":"Java VM","_id":"ciwyd91v60005mc73vf8tefjk"},{"name":"Algorithms","_id":"ciwyd91vr000bmc739pvth8mc"},{"name":"Python","_id":"ciwyd91x40013mc73155pig63"},{"name":"SQL","_id":"ciwyd91xf001bmc73sjvie351"},{"name":"Linux","_id":"ciwyd91xp001jmc73m1p2ydwu"},{"name":"工具配置","_id":"ciwyd91xx001rmc73wl19ckxr"},{"name":"Java","_id":"ciwyd91yr002hmc737b30r2e3"},{"name":"Data Structure","_id":"ciwyd91yu002kmc73ycf1r4o4"},{"name":"Nginx","_id":"ciwyd91yv002mmc73i9ftn5ks"},{"name":"Git","_id":"ciwyd91z4002qmc73mmriz12o"},{"name":"Chrome extension","_id":"ciwyd91z6002smc73my01kpsa"},{"name":"半畳","_id":"ciwyd91z9002umc73rua6r2zf"}],"Data":[],"Page":[{"title":"关于","date":"2016-04-28T14:54:47.000Z","type":"about","_content":"### 关于我 ###\n毕业于某三流学院的见习`Java`魔法学徒,现转为`Python`魔法学徒。喜欢`美剧`，`日剧`，`动漫`，`日音`。努力学习不同的知识，扩大自己的舒适区。\n### 关于BLOG ###\n1. 记录自己学习的过程，内容不一定有深度。\n2. ~~顺便写一些日记~~\n","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2016-04-28 22:54:47\ntype: \"about\"\n---\n### 关于我 ###\n毕业于某三流学院的见习`Java`魔法学徒,现转为`Python`魔法学徒。喜欢`美剧`，`日剧`，`动漫`，`日音`。努力学习不同的知识，扩大自己的舒适区。\n### 关于BLOG ###\n1. 记录自己学习的过程，内容不一定有深度。\n2. ~~顺便写一些日记~~\n","updated":"2016-08-18T03:01:24.972Z","path":"about/index.html","comments":1,"layout":"page","_id":"ciwyd91up0001mc73w06bu660","content":"<h3 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h3><p>毕业于某三流学院的见习<code>Java</code>魔法学徒,现转为<code>Python</code>魔法学徒。喜欢<code>美剧</code>，<code>日剧</code>，<code>动漫</code>，<code>日音</code>。努力学习不同的知识，扩大自己的舒适区。</p>\n<h3 id=\"关于BLOG\"><a href=\"#关于BLOG\" class=\"headerlink\" title=\"关于BLOG\"></a>关于BLOG</h3><ol>\n<li>记录自己学习的过程，内容不一定有深度。</li>\n<li><del>顺便写一些日记</del></li>\n</ol>\n","excerpt":"","more":"<h3 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h3><p>毕业于某三流学院的见习<code>Java</code>魔法学徒,现转为<code>Python</code>魔法学徒。喜欢<code>美剧</code>，<code>日剧</code>，<code>动漫</code>，<code>日音</code>。努力学习不同的知识，扩大自己的舒适区。</p>\n<h3 id=\"关于BLOG\"><a href=\"#关于BLOG\" class=\"headerlink\" title=\"关于BLOG\"></a>关于BLOG</h3><ol>\n<li>记录自己学习的过程，内容不一定有深度。</li>\n<li><del>顺便写一些日记</del></li>\n</ol>\n"},{"title":"分类","date":"2016-04-28T14:54:26.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2016-04-28 22:54:26\ntype: \"categories\"\ncomments: false\n---\n","updated":"2016-08-18T03:01:24.972Z","path":"categories/index.html","layout":"page","_id":"ciwyd91v10003mc73sosl7uvq","content":"","excerpt":"","more":""},{"title":"标签","date":"2016-04-28T14:53:52.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2016-04-28 22:53:52\ntype: \"tags\"\ncomments: false\n---\n","updated":"2016-08-18T03:01:24.987Z","path":"tags/index.html","layout":"page","_id":"ciwyd91ve0007mc73jpy3dbro","content":"","excerpt":"","more":""}],"Post":[{"title":"Java垃圾回收","date":"2016-12-06T08:32:20.000Z","_content":"\n## GC 如何判断对象可以被回收 ##\n### 引用计数算法 ###\n早期Java使用的算法，现已不用。\n### 可达性分析算法 ###\n以`GC Root` 作为起始点，向下搜索。走过的路径成为`引用链`。当一个对象到`GC Root`\n没有任何引用链相连时，证明对象不可用。\n**Java的`GC Root`对象包括：**\n1. 虚拟机栈（栈帧中的本地变量表中引用对象）\n2. 方法区中类静态属性引用对象\n3. 方法区常量引用对象\n4. 本地方法JNI引用对象\n\n\n","source":"_posts/Java垃圾回收.md","raw":"---\ntitle: Java垃圾回收\ndate: 2016-12-06 16:32:20\ncategories: \"Java VM\"\ntags:\n- 学习\n---\n\n## GC 如何判断对象可以被回收 ##\n### 引用计数算法 ###\n早期Java使用的算法，现已不用。\n### 可达性分析算法 ###\n以`GC Root` 作为起始点，向下搜索。走过的路径成为`引用链`。当一个对象到`GC Root`\n没有任何引用链相连时，证明对象不可用。\n**Java的`GC Root`对象包括：**\n1. 虚拟机栈（栈帧中的本地变量表中引用对象）\n2. 方法区中类静态属性引用对象\n3. 方法区常量引用对象\n4. 本地方法JNI引用对象\n\n\n","slug":"Java垃圾回收","published":1,"updated":"2016-12-06T08:44:07.237Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwyd91ue0000mc738v4fy5ez","content":"<h2 id=\"GC-如何判断对象可以被回收\"><a href=\"#GC-如何判断对象可以被回收\" class=\"headerlink\" title=\"GC 如何判断对象可以被回收\"></a>GC 如何判断对象可以被回收</h2><h3 id=\"引用计数算法\"><a href=\"#引用计数算法\" class=\"headerlink\" title=\"引用计数算法\"></a>引用计数算法</h3><p>早期Java使用的算法，现已不用。</p>\n<h3 id=\"可达性分析算法\"><a href=\"#可达性分析算法\" class=\"headerlink\" title=\"可达性分析算法\"></a>可达性分析算法</h3><p>以<code>GC Root</code> 作为起始点，向下搜索。走过的路径成为<code>引用链</code>。当一个对象到<code>GC Root</code><br>没有任何引用链相连时，证明对象不可用。<br><strong>Java的<code>GC Root</code>对象包括：</strong></p>\n<ol>\n<li>虚拟机栈（栈帧中的本地变量表中引用对象）</li>\n<li>方法区中类静态属性引用对象</li>\n<li>方法区常量引用对象</li>\n<li>本地方法JNI引用对象</li>\n</ol>\n","excerpt":"","more":"<h2 id=\"GC-如何判断对象可以被回收\"><a href=\"#GC-如何判断对象可以被回收\" class=\"headerlink\" title=\"GC 如何判断对象可以被回收\"></a>GC 如何判断对象可以被回收</h2><h3 id=\"引用计数算法\"><a href=\"#引用计数算法\" class=\"headerlink\" title=\"引用计数算法\"></a>引用计数算法</h3><p>早期Java使用的算法，现已不用。</p>\n<h3 id=\"可达性分析算法\"><a href=\"#可达性分析算法\" class=\"headerlink\" title=\"可达性分析算法\"></a>可达性分析算法</h3><p>以<code>GC Root</code> 作为起始点，向下搜索。走过的路径成为<code>引用链</code>。当一个对象到<code>GC Root</code><br>没有任何引用链相连时，证明对象不可用。<br><strong>Java的<code>GC Root</code>对象包括：</strong></p>\n<ol>\n<li>虚拟机栈（栈帧中的本地变量表中引用对象）</li>\n<li>方法区中类静态属性引用对象</li>\n<li>方法区常量引用对象</li>\n<li>本地方法JNI引用对象</li>\n</ol>\n"},{"title":"[LeetCode]217. Contains Duplicate","date":"2016-11-10T06:44:59.000Z","_content":"### 问题描述 ###\n给定一个整数数组，判断是否包含重复元素，是返回true。\n若都是唯一返回false\n<!-- more -->\n\n### 解题思路 ###\n利用set这种数据结构的特点，只要set后的数据长度不等于原来的数据长度的话，就证明有重复元素，否则证明没有重复元素。\n### 具体代码 ###\n**python**\n```python\nclass Solution(object):\n    def containsDuplicate(self, nums):\n        return len(nums) != len(set(nums))\n```\n\n**Java**\n```java\npublic class Solution {\n    public boolean containsDuplicate(int[] nums) {\n        Set s = new HashSet();\n        for(int n:nums){\n            s.add(n);\n        }\n        if(nums.length != s.size()) return true;\n        return false;\n    }\n}\n```\n","source":"_posts/LeetCode-217-Contains-Duplicate.md","raw":"---\ntitle: '[LeetCode]217. Contains Duplicate'\ndate: 2016-11-10 14:44:59\ncategories: \"Algorithms\"\ntags:\n- 学习\n---\n### 问题描述 ###\n给定一个整数数组，判断是否包含重复元素，是返回true。\n若都是唯一返回false\n<!-- more -->\n\n### 解题思路 ###\n利用set这种数据结构的特点，只要set后的数据长度不等于原来的数据长度的话，就证明有重复元素，否则证明没有重复元素。\n### 具体代码 ###\n**python**\n```python\nclass Solution(object):\n    def containsDuplicate(self, nums):\n        return len(nums) != len(set(nums))\n```\n\n**Java**\n```java\npublic class Solution {\n    public boolean containsDuplicate(int[] nums) {\n        Set s = new HashSet();\n        for(int n:nums){\n            s.add(n);\n        }\n        if(nums.length != s.size()) return true;\n        return false;\n    }\n}\n```\n","slug":"LeetCode-217-Contains-Duplicate","published":1,"updated":"2016-12-07T07:29:09.014Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwyd91ut0002mc73aiza4gw4","content":"<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><p>给定一个整数数组，判断是否包含重复元素，是返回true。<br>若都是唯一返回false<br><a id=\"more\"></a></p>\n<h3 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h3><p>利用set这种数据结构的特点，只要set后的数据长度不等于原来的数据长度的话，就证明有重复元素，否则证明没有重复元素。</p>\n<h3 id=\"具体代码\"><a href=\"#具体代码\" class=\"headerlink\" title=\"具体代码\"></a>具体代码</h3><p><strong>python</strong><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">containsDuplicate</span><span class=\"params\">(self, nums)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> len(nums) != len(set(nums))</span><br></pre></td></tr></table></figure></p>\n<p><strong>Java</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">containsDuplicate</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">        Set s = <span class=\"keyword\">new</span> HashSet();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> n:nums)&#123;</span><br><span class=\"line\">            s.add(n);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums.length != s.size()) <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","excerpt":"<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><p>给定一个整数数组，判断是否包含重复元素，是返回true。<br>若都是唯一返回false<br>","more":"</p>\n<h3 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h3><p>利用set这种数据结构的特点，只要set后的数据长度不等于原来的数据长度的话，就证明有重复元素，否则证明没有重复元素。</p>\n<h3 id=\"具体代码\"><a href=\"#具体代码\" class=\"headerlink\" title=\"具体代码\"></a>具体代码</h3><p><strong>python</strong><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">containsDuplicate</span><span class=\"params\">(self, nums)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> len(nums) != len(set(nums))</span><br></pre></td></tr></table></figure></p>\n<p><strong>Java</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">containsDuplicate</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">        Set s = <span class=\"keyword\">new</span> HashSet();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> n:nums)&#123;</span><br><span class=\"line\">            s.add(n);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums.length != s.size()) <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"[LeetCode]303. Range Sum Query - Immutable","date":"2016-12-07T06:34:39.000Z","_content":"### 问题描述 ###\n给定一个数字数组，求下标在i和j(i ≤ j)之间的元素和\n<!-- more -->\n### 解题思路 ###\n利用一个辅助数组sums[x+1]来存储当前位置与之前元素的累加和\n\n### 具体代码 ###\n**python**\n```python\nclass NumArray(object):\n    def __init__(self,nums):\n        size = len(nums)\n        # 辅助函数sums，计算每个位置与之前的数字累积和\n        self.sums = [0] * (size + 1)\n        for x in range(size):\n            # 当前(x+1)位置元素累积和 = 前一位(累积和)+当前元素\n            self.sums[x + 1] += self.sums[x] + nums[x]\n\n    def sumRange(self,i,j):\n        return self.sums[j+1] - self.sums[i]\n```\n\n**Java**\n```java\npublic class NumArray {\n    public int[] sums;\n    public NumArray(int[] nums) {\n        int size = nums.length;\n        sums = new int[size+1];\n        for(int i=0;i<size;i++){\n            sums[i+1] = sums[i] + nums[i];\n        }\n    }\n\n    public int sumRange(int i, int j) {\n        return sums[j+1] - sums[i];\n    }\n}\n```\n","source":"_posts/LeetCode-303-Range-Sum-Query-Immutable.md","raw":"---\ntitle: '[LeetCode]303. Range Sum Query - Immutable'\ndate: 2016-12-07 14:34:39\ncategories: \"Algorithms\"\ntags:\n- 学习\n---\n### 问题描述 ###\n给定一个数字数组，求下标在i和j(i ≤ j)之间的元素和\n<!-- more -->\n### 解题思路 ###\n利用一个辅助数组sums[x+1]来存储当前位置与之前元素的累加和\n\n### 具体代码 ###\n**python**\n```python\nclass NumArray(object):\n    def __init__(self,nums):\n        size = len(nums)\n        # 辅助函数sums，计算每个位置与之前的数字累积和\n        self.sums = [0] * (size + 1)\n        for x in range(size):\n            # 当前(x+1)位置元素累积和 = 前一位(累积和)+当前元素\n            self.sums[x + 1] += self.sums[x] + nums[x]\n\n    def sumRange(self,i,j):\n        return self.sums[j+1] - self.sums[i]\n```\n\n**Java**\n```java\npublic class NumArray {\n    public int[] sums;\n    public NumArray(int[] nums) {\n        int size = nums.length;\n        sums = new int[size+1];\n        for(int i=0;i<size;i++){\n            sums[i+1] = sums[i] + nums[i];\n        }\n    }\n\n    public int sumRange(int i, int j) {\n        return sums[j+1] - sums[i];\n    }\n}\n```\n","slug":"LeetCode-303-Range-Sum-Query-Immutable","published":1,"updated":"2016-12-07T06:54:51.255Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwyd91vb0006mc73fdlnyu03","content":"<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><p>给定一个数字数组，求下标在i和j(i ≤ j)之间的元素和<br><a id=\"more\"></a></p>\n<h3 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h3><p>利用一个辅助数组sums[x+1]来存储当前位置与之前元素的累加和</p>\n<h3 id=\"具体代码\"><a href=\"#具体代码\" class=\"headerlink\" title=\"具体代码\"></a>具体代码</h3><p><strong>python</strong><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NumArray</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self,nums)</span>:</span></span><br><span class=\"line\">        size = len(nums)</span><br><span class=\"line\">        <span class=\"comment\"># 辅助函数sums，计算每个位置与之前的数字累积和</span></span><br><span class=\"line\">        self.sums = [<span class=\"number\">0</span>] * (size + <span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(size):</span><br><span class=\"line\">            <span class=\"comment\"># 当前(x+1)位置元素累积和 = 前一位(累积和)+当前元素</span></span><br><span class=\"line\">            self.sums[x + <span class=\"number\">1</span>] += self.sums[x] + nums[x]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sumRange</span><span class=\"params\">(self,i,j)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.sums[j+<span class=\"number\">1</span>] - self.sums[i]</span><br></pre></td></tr></table></figure></p>\n<p><strong>Java</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NumArray</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span>[] sums;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">NumArray</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> size = nums.length;</span><br><span class=\"line\">        sums = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[size+<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;size;i++)&#123;</span><br><span class=\"line\">            sums[i+<span class=\"number\">1</span>] = sums[i] + nums[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">sumRange</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> j)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sums[j+<span class=\"number\">1</span>] - sums[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","excerpt":"<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><p>给定一个数字数组，求下标在i和j(i ≤ j)之间的元素和<br>","more":"</p>\n<h3 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h3><p>利用一个辅助数组sums[x+1]来存储当前位置与之前元素的累加和</p>\n<h3 id=\"具体代码\"><a href=\"#具体代码\" class=\"headerlink\" title=\"具体代码\"></a>具体代码</h3><p><strong>python</strong><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NumArray</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self,nums)</span>:</span></span><br><span class=\"line\">        size = len(nums)</span><br><span class=\"line\">        <span class=\"comment\"># 辅助函数sums，计算每个位置与之前的数字累积和</span></span><br><span class=\"line\">        self.sums = [<span class=\"number\">0</span>] * (size + <span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(size):</span><br><span class=\"line\">            <span class=\"comment\"># 当前(x+1)位置元素累积和 = 前一位(累积和)+当前元素</span></span><br><span class=\"line\">            self.sums[x + <span class=\"number\">1</span>] += self.sums[x] + nums[x]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sumRange</span><span class=\"params\">(self,i,j)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.sums[j+<span class=\"number\">1</span>] - self.sums[i]</span><br></pre></td></tr></table></figure></p>\n<p><strong>Java</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NumArray</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span>[] sums;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">NumArray</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> size = nums.length;</span><br><span class=\"line\">        sums = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[size+<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;size;i++)&#123;</span><br><span class=\"line\">            sums[i+<span class=\"number\">1</span>] = sums[i] + nums[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">sumRange</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> j)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sums[j+<span class=\"number\">1</span>] - sums[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"[LeetCode]453.Minimum Moves to Equal Array Elements","date":"2016-11-09T08:21:57.000Z","_content":"### 问题描述 ###\n给定一个长度为n的非空数字数组，每次对n-1个加1。\n求所有元素值相等，需要几次操作。\n<!-- more -->\n\n### 解题思路 ###\n//todo: 插入gif图\n操作次数 = 数组总和 - 数组中最小的数*数组长度\n\n### 具体代码 ###\n**python**\n```python\nclass Solution(object):\n    def minMoves(self, nums):\n        return sum(nums) - min(nums)*len(nums)\n\n```\n\n**java**\n```java\npublic class Solution {\n    public int minMoves(int[] nums) {\n        int min = nums[0];\n        int sum = 0;\n        for(int i: nums){\n            min = Math.min(min,i);\n            sum +=i;\n        }\n        return sum - min*nums.length;\n    }\n}\n```\n","source":"_posts/LeetCode-453-Minimum-Moves-to-Equal-Array-Elements.md","raw":"---\ntitle: '[LeetCode]453.Minimum Moves to Equal Array Elements'\ndate: 2016-11-09 16:21:57\ncategories: \"Algorithms\"\ntags:\n- 学习\n---\n### 问题描述 ###\n给定一个长度为n的非空数字数组，每次对n-1个加1。\n求所有元素值相等，需要几次操作。\n<!-- more -->\n\n### 解题思路 ###\n//todo: 插入gif图\n操作次数 = 数组总和 - 数组中最小的数*数组长度\n\n### 具体代码 ###\n**python**\n```python\nclass Solution(object):\n    def minMoves(self, nums):\n        return sum(nums) - min(nums)*len(nums)\n\n```\n\n**java**\n```java\npublic class Solution {\n    public int minMoves(int[] nums) {\n        int min = nums[0];\n        int sum = 0;\n        for(int i: nums){\n            min = Math.min(min,i);\n            sum +=i;\n        }\n        return sum - min*nums.length;\n    }\n}\n```\n","slug":"LeetCode-453-Minimum-Moves-to-Equal-Array-Elements","published":1,"updated":"2016-12-07T06:44:15.266Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwyd91vg0008mc733xcx8kyc","content":"<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><p>给定一个长度为n的非空数字数组，每次对n-1个加1。<br>求所有元素值相等，需要几次操作。<br><a id=\"more\"></a></p>\n<h3 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h3><p>//todo: 插入gif图<br>操作次数 = 数组总和 - 数组中最小的数*数组长度</p>\n<h3 id=\"具体代码\"><a href=\"#具体代码\" class=\"headerlink\" title=\"具体代码\"></a>具体代码</h3><p><strong>python</strong><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">minMoves</span><span class=\"params\">(self, nums)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> sum(nums) - min(nums)*len(nums)</span><br></pre></td></tr></table></figure></p>\n<p><strong>java</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">minMoves</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> min = nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i: nums)&#123;</span><br><span class=\"line\">            min = Math.min(min,i);</span><br><span class=\"line\">            sum +=i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sum - min*nums.length;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","excerpt":"<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><p>给定一个长度为n的非空数字数组，每次对n-1个加1。<br>求所有元素值相等，需要几次操作。<br>","more":"</p>\n<h3 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h3><p>//todo: 插入gif图<br>操作次数 = 数组总和 - 数组中最小的数*数组长度</p>\n<h3 id=\"具体代码\"><a href=\"#具体代码\" class=\"headerlink\" title=\"具体代码\"></a>具体代码</h3><p><strong>python</strong><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">minMoves</span><span class=\"params\">(self, nums)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> sum(nums) - min(nums)*len(nums)</span><br></pre></td></tr></table></figure></p>\n<p><strong>java</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">minMoves</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> min = nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i: nums)&#123;</span><br><span class=\"line\">            min = Math.min(min,i);</span><br><span class=\"line\">            sum +=i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sum - min*nums.length;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"[LeetCode]74. Search a 2D Matrix","date":"2016-12-21T02:42:05.000Z","_content":"### 问题描述 ###\n在一个二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。\n\n### 解题思路 ###\n一开始打算用二分查找的方式，将二维数组划分成两部分，递归判断。实际写出来的时候就发现，二维数组并不好去判断值。后来在网上看到一个更好的方法。\n\n| | | | |\n| :---: |:---:| :---:| :---:|\n|1|3|5|7|\n|10|11|16|20|\n|23|30|34|50|\n\n### 具体代码 ###\n**python**\n```python\n\n\n```\n**java**\n```java\n\n\n```\n","source":"_posts/LeetCode-74-Search-a-2D-Matrix.md","raw":"---\ntitle: '[LeetCode]74. Search a 2D Matrix'\ndate: 2016-12-21 10:42:05\ncategories: \"Algorithms\"\ntags:\n- 学习\n---\n### 问题描述 ###\n在一个二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。\n\n### 解题思路 ###\n一开始打算用二分查找的方式，将二维数组划分成两部分，递归判断。实际写出来的时候就发现，二维数组并不好去判断值。后来在网上看到一个更好的方法。\n\n| | | | |\n| :---: |:---:| :---:| :---:|\n|1|3|5|7|\n|10|11|16|20|\n|23|30|34|50|\n\n### 具体代码 ###\n**python**\n```python\n\n\n```\n**java**\n```java\n\n\n```\n","slug":"LeetCode-74-Search-a-2D-Matrix","published":1,"updated":"2016-12-21T03:34:51.057Z","_id":"ciwyd91vj000amc73v6bpsz6h","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><p>在一个二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。</p>\n<h3 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h3><p>一开始打算用二分查找的方式，将二维数组划分成两部分，递归判断。实际写出来的时候就发现，二维数组并不好去判断值。后来在网上看到一个更好的方法。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">7</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">11</td>\n<td style=\"text-align:center\">16</td>\n<td style=\"text-align:center\">20</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">23</td>\n<td style=\"text-align:center\">30</td>\n<td style=\"text-align:center\">34</td>\n<td style=\"text-align:center\">50</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"具体代码\"><a href=\"#具体代码\" class=\"headerlink\" title=\"具体代码\"></a>具体代码</h3><p><strong>python</strong><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p><strong>java</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><p>在一个二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。</p>\n<h3 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h3><p>一开始打算用二分查找的方式，将二维数组划分成两部分，递归判断。实际写出来的时候就发现，二维数组并不好去判断值。后来在网上看到一个更好的方法。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">7</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">11</td>\n<td style=\"text-align:center\">16</td>\n<td style=\"text-align:center\">20</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">23</td>\n<td style=\"text-align:center\">30</td>\n<td style=\"text-align:center\">34</td>\n<td style=\"text-align:center\">50</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"具体代码\"><a href=\"#具体代码\" class=\"headerlink\" title=\"具体代码\"></a>具体代码</h3><p><strong>python</strong><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p><strong>java</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n"},{"title":"[LeetCode]290. Word Pattern","date":"2016-12-12T08:48:27.000Z","_content":"### 问题描述 ###\n给定一个模式pattern和一个字符串str，判断str是否满足相同的pattern。\n例如：\npattern = \"abba\", str = \"dog cat cat dog\" 则返回 true.\n<!-- more -->\n\n### 解题思路 ###\n判断pattern，str每个元素出现的下标，求得的数组相等即返回true\n### 具体代码 ###\n**python**\n```python\nclass Solution(object):\n    def wordPattern(self, pattern, str):\n        p = pattern\n        s = str.split()\n        return map(p.find,p) == map(s.index,s)\n\n```\n**Java**\n```java\npublic class Solution {\n    public boolean wordPattern(String pattern, String str) {\n        String[] words = str.split(\" \");\n        if(pattern.length() != words.length) return false;\n        Set<String> set = new HashSet<String>();\n        Map<Character,String> map = new HashMap<Character,String>();\n        for(int i=0;i<words.length;i++){\n            char p = pattern.charAt(i);\n            if (map.containsKey(p)){\n                if(!map.get(p).equals(words[i])) return false;\n            }else {\n                if (set.contains(words[i])) return false;\n                map.put(p,words[i]);\n                set.add(words[i]);\n            }\n        }\n        return true;\n    }\n}\n```\n","source":"_posts/LeetCode-290-Word-Pattern.md","raw":"---\ntitle: '[LeetCode]290. Word Pattern'\ndate: 2016-12-12 16:48:27\ncategories: \"Algorithms\"\ntags:\n- 学习\n---\n### 问题描述 ###\n给定一个模式pattern和一个字符串str，判断str是否满足相同的pattern。\n例如：\npattern = \"abba\", str = \"dog cat cat dog\" 则返回 true.\n<!-- more -->\n\n### 解题思路 ###\n判断pattern，str每个元素出现的下标，求得的数组相等即返回true\n### 具体代码 ###\n**python**\n```python\nclass Solution(object):\n    def wordPattern(self, pattern, str):\n        p = pattern\n        s = str.split()\n        return map(p.find,p) == map(s.index,s)\n\n```\n**Java**\n```java\npublic class Solution {\n    public boolean wordPattern(String pattern, String str) {\n        String[] words = str.split(\" \");\n        if(pattern.length() != words.length) return false;\n        Set<String> set = new HashSet<String>();\n        Map<Character,String> map = new HashMap<Character,String>();\n        for(int i=0;i<words.length;i++){\n            char p = pattern.charAt(i);\n            if (map.containsKey(p)){\n                if(!map.get(p).equals(words[i])) return false;\n            }else {\n                if (set.contains(words[i])) return false;\n                map.put(p,words[i]);\n                set.add(words[i]);\n            }\n        }\n        return true;\n    }\n}\n```\n","slug":"LeetCode-290-Word-Pattern","published":1,"updated":"2016-12-14T00:45:13.632Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwyd91vx000dmc73zdrlaf0a","content":"<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><p>给定一个模式pattern和一个字符串str，判断str是否满足相同的pattern。<br>例如：<br>pattern = “abba”, str = “dog cat cat dog” 则返回 true.<br><a id=\"more\"></a></p>\n<h3 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h3><p>判断pattern，str每个元素出现的下标，求得的数组相等即返回true</p>\n<h3 id=\"具体代码\"><a href=\"#具体代码\" class=\"headerlink\" title=\"具体代码\"></a>具体代码</h3><p><strong>python</strong><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wordPattern</span><span class=\"params\">(self, pattern, str)</span>:</span></span><br><span class=\"line\">        p = pattern</span><br><span class=\"line\">        s = str.split()</span><br><span class=\"line\">        <span class=\"keyword\">return</span> map(p.find,p) == map(s.index,s)</span><br></pre></td></tr></table></figure></p>\n<p><strong>Java</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">wordPattern</span><span class=\"params\">(String pattern, String str)</span> </span>&#123;</span><br><span class=\"line\">        String[] words = str.split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(pattern.length() != words.length) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        Set&lt;String&gt; set = <span class=\"keyword\">new</span> HashSet&lt;String&gt;();</span><br><span class=\"line\">        Map&lt;Character,String&gt; map = <span class=\"keyword\">new</span> HashMap&lt;Character,String&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;words.length;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">char</span> p = pattern.charAt(i);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (map.containsKey(p))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(!map.get(p).equals(words[i])) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (set.contains(words[i])) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                map.put(p,words[i]);</span><br><span class=\"line\">                set.add(words[i]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","excerpt":"<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><p>给定一个模式pattern和一个字符串str，判断str是否满足相同的pattern。<br>例如：<br>pattern = “abba”, str = “dog cat cat dog” 则返回 true.<br>","more":"</p>\n<h3 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h3><p>判断pattern，str每个元素出现的下标，求得的数组相等即返回true</p>\n<h3 id=\"具体代码\"><a href=\"#具体代码\" class=\"headerlink\" title=\"具体代码\"></a>具体代码</h3><p><strong>python</strong><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wordPattern</span><span class=\"params\">(self, pattern, str)</span>:</span></span><br><span class=\"line\">        p = pattern</span><br><span class=\"line\">        s = str.split()</span><br><span class=\"line\">        <span class=\"keyword\">return</span> map(p.find,p) == map(s.index,s)</span><br></pre></td></tr></table></figure></p>\n<p><strong>Java</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">wordPattern</span><span class=\"params\">(String pattern, String str)</span> </span>&#123;</span><br><span class=\"line\">        String[] words = str.split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(pattern.length() != words.length) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        Set&lt;String&gt; set = <span class=\"keyword\">new</span> HashSet&lt;String&gt;();</span><br><span class=\"line\">        Map&lt;Character,String&gt; map = <span class=\"keyword\">new</span> HashMap&lt;Character,String&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;words.length;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">char</span> p = pattern.charAt(i);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (map.containsKey(p))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(!map.get(p).equals(words[i])) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (set.contains(words[i])) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                map.put(p,words[i]);</span><br><span class=\"line\">                set.add(words[i]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"[LeetCode]463. Island Perimeter","date":"2016-11-23T02:01:55.000Z","_content":"\n### 问题描述 ###\n给定一个二维地图，1表示陆地，0表示水域。每一个陆地\n是边长为1的正方形。求岛屿的周长。\n<!-- more -->\n\n### 解题思路 ###\n每个格子周长为4，两个格子相邻时周长-2\n### 具体代码 ###\n**python**\n```python\nclass Solution(object):\n    def islandPerimeter(self, grid):\n        ans = 0\n        h = len(grid)\n        w = len(grid[0]) if h else 0\n        for x in range(h):\n            for y in range(w):\n                if grid[x][y] == 1:\n                    ans += 4\n                    if x > 0 and grid[x-1][y]:\n                        ans -= 2\n                    if y > 0 and grid[x][y-1]:\n                        ans -= 2\n        return ans\n```\n\n**Java**\n```java\npublic class Solution {\n    public int islandPerimeter(int[][] grid) {\n        int ans = 0;\n        int h = g.length;\n        int w = g[0].length;\n        for(int i=0;i<h;i++){\n            for (int j=0;j<w;j++){\n                if (g[i][j] == 1){\n                    ans += 4;\n                    if(i > 0 && g[i-1][j] == 1) ans -= 2;\n                    if(j > 0 && g[i][j-1] == 1) ans -= 2;\n                }\n            }\n        }\n        return ans\n    }\n}\n```\n","source":"_posts/LeetCode-463-Island-Perimeter.md","raw":"---\ntitle: '[LeetCode]463. Island Perimeter'\ndate: 2016-11-23 10:01:55\ncategories: \"Algorithms\"\ntags:\n- 学习\n---\n\n### 问题描述 ###\n给定一个二维地图，1表示陆地，0表示水域。每一个陆地\n是边长为1的正方形。求岛屿的周长。\n<!-- more -->\n\n### 解题思路 ###\n每个格子周长为4，两个格子相邻时周长-2\n### 具体代码 ###\n**python**\n```python\nclass Solution(object):\n    def islandPerimeter(self, grid):\n        ans = 0\n        h = len(grid)\n        w = len(grid[0]) if h else 0\n        for x in range(h):\n            for y in range(w):\n                if grid[x][y] == 1:\n                    ans += 4\n                    if x > 0 and grid[x-1][y]:\n                        ans -= 2\n                    if y > 0 and grid[x][y-1]:\n                        ans -= 2\n        return ans\n```\n\n**Java**\n```java\npublic class Solution {\n    public int islandPerimeter(int[][] grid) {\n        int ans = 0;\n        int h = g.length;\n        int w = g[0].length;\n        for(int i=0;i<h;i++){\n            for (int j=0;j<w;j++){\n                if (g[i][j] == 1){\n                    ans += 4;\n                    if(i > 0 && g[i-1][j] == 1) ans -= 2;\n                    if(j > 0 && g[i][j-1] == 1) ans -= 2;\n                }\n            }\n        }\n        return ans\n    }\n}\n```\n","slug":"LeetCode-463-Island-Perimeter","published":1,"updated":"2016-12-07T06:43:48.683Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwyd91w4000hmc73mwo8x6pq","content":"<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><p>给定一个二维地图，1表示陆地，0表示水域。每一个陆地<br>是边长为1的正方形。求岛屿的周长。<br><a id=\"more\"></a></p>\n<h3 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h3><p>每个格子周长为4，两个格子相邻时周长-2</p>\n<h3 id=\"具体代码\"><a href=\"#具体代码\" class=\"headerlink\" title=\"具体代码\"></a>具体代码</h3><p><strong>python</strong><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">islandPerimeter</span><span class=\"params\">(self, grid)</span>:</span></span><br><span class=\"line\">        ans = <span class=\"number\">0</span></span><br><span class=\"line\">        h = len(grid)</span><br><span class=\"line\">        w = len(grid[<span class=\"number\">0</span>]) <span class=\"keyword\">if</span> h <span class=\"keyword\">else</span> <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(h):</span><br><span class=\"line\">            <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> range(w):</span><br><span class=\"line\">                <span class=\"keyword\">if</span> grid[x][y] == <span class=\"number\">1</span>:</span><br><span class=\"line\">                    ans += <span class=\"number\">4</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> x &gt; <span class=\"number\">0</span> <span class=\"keyword\">and</span> grid[x<span class=\"number\">-1</span>][y]:</span><br><span class=\"line\">                        ans -= <span class=\"number\">2</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> y &gt; <span class=\"number\">0</span> <span class=\"keyword\">and</span> grid[x][y<span class=\"number\">-1</span>]:</span><br><span class=\"line\">                        ans -= <span class=\"number\">2</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans</span><br></pre></td></tr></table></figure></p>\n<p><strong>Java</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">islandPerimeter</span><span class=\"params\">(<span class=\"keyword\">int</span>[][] grid)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> h = g.length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> w = g[<span class=\"number\">0</span>].length;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;h;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;w;j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (g[i][j] == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                    ans += <span class=\"number\">4</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(i &gt; <span class=\"number\">0</span> &amp;&amp; g[i-<span class=\"number\">1</span>][j] == <span class=\"number\">1</span>) ans -= <span class=\"number\">2</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(j &gt; <span class=\"number\">0</span> &amp;&amp; g[i][j-<span class=\"number\">1</span>] == <span class=\"number\">1</span>) ans -= <span class=\"number\">2</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","excerpt":"<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><p>给定一个二维地图，1表示陆地，0表示水域。每一个陆地<br>是边长为1的正方形。求岛屿的周长。<br>","more":"</p>\n<h3 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h3><p>每个格子周长为4，两个格子相邻时周长-2</p>\n<h3 id=\"具体代码\"><a href=\"#具体代码\" class=\"headerlink\" title=\"具体代码\"></a>具体代码</h3><p><strong>python</strong><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">islandPerimeter</span><span class=\"params\">(self, grid)</span>:</span></span><br><span class=\"line\">        ans = <span class=\"number\">0</span></span><br><span class=\"line\">        h = len(grid)</span><br><span class=\"line\">        w = len(grid[<span class=\"number\">0</span>]) <span class=\"keyword\">if</span> h <span class=\"keyword\">else</span> <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(h):</span><br><span class=\"line\">            <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> range(w):</span><br><span class=\"line\">                <span class=\"keyword\">if</span> grid[x][y] == <span class=\"number\">1</span>:</span><br><span class=\"line\">                    ans += <span class=\"number\">4</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> x &gt; <span class=\"number\">0</span> <span class=\"keyword\">and</span> grid[x<span class=\"number\">-1</span>][y]:</span><br><span class=\"line\">                        ans -= <span class=\"number\">2</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> y &gt; <span class=\"number\">0</span> <span class=\"keyword\">and</span> grid[x][y<span class=\"number\">-1</span>]:</span><br><span class=\"line\">                        ans -= <span class=\"number\">2</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans</span><br></pre></td></tr></table></figure></p>\n<p><strong>Java</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">islandPerimeter</span><span class=\"params\">(<span class=\"keyword\">int</span>[][] grid)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> h = g.length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> w = g[<span class=\"number\">0</span>].length;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;h;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;w;j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (g[i][j] == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                    ans += <span class=\"number\">4</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(i &gt; <span class=\"number\">0</span> &amp;&amp; g[i-<span class=\"number\">1</span>][j] == <span class=\"number\">1</span>) ans -= <span class=\"number\">2</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(j &gt; <span class=\"number\">0</span> &amp;&amp; g[i][j-<span class=\"number\">1</span>] == <span class=\"number\">1</span>) ans -= <span class=\"number\">2</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"Python一些小技巧","date":"2016-10-10T07:31:11.000Z","_content":"\n\n## 列表 ##\n### 排序 ###\n1. 列表和字典的混合排序\n<!-- more -->\n```python\npersons = [{'name':'zhang3','age':15},{'name':'li4','age':12}]\npersons.sort(lambda a,b:a['age']-b['age']) # 按照年龄排序\n```\n\n### 两个列表的差异 ###\n1. 交集\n```python\na = [1,2,3]\nb = [2,3,4]\nvalue = [v for v in a if v in b]\n```\n\n2. 差集\n```python\n...\nvalue = [v for v in a if not v in b]\n```\n\n## 日期 ##\n### datetime ###\n1. 获得今天时间凌晨，格式：'2016-11-02 00:00:00'\n```python\nnow = datetime.datetime.today().replace(hour=0,minute=0,second=0,microsecond=0)\n```\n","source":"_posts/Python一些小技巧.md","raw":"---\ntitle: Python一些小技巧\ndate: 2016-10-10 15:31:11\ncategories: \"Python\"\ntags:\n- 学习\n---\n\n\n## 列表 ##\n### 排序 ###\n1. 列表和字典的混合排序\n<!-- more -->\n```python\npersons = [{'name':'zhang3','age':15},{'name':'li4','age':12}]\npersons.sort(lambda a,b:a['age']-b['age']) # 按照年龄排序\n```\n\n### 两个列表的差异 ###\n1. 交集\n```python\na = [1,2,3]\nb = [2,3,4]\nvalue = [v for v in a if v in b]\n```\n\n2. 差集\n```python\n...\nvalue = [v for v in a if not v in b]\n```\n\n## 日期 ##\n### datetime ###\n1. 获得今天时间凌晨，格式：'2016-11-02 00:00:00'\n```python\nnow = datetime.datetime.today().replace(hour=0,minute=0,second=0,microsecond=0)\n```\n","slug":"Python一些小技巧","published":1,"updated":"2016-11-02T01:43:16.414Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwyd91wa000kmc73fai11kik","content":"<h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><h3 id=\"排序\"><a href=\"#排序\" class=\"headerlink\" title=\"排序\"></a>排序</h3><ol>\n<li>列表和字典的混合排序<a id=\"more\"></a>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">persons = [&#123;<span class=\"string\">'name'</span>:<span class=\"string\">'zhang3'</span>,<span class=\"string\">'age'</span>:<span class=\"number\">15</span>&#125;,&#123;<span class=\"string\">'name'</span>:<span class=\"string\">'li4'</span>,<span class=\"string\">'age'</span>:<span class=\"number\">12</span>&#125;]</span><br><span class=\"line\">persons.sort(<span class=\"keyword\">lambda</span> a,b:a[<span class=\"string\">'age'</span>]-b[<span class=\"string\">'age'</span>]) <span class=\"comment\"># 按照年龄排序</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"两个列表的差异\"><a href=\"#两个列表的差异\" class=\"headerlink\" title=\"两个列表的差异\"></a>两个列表的差异</h3><ol>\n<li><p>交集</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\">b = [<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\">value = [v <span class=\"keyword\">for</span> v <span class=\"keyword\">in</span> a <span class=\"keyword\">if</span> v <span class=\"keyword\">in</span> b]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>差集</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">value = [v <span class=\"keyword\">for</span> v <span class=\"keyword\">in</span> a <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> v <span class=\"keyword\">in</span> b]</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"日期\"><a href=\"#日期\" class=\"headerlink\" title=\"日期\"></a>日期</h2><h3 id=\"datetime\"><a href=\"#datetime\" class=\"headerlink\" title=\"datetime\"></a>datetime</h3><ol>\n<li>获得今天时间凌晨，格式：’2016-11-02 00:00:00’<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">now = datetime.datetime.today().replace(hour=<span class=\"number\">0</span>,minute=<span class=\"number\">0</span>,second=<span class=\"number\">0</span>,microsecond=<span class=\"number\">0</span>)</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","excerpt":"<h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><h3 id=\"排序\"><a href=\"#排序\" class=\"headerlink\" title=\"排序\"></a>排序</h3><ol>\n<li>列表和字典的混合排序","more":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">persons = [&#123;<span class=\"string\">'name'</span>:<span class=\"string\">'zhang3'</span>,<span class=\"string\">'age'</span>:<span class=\"number\">15</span>&#125;,&#123;<span class=\"string\">'name'</span>:<span class=\"string\">'li4'</span>,<span class=\"string\">'age'</span>:<span class=\"number\">12</span>&#125;]</span><br><span class=\"line\">persons.sort(<span class=\"keyword\">lambda</span> a,b:a[<span class=\"string\">'age'</span>]-b[<span class=\"string\">'age'</span>]) <span class=\"comment\"># 按照年龄排序</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"两个列表的差异\"><a href=\"#两个列表的差异\" class=\"headerlink\" title=\"两个列表的差异\"></a>两个列表的差异</h3><ol>\n<li><p>交集</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\">b = [<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\">value = [v <span class=\"keyword\">for</span> v <span class=\"keyword\">in</span> a <span class=\"keyword\">if</span> v <span class=\"keyword\">in</span> b]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>差集</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">value = [v <span class=\"keyword\">for</span> v <span class=\"keyword\">in</span> a <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> v <span class=\"keyword\">in</span> b]</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"日期\"><a href=\"#日期\" class=\"headerlink\" title=\"日期\"></a>日期</h2><h3 id=\"datetime\"><a href=\"#datetime\" class=\"headerlink\" title=\"datetime\"></a>datetime</h3><ol>\n<li>获得今天时间凌晨，格式：’2016-11-02 00:00:00’<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">now = datetime.datetime.today().replace(hour=<span class=\"number\">0</span>,minute=<span class=\"number\">0</span>,second=<span class=\"number\">0</span>,microsecond=<span class=\"number\">0</span>)</span><br></pre></td></tr></table></figure>\n</li>\n</ol>"},{"title":"SQL 生成10万条测试数据","date":"2016-08-18T03:03:00.000Z","_content":"### 循环插入10万条测试数据 ###\n```sql\ndeclare @i int\nset @i=1\nwhile @i<100000\nbegin\n    insert into test(title,date_time) values('test'+cast(@i as nvarchar(10)),getdate())\n    set @i=@i+1\nend\ngo\n\n```\n**注意**:  \n1. `cast()`函数是强制类型转换与`convert()`用法一致\n2. `declare` 用于声明变量\n<!-- more -->\n","source":"_posts/SQL-生成10万条测试数据.md","raw":"---\ntitle: SQL 生成10万条测试数据\ndate: 2016-08-18 11:03:00\ncategories: \"SQL\"\n---\n### 循环插入10万条测试数据 ###\n```sql\ndeclare @i int\nset @i=1\nwhile @i<100000\nbegin\n    insert into test(title,date_time) values('test'+cast(@i as nvarchar(10)),getdate())\n    set @i=@i+1\nend\ngo\n\n```\n**注意**:  \n1. `cast()`函数是强制类型转换与`convert()`用法一致\n2. `declare` 用于声明变量\n<!-- more -->\n","slug":"SQL-生成10万条测试数据","published":1,"updated":"2016-12-13T03:52:51.801Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwyd91wd000nmc73z37u7qf0","content":"<h3 id=\"循环插入10万条测试数据\"><a href=\"#循环插入10万条测试数据\" class=\"headerlink\" title=\"循环插入10万条测试数据\"></a>循环插入10万条测试数据</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span> @i <span class=\"built_in\">int</span></span><br><span class=\"line\"><span class=\"keyword\">set</span> @i=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> @i&lt;<span class=\"number\">100000</span></span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">    <span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> <span class=\"keyword\">test</span>(title,date_time) <span class=\"keyword\">values</span>(<span class=\"string\">'test'</span>+<span class=\"keyword\">cast</span>(@i <span class=\"keyword\">as</span> <span class=\"keyword\">nvarchar</span>(<span class=\"number\">10</span>)),<span class=\"keyword\">getdate</span>())</span><br><span class=\"line\">    <span class=\"keyword\">set</span> @i=@i+<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">go</span></span><br></pre></td></tr></table></figure>\n<p><strong>注意</strong>:  </p>\n<ol>\n<li><code>cast()</code>函数是强制类型转换与<code>convert()</code>用法一致</li>\n<li><code>declare</code> 用于声明变量<a id=\"more\"></a>\n</li>\n</ol>\n","excerpt":"<h3 id=\"循环插入10万条测试数据\"><a href=\"#循环插入10万条测试数据\" class=\"headerlink\" title=\"循环插入10万条测试数据\"></a>循环插入10万条测试数据</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span> @i <span class=\"built_in\">int</span></span><br><span class=\"line\"><span class=\"keyword\">set</span> @i=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> @i&lt;<span class=\"number\">100000</span></span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">    <span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> <span class=\"keyword\">test</span>(title,date_time) <span class=\"keyword\">values</span>(<span class=\"string\">'test'</span>+<span class=\"keyword\">cast</span>(@i <span class=\"keyword\">as</span> <span class=\"keyword\">nvarchar</span>(<span class=\"number\">10</span>)),<span class=\"keyword\">getdate</span>())</span><br><span class=\"line\">    <span class=\"keyword\">set</span> @i=@i+<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">go</span></span><br></pre></td></tr></table></figure>\n<p><strong>注意</strong>:  </p>\n<ol>\n<li><code>cast()</code>函数是强制类型转换与<code>convert()</code>用法一致</li>\n<li><code>declare</code> 用于声明变量","more":"</li>\n</ol>"},{"title":"Vim使用技巧","date":"2016-05-19T00:41:57.000Z","_content":"最近在学习Linux操作系统，顺带的把Vim也稍微的学了一下。下面记录一些常用的Vim操作命令\n。\n\n## Vim移动命令 ##\n\n* k,j,h,l 分别是移动光标：上下左右\n* Ctrl + b / Ctrl + f 分别是上翻一页，下翻一页\n* gg 移动到文档首\n* G 移动到文档末\n","source":"_posts/vim使用技巧.md","raw":"---\ntitle: Vim使用技巧\ndate: 2016-05-19 08:41:57\ncategories: \"Linux\"\ntags:\n- 学习\n- vim\n---\n最近在学习Linux操作系统，顺带的把Vim也稍微的学了一下。下面记录一些常用的Vim操作命令\n。\n\n## Vim移动命令 ##\n\n* k,j,h,l 分别是移动光标：上下左右\n* Ctrl + b / Ctrl + f 分别是上翻一页，下翻一页\n* gg 移动到文档首\n* G 移动到文档末\n","slug":"vim使用技巧","published":1,"updated":"2016-10-24T07:21:54.799Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwyd91wk000rmc73a0uki7ps","content":"<p>最近在学习Linux操作系统，顺带的把Vim也稍微的学了一下。下面记录一些常用的Vim操作命令<br>。</p>\n<h2 id=\"Vim移动命令\"><a href=\"#Vim移动命令\" class=\"headerlink\" title=\"Vim移动命令\"></a>Vim移动命令</h2><ul>\n<li>k,j,h,l 分别是移动光标：上下左右</li>\n<li>Ctrl + b / Ctrl + f 分别是上翻一页，下翻一页</li>\n<li>gg 移动到文档首</li>\n<li>G 移动到文档末</li>\n</ul>\n","excerpt":"","more":"<p>最近在学习Linux操作系统，顺带的把Vim也稍微的学了一下。下面记录一些常用的Vim操作命令<br>。</p>\n<h2 id=\"Vim移动命令\"><a href=\"#Vim移动命令\" class=\"headerlink\" title=\"Vim移动命令\"></a>Vim移动命令</h2><ul>\n<li>k,j,h,l 分别是移动光标：上下左右</li>\n<li>Ctrl + b / Ctrl + f 分别是上翻一页，下翻一页</li>\n<li>gg 移动到文档首</li>\n<li>G 移动到文档末</li>\n</ul>\n"},{"title":"windows 下使用Virtualenv 管理Python项目","date":"2016-05-09T14:57:21.000Z","_content":"\n### 为什么使用virtualenv ###\n\n我们在使用python时可能会遇到在一台电脑同时装不同的版本Python或者装不同版本的第三方依赖。\n这时候就可以用virtualenv来隔绝项目之间第三方依赖。\n此外，virtualenv还可以把开发环境打包。一键部署到其他地方。\n\n## windows 环境安装virtualenv ##\n**先决条件：**\n1. 已经安装Python\n2. 已经安装pip或easy_install\n<!-- more -->\n### 安装virtual ###\n（假定按在D:\\env文件夹下）\n```bash\nD:\\env> pip install virtualenv\nD:\\env> pip install virtualenvwrapper\n```\n### 创建一个虚拟环境 ###\n```bash\nD:\\env> mkvirtualenv env\nNew python executable in D:\\workspace\\env1\\Scripts\\python.exe\nInstalling setuptools, pip, wheel...done.\n```\n\n创建完成后我们可以使用`lsvirtualenv`查看已经创建的虚拟环境\n\n```bash\nD:\\env>lsvirtualenv\n\ndir /b /ad \"D:\\env\"\n========================================\nenv\n```\n\n可以利用`workon 虚拟环境名字`来切环境\n\n### 常用操作 ###\n\n1. 激活虚拟环境 `workon env`\n2. 退出虚拟环境`deactivate`\n3. 查看当前虚拟环境安装的所有软件包`pip list`\n\n### 结束 ###\n那么，愉快的用pip去装各种各样的依赖包吧！\n","source":"_posts/windows-下使用Virtualenv-管理Python项目.md","raw":"---\ntitle: windows 下使用Virtualenv 管理Python项目\ndate: 2016-05-09 22:57:21\ncategories: \"工具配置\"\ntags: \n- Virtualenv\n- Python\n---\n\n### 为什么使用virtualenv ###\n\n我们在使用python时可能会遇到在一台电脑同时装不同的版本Python或者装不同版本的第三方依赖。\n这时候就可以用virtualenv来隔绝项目之间第三方依赖。\n此外，virtualenv还可以把开发环境打包。一键部署到其他地方。\n\n## windows 环境安装virtualenv ##\n**先决条件：**\n1. 已经安装Python\n2. 已经安装pip或easy_install\n<!-- more -->\n### 安装virtual ###\n（假定按在D:\\env文件夹下）\n```bash\nD:\\env> pip install virtualenv\nD:\\env> pip install virtualenvwrapper\n```\n### 创建一个虚拟环境 ###\n```bash\nD:\\env> mkvirtualenv env\nNew python executable in D:\\workspace\\env1\\Scripts\\python.exe\nInstalling setuptools, pip, wheel...done.\n```\n\n创建完成后我们可以使用`lsvirtualenv`查看已经创建的虚拟环境\n\n```bash\nD:\\env>lsvirtualenv\n\ndir /b /ad \"D:\\env\"\n========================================\nenv\n```\n\n可以利用`workon 虚拟环境名字`来切环境\n\n### 常用操作 ###\n\n1. 激活虚拟环境 `workon env`\n2. 退出虚拟环境`deactivate`\n3. 查看当前虚拟环境安装的所有软件包`pip list`\n\n### 结束 ###\n那么，愉快的用pip去装各种各样的依赖包吧！\n","slug":"windows-下使用Virtualenv-管理Python项目","published":1,"updated":"2016-10-24T07:20:38.037Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwyd91wn000umc73o3g20r40","content":"<h3 id=\"为什么使用virtualenv\"><a href=\"#为什么使用virtualenv\" class=\"headerlink\" title=\"为什么使用virtualenv\"></a>为什么使用virtualenv</h3><p>我们在使用python时可能会遇到在一台电脑同时装不同的版本Python或者装不同版本的第三方依赖。<br>这时候就可以用virtualenv来隔绝项目之间第三方依赖。<br>此外，virtualenv还可以把开发环境打包。一键部署到其他地方。</p>\n<h2 id=\"windows-环境安装virtualenv\"><a href=\"#windows-环境安装virtualenv\" class=\"headerlink\" title=\"windows 环境安装virtualenv\"></a>windows 环境安装virtualenv</h2><p><strong>先决条件：</strong></p>\n<ol>\n<li>已经安装Python</li>\n<li>已经安装pip或easy_install<a id=\"more\"></a>\n<h3 id=\"安装virtual\"><a href=\"#安装virtual\" class=\"headerlink\" title=\"安装virtual\"></a>安装virtual</h3>（假定按在D:\\env文件夹下）<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:\\env&gt; pip install virtualenv</span><br><span class=\"line\">D:\\env&gt; pip install virtualenvwrapper</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"创建一个虚拟环境\"><a href=\"#创建一个虚拟环境\" class=\"headerlink\" title=\"创建一个虚拟环境\"></a>创建一个虚拟环境</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:\\env&gt; mkvirtualenv env</span><br><span class=\"line\">New python executable <span class=\"keyword\">in</span> D:\\workspace\\env1\\Scripts\\python.exe</span><br><span class=\"line\">Installing setuptools, pip, wheel...done.</span><br></pre></td></tr></table></figure>\n<p>创建完成后我们可以使用<code>lsvirtualenv</code>查看已经创建的虚拟环境</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:\\env&gt;lsvirtualenv</span><br><span class=\"line\"></span><br><span class=\"line\">dir /b /ad <span class=\"string\">\"D:\\env\"</span></span><br><span class=\"line\">========================================</span><br><span class=\"line\">env</span><br></pre></td></tr></table></figure>\n<p>可以利用<code>workon 虚拟环境名字</code>来切环境</p>\n<h3 id=\"常用操作\"><a href=\"#常用操作\" class=\"headerlink\" title=\"常用操作\"></a>常用操作</h3><ol>\n<li>激活虚拟环境 <code>workon env</code></li>\n<li>退出虚拟环境<code>deactivate</code></li>\n<li>查看当前虚拟环境安装的所有软件包<code>pip list</code></li>\n</ol>\n<h3 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h3><p>那么，愉快的用pip去装各种各样的依赖包吧！</p>\n","excerpt":"<h3 id=\"为什么使用virtualenv\"><a href=\"#为什么使用virtualenv\" class=\"headerlink\" title=\"为什么使用virtualenv\"></a>为什么使用virtualenv</h3><p>我们在使用python时可能会遇到在一台电脑同时装不同的版本Python或者装不同版本的第三方依赖。<br>这时候就可以用virtualenv来隔绝项目之间第三方依赖。<br>此外，virtualenv还可以把开发环境打包。一键部署到其他地方。</p>\n<h2 id=\"windows-环境安装virtualenv\"><a href=\"#windows-环境安装virtualenv\" class=\"headerlink\" title=\"windows 环境安装virtualenv\"></a>windows 环境安装virtualenv</h2><p><strong>先决条件：</strong></p>\n<ol>\n<li>已经安装Python</li>\n<li>已经安装pip或easy_install","more":"<h3 id=\"安装virtual\"><a href=\"#安装virtual\" class=\"headerlink\" title=\"安装virtual\"></a>安装virtual</h3>（假定按在D:\\env文件夹下）<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:\\env&gt; pip install virtualenv</span><br><span class=\"line\">D:\\env&gt; pip install virtualenvwrapper</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"创建一个虚拟环境\"><a href=\"#创建一个虚拟环境\" class=\"headerlink\" title=\"创建一个虚拟环境\"></a>创建一个虚拟环境</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:\\env&gt; mkvirtualenv env</span><br><span class=\"line\">New python executable <span class=\"keyword\">in</span> D:\\workspace\\env1\\Scripts\\python.exe</span><br><span class=\"line\">Installing setuptools, pip, wheel...done.</span><br></pre></td></tr></table></figure>\n<p>创建完成后我们可以使用<code>lsvirtualenv</code>查看已经创建的虚拟环境</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:\\env&gt;lsvirtualenv</span><br><span class=\"line\"></span><br><span class=\"line\">dir /b /ad <span class=\"string\">\"D:\\env\"</span></span><br><span class=\"line\">========================================</span><br><span class=\"line\">env</span><br></pre></td></tr></table></figure>\n<p>可以利用<code>workon 虚拟环境名字</code>来切环境</p>\n<h3 id=\"常用操作\"><a href=\"#常用操作\" class=\"headerlink\" title=\"常用操作\"></a>常用操作</h3><ol>\n<li>激活虚拟环境 <code>workon env</code></li>\n<li>退出虚拟环境<code>deactivate</code></li>\n<li>查看当前虚拟环境安装的所有软件包<code>pip list</code></li>\n</ol>\n<h3 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h3><p>那么，愉快的用pip去装各种各样的依赖包吧！</p>"},{"title":"[LeetCode]409.Longest Palindrome","date":"2016-11-09T02:50:21.000Z","_content":"\n### 问题描述 ###\n求一串字符串最大的回文子字符串长度\n<!-- more -->\n**注意：**\n1.大小写敏感.\n2.默认字符串全大写或全小写\n\n### 解题思路 ###\n偶数字符个数累加；奇数字符个数先减一再累加，同时计算奇数个数。\n最后如果奇数个数大于0，累加结果再加1。\n### 具体代码 ###\n**python**\n```python\nclass Solution(object):\n    def longestPalindrome(self, s):\n        ans = odd = 0\n        count = collections.Counter(s)\n        for i in count:\n            ans += count[i]\n            if count[i] % 2 == 1:\n                ans -= 1\n                odd += 1\n        return ans + (odd > 0)\n```\n\n**Java**\n```java\nclass Soultion {\n    public int longestPalindrome(String s) {\n        int len = 0;\n        boolean[] map = new boolean[128];\n        for(char c : s.toCharArray()){\n            map[c] = !map[c];//将有字符的位置由false变成true\n            //如果该位置为false的话证明有偶数个数存在\n            if(!map[c]) len += 2;\n        }\n        //如果字符串长度大于已累计长度，添加一个元素放在回文字符串中间\n        if (len < s.length())len++;\n        return len;\n    }\n}\n```\n","source":"_posts/LeetCode-409-Longest-Palindrome.md","raw":"---\ntitle: '[LeetCode]409.Longest Palindrome'\ndate: 2016-11-09 10:50:21\ncategories: \"Algorithms\"\ntags:\n- 学习\n---\n\n### 问题描述 ###\n求一串字符串最大的回文子字符串长度\n<!-- more -->\n**注意：**\n1.大小写敏感.\n2.默认字符串全大写或全小写\n\n### 解题思路 ###\n偶数字符个数累加；奇数字符个数先减一再累加，同时计算奇数个数。\n最后如果奇数个数大于0，累加结果再加1。\n### 具体代码 ###\n**python**\n```python\nclass Solution(object):\n    def longestPalindrome(self, s):\n        ans = odd = 0\n        count = collections.Counter(s)\n        for i in count:\n            ans += count[i]\n            if count[i] % 2 == 1:\n                ans -= 1\n                odd += 1\n        return ans + (odd > 0)\n```\n\n**Java**\n```java\nclass Soultion {\n    public int longestPalindrome(String s) {\n        int len = 0;\n        boolean[] map = new boolean[128];\n        for(char c : s.toCharArray()){\n            map[c] = !map[c];//将有字符的位置由false变成true\n            //如果该位置为false的话证明有偶数个数存在\n            if(!map[c]) len += 2;\n        }\n        //如果字符串长度大于已累计长度，添加一个元素放在回文字符串中间\n        if (len < s.length())len++;\n        return len;\n    }\n}\n```\n","slug":"LeetCode-409-Longest-Palindrome","published":1,"updated":"2016-12-07T06:44:34.487Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwyd91wu000zmc7373sy6rww","content":"<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><p>求一串字符串最大的回文子字符串长度<br><a id=\"more\"></a><br><strong>注意：</strong><br>1.大小写敏感.<br>2.默认字符串全大写或全小写</p>\n<h3 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h3><p>偶数字符个数累加；奇数字符个数先减一再累加，同时计算奇数个数。<br>最后如果奇数个数大于0，累加结果再加1。</p>\n<h3 id=\"具体代码\"><a href=\"#具体代码\" class=\"headerlink\" title=\"具体代码\"></a>具体代码</h3><p><strong>python</strong><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">longestPalindrome</span><span class=\"params\">(self, s)</span>:</span></span><br><span class=\"line\">        ans = odd = <span class=\"number\">0</span></span><br><span class=\"line\">        count = collections.Counter(s)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> count:</span><br><span class=\"line\">            ans += count[i]</span><br><span class=\"line\">            <span class=\"keyword\">if</span> count[i] % <span class=\"number\">2</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">                ans -= <span class=\"number\">1</span></span><br><span class=\"line\">                odd += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans + (odd &gt; <span class=\"number\">0</span>)</span><br></pre></td></tr></table></figure></p>\n<p><strong>Java</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Soultion</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">longestPalindrome</span><span class=\"params\">(String s)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> len = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span>[] map = <span class=\"keyword\">new</span> <span class=\"keyword\">boolean</span>[<span class=\"number\">128</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">char</span> c : s.toCharArray())&#123;</span><br><span class=\"line\">            map[c] = !map[c];<span class=\"comment\">//将有字符的位置由false变成true</span></span><br><span class=\"line\">            <span class=\"comment\">//如果该位置为false的话证明有偶数个数存在</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!map[c]) len += <span class=\"number\">2</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//如果字符串长度大于已累计长度，添加一个元素放在回文字符串中间</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (len &lt; s.length())len++;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> len;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","excerpt":"<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><p>求一串字符串最大的回文子字符串长度<br>","more":"<br><strong>注意：</strong><br>1.大小写敏感.<br>2.默认字符串全大写或全小写</p>\n<h3 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h3><p>偶数字符个数累加；奇数字符个数先减一再累加，同时计算奇数个数。<br>最后如果奇数个数大于0，累加结果再加1。</p>\n<h3 id=\"具体代码\"><a href=\"#具体代码\" class=\"headerlink\" title=\"具体代码\"></a>具体代码</h3><p><strong>python</strong><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">longestPalindrome</span><span class=\"params\">(self, s)</span>:</span></span><br><span class=\"line\">        ans = odd = <span class=\"number\">0</span></span><br><span class=\"line\">        count = collections.Counter(s)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> count:</span><br><span class=\"line\">            ans += count[i]</span><br><span class=\"line\">            <span class=\"keyword\">if</span> count[i] % <span class=\"number\">2</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">                ans -= <span class=\"number\">1</span></span><br><span class=\"line\">                odd += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans + (odd &gt; <span class=\"number\">0</span>)</span><br></pre></td></tr></table></figure></p>\n<p><strong>Java</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Soultion</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">longestPalindrome</span><span class=\"params\">(String s)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> len = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span>[] map = <span class=\"keyword\">new</span> <span class=\"keyword\">boolean</span>[<span class=\"number\">128</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">char</span> c : s.toCharArray())&#123;</span><br><span class=\"line\">            map[c] = !map[c];<span class=\"comment\">//将有字符的位置由false变成true</span></span><br><span class=\"line\">            <span class=\"comment\">//如果该位置为false的话证明有偶数个数存在</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!map[c]) len += <span class=\"number\">2</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//如果字符串长度大于已累计长度，添加一个元素放在回文字符串中间</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (len &lt; s.length())len++;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> len;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"Python协程","date":"2016-12-16T03:04:21.000Z","_content":" ** -- 施工中 -- **\n<!-- more -->\n\n> Because generator-iterators begin execution at the top of the\n    generator's function body, there is no yield expression to receive\n    a value when the generator has just been created.  Therefore,\n    calling send() with a non-None argument is prohibited when the\n    generator iterator has just started, and a TypeError is raised if\n    this occurs (presumably due to a logic error of some kind).  Thus,\n    before you can communicate with a coroutine you must first call\n    next() or send(None) to advance its execution to the first yield\n    expression.\n\n\n因为生成器在执行函数时，生成器刚被创建，没有接收到yield表达式的值\n隐藏当生成器启动时禁止进行无参send()方法\n","source":"_posts/Python协程.md","raw":"---\ntitle: Python协程\ndate: 2016-12-16 11:04:21\ncategories: \"Python\"\ntags:\n- 学习\n---\n ** -- 施工中 -- **\n<!-- more -->\n\n> Because generator-iterators begin execution at the top of the\n    generator's function body, there is no yield expression to receive\n    a value when the generator has just been created.  Therefore,\n    calling send() with a non-None argument is prohibited when the\n    generator iterator has just started, and a TypeError is raised if\n    this occurs (presumably due to a logic error of some kind).  Thus,\n    before you can communicate with a coroutine you must first call\n    next() or send(None) to advance its execution to the first yield\n    expression.\n\n\n因为生成器在执行函数时，生成器刚被创建，没有接收到yield表达式的值\n隐藏当生成器启动时禁止进行无参send()方法\n","slug":"Python协程","published":1,"updated":"2016-12-19T07:11:13.231Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwyd91ww0011mc736te8u06y","content":"<p> <strong> – 施工中 – </strong><br><a id=\"more\"></a></p>\n<blockquote>\n<p>Because generator-iterators begin execution at the top of the<br>    generator’s function body, there is no yield expression to receive<br>    a value when the generator has just been created.  Therefore,<br>    calling send() with a non-None argument is prohibited when the<br>    generator iterator has just started, and a TypeError is raised if<br>    this occurs (presumably due to a logic error of some kind).  Thus,<br>    before you can communicate with a coroutine you must first call<br>    next() or send(None) to advance its execution to the first yield<br>    expression.</p>\n</blockquote>\n<p>因为生成器在执行函数时，生成器刚被创建，没有接收到yield表达式的值<br>隐藏当生成器启动时禁止进行无参send()方法</p>\n","excerpt":"<p> <strong> – 施工中 – </strong><br>","more":"</p>\n<blockquote>\n<p>Because generator-iterators begin execution at the top of the<br>    generator’s function body, there is no yield expression to receive<br>    a value when the generator has just been created.  Therefore,<br>    calling send() with a non-None argument is prohibited when the<br>    generator iterator has just started, and a TypeError is raised if<br>    this occurs (presumably due to a logic error of some kind).  Thus,<br>    before you can communicate with a coroutine you must first call<br>    next() or send(None) to advance its execution to the first yield<br>    expression.</p>\n</blockquote>\n<p>因为生成器在执行函数时，生成器刚被创建，没有接收到yield表达式的值<br>隐藏当生成器启动时禁止进行无参send()方法</p>"},{"title":"Linux注意事项","date":"2016-05-10T03:41:57.000Z","_content":"1. 下载、解压、执行 `make` `make install` `wget` 等命令需要在命令前加上`sudo`(**PS：最好所有命令都加上**)\n2. 解压与压缩命令\n    \n    解压命令：\n    \n    - `tar` `-zxvf` *.tar.gz\n    - `tar` `-xvf` *.tar\n    - `unrar` e *.rar\n    - `unzip` *.zip\n\n    压缩命令：\n    \n    - tar -cf all.tar *.jpg # -c新的包，f文件名\n    - tar -rf all.tar *.gif # -r新增加\n    \n    列出all中所有文件\n    \n    - tar -tf all.tar \n3. 切换命令/图形界面\n    <!-- more -->\n    切换成命令界面（暂时）\n\n    `Ctrl+Alt+空格` `Ctrl+Alt+F1~F6`\n\n    切换成命令模式（永久）\n    \n    > $>echo \"false\" | sudo tee /etc/X11/default-display-manager\n    \n    然后重启Ubuntu\n\n    切换成图形界面（暂时）\n\n    > startx\n    \n    切换成图形界面（永久）\n\n    > $>echo “/usr/sbin/gdm” | sudo tee /etc/X11/default-display-manager\n\n4. Linux 软件安装步骤\n    1. 加载配置 `sudo ./configure` **注意：**  在此命令后面添加`--prefix=...`可以指定安装路径，例如`sudo ./configure --prefix=/usr/local/python`\n    2. 编译 `sudo make`\n    3. 安装 `sudo make install`\n5. Linux 清屏命令\n    - `$ clear` 保留历史记录，将页面下翻一页而已\n    - `$ reset` 真正意义上的清空界面\n6. Linux 更改计算机名\n\n    > $ sudo vim /etc/hostname\n    > 将第一行改为你想要的名字\n\n7. Ubuntu apt-get update失败\n    > E: Could not get lock /var/lib/apt/lists/lock \n    > E: Could not get lock /var/lib/dpkg/lock\n    > 将这两个文件删除即可执行update命令\n\n8. 中断命令执行\n    > 有时候命令执行到一半发现执行错误，或者命令执行时卡死。需要执行中断命令\n    > `Ctrl + z`\n\n9. 创建文件夹或文件\n```bash\n$> mkdir aa # 创建aa文件夹\n$> touch aa.log # 创建aa.log文件(0字节)\n```\n\n10. Linux 查看进程\n```bash\n$> ps -ef | grep nginx \n#nobody    4554  4553  0 15:50 ?        00:00:00 nginx: worker process \n$> ps -e | grep nginx \n#4553 ?        00:00:00 nginx\n```\n\n11. Linux 关闭防火墙\n```bash\n$> sudo ufw disable\n```\n\n12. 开机自启动服务\n```bash\n$> sudo vi /etc/rc.local\n# 在 exit 0 前添加所需自启动服务\n```\n\n13. 安装ssh服务\n```bash\n$> sudo apt-get install openssh-server\n```\n","source":"_posts/Linux注意事项.md","raw":"---\ntitle: Linux注意事项\ndate: 2016-05-10 11:41:57\ncategories: \"Linux\"\ntags:\n- 学习\n---\n1. 下载、解压、执行 `make` `make install` `wget` 等命令需要在命令前加上`sudo`(**PS：最好所有命令都加上**)\n2. 解压与压缩命令\n    \n    解压命令：\n    \n    - `tar` `-zxvf` *.tar.gz\n    - `tar` `-xvf` *.tar\n    - `unrar` e *.rar\n    - `unzip` *.zip\n\n    压缩命令：\n    \n    - tar -cf all.tar *.jpg # -c新的包，f文件名\n    - tar -rf all.tar *.gif # -r新增加\n    \n    列出all中所有文件\n    \n    - tar -tf all.tar \n3. 切换命令/图形界面\n    <!-- more -->\n    切换成命令界面（暂时）\n\n    `Ctrl+Alt+空格` `Ctrl+Alt+F1~F6`\n\n    切换成命令模式（永久）\n    \n    > $>echo \"false\" | sudo tee /etc/X11/default-display-manager\n    \n    然后重启Ubuntu\n\n    切换成图形界面（暂时）\n\n    > startx\n    \n    切换成图形界面（永久）\n\n    > $>echo “/usr/sbin/gdm” | sudo tee /etc/X11/default-display-manager\n\n4. Linux 软件安装步骤\n    1. 加载配置 `sudo ./configure` **注意：**  在此命令后面添加`--prefix=...`可以指定安装路径，例如`sudo ./configure --prefix=/usr/local/python`\n    2. 编译 `sudo make`\n    3. 安装 `sudo make install`\n5. Linux 清屏命令\n    - `$ clear` 保留历史记录，将页面下翻一页而已\n    - `$ reset` 真正意义上的清空界面\n6. Linux 更改计算机名\n\n    > $ sudo vim /etc/hostname\n    > 将第一行改为你想要的名字\n\n7. Ubuntu apt-get update失败\n    > E: Could not get lock /var/lib/apt/lists/lock \n    > E: Could not get lock /var/lib/dpkg/lock\n    > 将这两个文件删除即可执行update命令\n\n8. 中断命令执行\n    > 有时候命令执行到一半发现执行错误，或者命令执行时卡死。需要执行中断命令\n    > `Ctrl + z`\n\n9. 创建文件夹或文件\n```bash\n$> mkdir aa # 创建aa文件夹\n$> touch aa.log # 创建aa.log文件(0字节)\n```\n\n10. Linux 查看进程\n```bash\n$> ps -ef | grep nginx \n#nobody    4554  4553  0 15:50 ?        00:00:00 nginx: worker process \n$> ps -e | grep nginx \n#4553 ?        00:00:00 nginx\n```\n\n11. Linux 关闭防火墙\n```bash\n$> sudo ufw disable\n```\n\n12. 开机自启动服务\n```bash\n$> sudo vi /etc/rc.local\n# 在 exit 0 前添加所需自启动服务\n```\n\n13. 安装ssh服务\n```bash\n$> sudo apt-get install openssh-server\n```\n","slug":"Linux注意事项","published":1,"updated":"2016-11-28T03:13:39.360Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwyd91x70016mc73mwyrjovm","content":"<ol>\n<li>下载、解压、执行 <code>make</code> <code>make install</code> <code>wget</code> 等命令需要在命令前加上<code>sudo</code>(<strong>PS：最好所有命令都加上</strong>)</li>\n<li><p>解压与压缩命令</p>\n<p> 解压命令：</p>\n<ul>\n<li><code>tar</code> <code>-zxvf</code> *.tar.gz</li>\n<li><code>tar</code> <code>-xvf</code> *.tar</li>\n<li><code>unrar</code> e *.rar</li>\n<li><p><code>unzip</code> *.zip</p>\n<p>压缩命令：</p>\n</li>\n<li><p>tar -cf all.tar *.jpg # -c新的包，f文件名</p>\n</li>\n<li><p>tar -rf all.tar *.gif # -r新增加</p>\n<p>列出all中所有文件</p>\n</li>\n<li><p>tar -tf all.tar </p>\n</li>\n</ul>\n</li>\n<li><p>切换命令/图形界面</p>\n <a id=\"more\"></a>\n<p> 切换成命令界面（暂时）</p>\n<p> <code>Ctrl+Alt+空格</code> <code>Ctrl+Alt+F1~F6</code></p>\n<p> 切换成命令模式（永久）</p>\n<blockquote>\n<p>$&gt;echo “false” | sudo tee /etc/X11/default-display-manager</p>\n</blockquote>\n<p> 然后重启Ubuntu</p>\n<p> 切换成图形界面（暂时）</p>\n<blockquote>\n<p>startx</p>\n</blockquote>\n<p> 切换成图形界面（永久）</p>\n<blockquote>\n<p>$&gt;echo “/usr/sbin/gdm” | sudo tee /etc/X11/default-display-manager</p>\n</blockquote>\n</li>\n<li><p>Linux 软件安装步骤</p>\n<ol>\n<li>加载配置 <code>sudo ./configure</code> <strong>注意：</strong>  在此命令后面添加<code>--prefix=...</code>可以指定安装路径，例如<code>sudo ./configure --prefix=/usr/local/python</code></li>\n<li>编译 <code>sudo make</code></li>\n<li>安装 <code>sudo make install</code></li>\n</ol>\n</li>\n<li>Linux 清屏命令<ul>\n<li><code>$ clear</code> 保留历史记录，将页面下翻一页而已</li>\n<li><code>$ reset</code> 真正意义上的清空界面</li>\n</ul>\n</li>\n<li><p>Linux 更改计算机名</p>\n<blockquote>\n<p>$ sudo vim /etc/hostname<br>将第一行改为你想要的名字</p>\n</blockquote>\n</li>\n<li><p>Ubuntu apt-get update失败</p>\n<blockquote>\n<p>E: Could not get lock /var/lib/apt/lists/lock<br>E: Could not get lock /var/lib/dpkg/lock<br>将这两个文件删除即可执行update命令</p>\n</blockquote>\n</li>\n<li><p>中断命令执行</p>\n<blockquote>\n<p>有时候命令执行到一半发现执行错误，或者命令执行时卡死。需要执行中断命令<br><code>Ctrl + z</code></p>\n</blockquote>\n</li>\n<li><p>创建文件夹或文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$&gt; mkdir aa <span class=\"comment\"># 创建aa文件夹</span></span><br><span class=\"line\">$&gt; touch aa.log <span class=\"comment\"># 创建aa.log文件(0字节)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Linux 查看进程</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$&gt; ps -ef | grep nginx </span><br><span class=\"line\"><span class=\"comment\">#nobody    4554  4553  0 15:50 ?        00:00:00 nginx: worker process </span></span><br><span class=\"line\">$&gt; ps <span class=\"_\">-e</span> | grep nginx </span><br><span class=\"line\"><span class=\"comment\">#4553 ?        00:00:00 nginx</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Linux 关闭防火墙</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$&gt; sudo ufw <span class=\"built_in\">disable</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>开机自启动服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$&gt; sudo vi /etc/rc.local</span><br><span class=\"line\"><span class=\"comment\"># 在 exit 0 前添加所需自启动服务</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装ssh服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$&gt; sudo apt-get install openssh-server</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","excerpt":"<ol>\n<li>下载、解压、执行 <code>make</code> <code>make install</code> <code>wget</code> 等命令需要在命令前加上<code>sudo</code>(<strong>PS：最好所有命令都加上</strong>)</li>\n<li><p>解压与压缩命令</p>\n<p> 解压命令：</p>\n<ul>\n<li><code>tar</code> <code>-zxvf</code> *.tar.gz</li>\n<li><code>tar</code> <code>-xvf</code> *.tar</li>\n<li><code>unrar</code> e *.rar</li>\n<li><p><code>unzip</code> *.zip</p>\n<p>压缩命令：</p>\n</li>\n<li><p>tar -cf all.tar *.jpg # -c新的包，f文件名</p>\n</li>\n<li><p>tar -rf all.tar *.gif # -r新增加</p>\n<p>列出all中所有文件</p>\n</li>\n<li><p>tar -tf all.tar </p>\n</li>\n</ul>\n</li>\n<li><p>切换命令/图形界面</p>","more":"<p> 切换成命令界面（暂时）</p>\n<p> <code>Ctrl+Alt+空格</code> <code>Ctrl+Alt+F1~F6</code></p>\n<p> 切换成命令模式（永久）</p>\n<blockquote>\n<p>$&gt;echo “false” | sudo tee /etc/X11/default-display-manager</p>\n</blockquote>\n<p> 然后重启Ubuntu</p>\n<p> 切换成图形界面（暂时）</p>\n<blockquote>\n<p>startx</p>\n</blockquote>\n<p> 切换成图形界面（永久）</p>\n<blockquote>\n<p>$&gt;echo “/usr/sbin/gdm” | sudo tee /etc/X11/default-display-manager</p>\n</blockquote>\n</li>\n<li><p>Linux 软件安装步骤</p>\n<ol>\n<li>加载配置 <code>sudo ./configure</code> <strong>注意：</strong>  在此命令后面添加<code>--prefix=...</code>可以指定安装路径，例如<code>sudo ./configure --prefix=/usr/local/python</code></li>\n<li>编译 <code>sudo make</code></li>\n<li>安装 <code>sudo make install</code></li>\n</ol>\n</li>\n<li>Linux 清屏命令<ul>\n<li><code>$ clear</code> 保留历史记录，将页面下翻一页而已</li>\n<li><code>$ reset</code> 真正意义上的清空界面</li>\n</ul>\n</li>\n<li><p>Linux 更改计算机名</p>\n<blockquote>\n<p>$ sudo vim /etc/hostname<br>将第一行改为你想要的名字</p>\n</blockquote>\n</li>\n<li><p>Ubuntu apt-get update失败</p>\n<blockquote>\n<p>E: Could not get lock /var/lib/apt/lists/lock<br>E: Could not get lock /var/lib/dpkg/lock<br>将这两个文件删除即可执行update命令</p>\n</blockquote>\n</li>\n<li><p>中断命令执行</p>\n<blockquote>\n<p>有时候命令执行到一半发现执行错误，或者命令执行时卡死。需要执行中断命令<br><code>Ctrl + z</code></p>\n</blockquote>\n</li>\n<li><p>创建文件夹或文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$&gt; mkdir aa <span class=\"comment\"># 创建aa文件夹</span></span><br><span class=\"line\">$&gt; touch aa.log <span class=\"comment\"># 创建aa.log文件(0字节)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Linux 查看进程</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$&gt; ps -ef | grep nginx </span><br><span class=\"line\"><span class=\"comment\">#nobody    4554  4553  0 15:50 ?        00:00:00 nginx: worker process </span></span><br><span class=\"line\">$&gt; ps <span class=\"_\">-e</span> | grep nginx </span><br><span class=\"line\"><span class=\"comment\">#4553 ?        00:00:00 nginx</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Linux 关闭防火墙</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$&gt; sudo ufw <span class=\"built_in\">disable</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>开机自启动服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$&gt; sudo vi /etc/rc.local</span><br><span class=\"line\"><span class=\"comment\"># 在 exit 0 前添加所需自启动服务</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装ssh服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$&gt; sudo apt-get install openssh-server</span><br></pre></td></tr></table></figure>\n</li>\n</ol>"},{"title":"离线安装VMWare Tools","date":"2016-12-19T08:26:33.000Z","_content":"[VMWare Tools](http://softwareupdate.vmware.com/cds/vmw-desktop/ws/11.0.0/2305329/windows/packages/)\n\n### 解压tools文件 ###\n\n`win+R`打开运行窗口,解压exe文件\n> ..\\tools-windows-*.exe /e .\\\n解压成iso文件\n> msiexec /a \"..\\tools-windows.msi\" /qb TARGETDIR=\".\\\"\n \n虚拟机加载iso即可安装VMWare Tools\n","source":"_posts/离线安装WMWare-Tools.md","raw":"---\ntitle: 离线安装VMWare Tools\ndate: 2016-12-19 16:26:33\ncategories: \"工具配置\"\ntags:\n- WMWare\n---\n[VMWare Tools](http://softwareupdate.vmware.com/cds/vmw-desktop/ws/11.0.0/2305329/windows/packages/)\n\n### 解压tools文件 ###\n\n`win+R`打开运行窗口,解压exe文件\n> ..\\tools-windows-*.exe /e .\\\n解压成iso文件\n> msiexec /a \"..\\tools-windows.msi\" /qb TARGETDIR=\".\\\"\n \n虚拟机加载iso即可安装VMWare Tools\n","slug":"离线安装WMWare-Tools","published":1,"updated":"2016-12-21T01:54:50.289Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwyd91xe0019mc73960fk018","content":"<p><a href=\"http://softwareupdate.vmware.com/cds/vmw-desktop/ws/11.0.0/2305329/windows/packages/\" target=\"_blank\" rel=\"external\">VMWare Tools</a></p>\n<h3 id=\"解压tools文件\"><a href=\"#解压tools文件\" class=\"headerlink\" title=\"解压tools文件\"></a>解压tools文件</h3><p><code>win+R</code>打开运行窗口,解压exe文件</p>\n<blockquote>\n<p>..\\tools-windows-*.exe /e .\\<br>解压成iso文件<br>msiexec /a “..\\tools-windows.msi” /qb TARGETDIR=”.\\”</p>\n</blockquote>\n<p>虚拟机加载iso即可安装VMWare Tools</p>\n","excerpt":"","more":"<p><a href=\"http://softwareupdate.vmware.com/cds/vmw-desktop/ws/11.0.0/2305329/windows/packages/\">VMWare Tools</a></p>\n<h3 id=\"解压tools文件\"><a href=\"#解压tools文件\" class=\"headerlink\" title=\"解压tools文件\"></a>解压tools文件</h3><p><code>win+R</code>打开运行窗口,解压exe文件</p>\n<blockquote>\n<p>..\\tools-windows-*.exe /e .\\<br>解压成iso文件<br>msiexec /a “..\\tools-windows.msi” /qb TARGETDIR=”.\\”</p>\n</blockquote>\n<p>虚拟机加载iso即可安装VMWare Tools</p>\n"},{"title":"HashMap,Hashtable,ConcurrentHashMap,SynchronizedMap的原理与区别","date":"2016-12-07T02:28:18.000Z","_content":"## HashMap ##\n### HashMap的碰撞处理 ###\nHashMap通过hashCode()方法来确定元素存储的bucketIndex位置，不同的Key有概率hash是相同的。\n两个不同Key的hash值相同时，HashMap通过单链表方式，将新元素加入链表表头，通过next指向原有元素。\n<!-- more -->\n** 在JDK1.8版本中，只要bucket中的链表长度超过阈值（8）时，会将链表转化为红黑树**\n在JDK1.7中HashMap的put方法源码如下：\n```java\n public V put(K key, V value) {\n        ...\n        //处理Key为null\n        if (key == null)\n            return putForNullKey(value);\n        //得到key的hash码\n        int hash = hash(key);\n        //由hash码获取bucketIndex下标\n        int i = indexFor(hash, table.length);\n        //取出bucketIndex上元素，形成单链表\n        for (Entry<K,V> e = table[i]; e != null; e = e.next) {\n            Object k;\n            //hash码相同时且对象相同时\n            if (e.hash == hash && ((k = e.key) == key || key.equals(k))) {\n                //替换旧值\n                V oldValue = e.value;\n                e.value = value;\n                e.recordAccess(this);\n                return oldValue;\n            }\n        }\n        //key不存在，加入新元素\n        modCount++;\n        addEntry(hash, key, value, i);\n        return null;\n    }\n```\n\n### 为什么HashMap线程不安全 ###\n1. 并发时，多线程同时操作使用put方法添加元素\n，如果发生碰撞，可能会导致两个值添加到同一位置，致使最终有一个值被覆盖\n2. 多线程使用HashMap进行扩容时，可能会形成循环链路，详情可以看看[Java HashMap的死循环](http://coolshell.cn/articles/9606.html)\n\n","source":"_posts/了解HashMap.md","raw":"---\ntitle: HashMap,Hashtable,ConcurrentHashMap,SynchronizedMap的原理与区别\ndate: 2016-12-07 10:28:18\ncategories: \"Java\"\ntags:\n- 学习\n---\n## HashMap ##\n### HashMap的碰撞处理 ###\nHashMap通过hashCode()方法来确定元素存储的bucketIndex位置，不同的Key有概率hash是相同的。\n两个不同Key的hash值相同时，HashMap通过单链表方式，将新元素加入链表表头，通过next指向原有元素。\n<!-- more -->\n** 在JDK1.8版本中，只要bucket中的链表长度超过阈值（8）时，会将链表转化为红黑树**\n在JDK1.7中HashMap的put方法源码如下：\n```java\n public V put(K key, V value) {\n        ...\n        //处理Key为null\n        if (key == null)\n            return putForNullKey(value);\n        //得到key的hash码\n        int hash = hash(key);\n        //由hash码获取bucketIndex下标\n        int i = indexFor(hash, table.length);\n        //取出bucketIndex上元素，形成单链表\n        for (Entry<K,V> e = table[i]; e != null; e = e.next) {\n            Object k;\n            //hash码相同时且对象相同时\n            if (e.hash == hash && ((k = e.key) == key || key.equals(k))) {\n                //替换旧值\n                V oldValue = e.value;\n                e.value = value;\n                e.recordAccess(this);\n                return oldValue;\n            }\n        }\n        //key不存在，加入新元素\n        modCount++;\n        addEntry(hash, key, value, i);\n        return null;\n    }\n```\n\n### 为什么HashMap线程不安全 ###\n1. 并发时，多线程同时操作使用put方法添加元素\n，如果发生碰撞，可能会导致两个值添加到同一位置，致使最终有一个值被覆盖\n2. 多线程使用HashMap进行扩容时，可能会形成循环链路，详情可以看看[Java HashMap的死循环](http://coolshell.cn/articles/9606.html)\n\n","slug":"了解HashMap","published":1,"updated":"2016-12-07T03:46:13.034Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwyd91xk001dmc73te2b8h0h","content":"<h2 id=\"HashMap\"><a href=\"#HashMap\" class=\"headerlink\" title=\"HashMap\"></a>HashMap</h2><h3 id=\"HashMap的碰撞处理\"><a href=\"#HashMap的碰撞处理\" class=\"headerlink\" title=\"HashMap的碰撞处理\"></a>HashMap的碰撞处理</h3><p>HashMap通过hashCode()方法来确定元素存储的bucketIndex位置，不同的Key有概率hash是相同的。<br>两个不同Key的hash值相同时，HashMap通过单链表方式，将新元素加入链表表头，通过next指向原有元素。<br><a id=\"more\"></a><br><strong> 在JDK1.8版本中，只要bucket中的链表长度超过阈值（8）时，会将链表转化为红黑树</strong><br>在JDK1.7中HashMap的put方法源码如下：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> V <span class=\"title\">put</span><span class=\"params\">(K key, V value)</span> </span>&#123;</span><br><span class=\"line\">       ...</span><br><span class=\"line\">       <span class=\"comment\">//处理Key为null</span></span><br><span class=\"line\">       <span class=\"keyword\">if</span> (key == <span class=\"keyword\">null</span>)</span><br><span class=\"line\">           <span class=\"keyword\">return</span> putForNullKey(value);</span><br><span class=\"line\">       <span class=\"comment\">//得到key的hash码</span></span><br><span class=\"line\">       <span class=\"keyword\">int</span> hash = hash(key);</span><br><span class=\"line\">       <span class=\"comment\">//由hash码获取bucketIndex下标</span></span><br><span class=\"line\">       <span class=\"keyword\">int</span> i = indexFor(hash, table.length);</span><br><span class=\"line\">       <span class=\"comment\">//取出bucketIndex上元素，形成单链表</span></span><br><span class=\"line\">       <span class=\"keyword\">for</span> (Entry&lt;K,V&gt; e = table[i]; e != <span class=\"keyword\">null</span>; e = e.next) &#123;</span><br><span class=\"line\">           Object k;</span><br><span class=\"line\">           <span class=\"comment\">//hash码相同时且对象相同时</span></span><br><span class=\"line\">           <span class=\"keyword\">if</span> (e.hash == hash &amp;&amp; ((k = e.key) == key || key.equals(k))) &#123;</span><br><span class=\"line\">               <span class=\"comment\">//替换旧值</span></span><br><span class=\"line\">               V oldValue = e.value;</span><br><span class=\"line\">               e.value = value;</span><br><span class=\"line\">               e.recordAccess(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">               <span class=\"keyword\">return</span> oldValue;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"comment\">//key不存在，加入新元素</span></span><br><span class=\"line\">       modCount++;</span><br><span class=\"line\">       addEntry(hash, key, value, i);</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"为什么HashMap线程不安全\"><a href=\"#为什么HashMap线程不安全\" class=\"headerlink\" title=\"为什么HashMap线程不安全\"></a>为什么HashMap线程不安全</h3><ol>\n<li>并发时，多线程同时操作使用put方法添加元素<br>，如果发生碰撞，可能会导致两个值添加到同一位置，致使最终有一个值被覆盖</li>\n<li>多线程使用HashMap进行扩容时，可能会形成循环链路，详情可以看看<a href=\"http://coolshell.cn/articles/9606.html\" target=\"_blank\" rel=\"external\">Java HashMap的死循环</a></li>\n</ol>\n","excerpt":"<h2 id=\"HashMap\"><a href=\"#HashMap\" class=\"headerlink\" title=\"HashMap\"></a>HashMap</h2><h3 id=\"HashMap的碰撞处理\"><a href=\"#HashMap的碰撞处理\" class=\"headerlink\" title=\"HashMap的碰撞处理\"></a>HashMap的碰撞处理</h3><p>HashMap通过hashCode()方法来确定元素存储的bucketIndex位置，不同的Key有概率hash是相同的。<br>两个不同Key的hash值相同时，HashMap通过单链表方式，将新元素加入链表表头，通过next指向原有元素。<br>","more":"<br><strong> 在JDK1.8版本中，只要bucket中的链表长度超过阈值（8）时，会将链表转化为红黑树</strong><br>在JDK1.7中HashMap的put方法源码如下：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> V <span class=\"title\">put</span><span class=\"params\">(K key, V value)</span> </span>&#123;</span><br><span class=\"line\">       ...</span><br><span class=\"line\">       <span class=\"comment\">//处理Key为null</span></span><br><span class=\"line\">       <span class=\"keyword\">if</span> (key == <span class=\"keyword\">null</span>)</span><br><span class=\"line\">           <span class=\"keyword\">return</span> putForNullKey(value);</span><br><span class=\"line\">       <span class=\"comment\">//得到key的hash码</span></span><br><span class=\"line\">       <span class=\"keyword\">int</span> hash = hash(key);</span><br><span class=\"line\">       <span class=\"comment\">//由hash码获取bucketIndex下标</span></span><br><span class=\"line\">       <span class=\"keyword\">int</span> i = indexFor(hash, table.length);</span><br><span class=\"line\">       <span class=\"comment\">//取出bucketIndex上元素，形成单链表</span></span><br><span class=\"line\">       <span class=\"keyword\">for</span> (Entry&lt;K,V&gt; e = table[i]; e != <span class=\"keyword\">null</span>; e = e.next) &#123;</span><br><span class=\"line\">           Object k;</span><br><span class=\"line\">           <span class=\"comment\">//hash码相同时且对象相同时</span></span><br><span class=\"line\">           <span class=\"keyword\">if</span> (e.hash == hash &amp;&amp; ((k = e.key) == key || key.equals(k))) &#123;</span><br><span class=\"line\">               <span class=\"comment\">//替换旧值</span></span><br><span class=\"line\">               V oldValue = e.value;</span><br><span class=\"line\">               e.value = value;</span><br><span class=\"line\">               e.recordAccess(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">               <span class=\"keyword\">return</span> oldValue;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"comment\">//key不存在，加入新元素</span></span><br><span class=\"line\">       modCount++;</span><br><span class=\"line\">       addEntry(hash, key, value, i);</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"为什么HashMap线程不安全\"><a href=\"#为什么HashMap线程不安全\" class=\"headerlink\" title=\"为什么HashMap线程不安全\"></a>为什么HashMap线程不安全</h3><ol>\n<li>并发时，多线程同时操作使用put方法添加元素<br>，如果发生碰撞，可能会导致两个值添加到同一位置，致使最终有一个值被覆盖</li>\n<li>多线程使用HashMap进行扩容时，可能会形成循环链路，详情可以看看<a href=\"http://coolshell.cn/articles/9606.html\">Java HashMap的死循环</a></li>\n</ol>"},{"title":"数据结构--Java（1） 实现Stack","date":"2016-10-31T07:59:38.000Z","_content":"### 利用数组实现Stack ###\n<!-- more -->\n```java\npublic class ArrayStack<T> implements StackADT<T> {\n    private final int DEFAULT_SIZE=2;//默认大小\n    private int capacity;//栈容量\n    private int size;//栈大小\n\n    private int top;\n    private Object[] array;\n\n    public ArrayStack(){\n        this.capacity = DEFAULT_SIZE;\n        this.array = new Object[this.capacity];\n        this.size = 0;\n        System.out.println(top);\n    }\n\n    public ArrayStack(int capacity){\n        this.capacity = capacity;\n        this.array = new Object[this.capacity];\n        this.size = 0;\n    }\n    @Override\n    public void clear() {\n        Arrays.fill(this.array,null);\n        this.size = 0;\n        this.top = 0;\n        this.capacity = DEFAULT_SIZE;\n        this.array = new Object[this.capacity];\n    }\n\n    @Override\n    public boolean isEmpty() {\n        return this.size == 0;\n    }\n\n    @Override\n    public T peek() {\n        if (isEmpty()){\n            return null;\n        }\n        return (T) this.array[this.top-1];\n\n    }\n\n    @Override\n    public T pop() {\n        T v = (T) this.array[top-1];\n        array[this.top-1] = null;\n        this.top = this.top - 1;\n        this.size--;\n        return v;\n    }\n\n    @Override\n    public void push(T v) {\n        if (this.size<this.capacity){\n            this.array[top] = v;\n            this.size++;\n            this.top++;\n        }else {\n            addStackCap();\n            push(v);\n        }\n    }\n\n    private void addStackCap() {//扩容\n        this.capacity = this.capacity+DEFAULT_SIZE;\n        Object[] newArray = new Object[this.capacity];\n        System.arraycopy(this.array, 0, newArray, 0,this.array.length);\n        Arrays.fill(array, null);//原来的数组置空\n        this.array = newArray;\n    }\n\n    @Override\n    public int size() {\n        return this.size;\n    }\n    /**\n     * 测试栈\n     * @param args\n     */\n    public static void main(String[] args) {\n        ArrayStack<Integer> a = new ArrayStack<Integer>();\n        a.push(3);\n        a.push(5);\n        a.push(2);\n        a.push(1);\n        a.push(6);\n        System.out.println(\"栈大小:\"+a.size());\n        System.out.println(\"栈容量:\"+a.capacity);\n        System.out.println(\"栈顶元素:\"+a.peek());\n        while (!a.isEmpty()){\n            System.out.println(a.pop());\n        }\n        System.out.println(\"栈大小:\"+a.size());\n        System.out.println(\"栈容量:\"+a.capacity);\n        System.out.println(\"栈顶元素:\"+a.peek());\n        System.out.println(\"************\");\n        a.clear();\n        System.out.println(\"栈大小:\"+a.size());\n        System.out.println(\"栈容量:\"+a.capacity);\n    }\n}\n\n\ninterface StackADT<T> {\n    public void clear();\n    public boolean isEmpty();\n    public T peek();\n    public T pop();\n    public void push(T v);\n    public int size();\n}\n```\n\n### 利用LinkedList实现Stack ###\n\n```java\npublic class Stack<T> {\n    private LinkedList<T> storage = new LinkedList<T>();\n    /** 入栈 **/\n    public void push(T v){\n        storage.addFirst(v);\n    }\n    /** 出栈 **/\n    public T pop(){\n        if(isEmpty()) return null;\n        return storage.removeFirst();\n    }\n    /** 栈为空 **/\n    public boolean isEmpty() {\n        return storage.isEmpty();\n    }\n    public String toString(){\n        return storage.toString();\n    }\n    public void clear(){ storage.clear(); }\n    public static void main(String[] args) {\n        Stack stack = new Stack<String>();\n        stack.push(\"a\");\n        stack.push(\"b\");\n        stack.push(\"c\");\n        System.out.println(stack.toString());\n        Object obj = stack.pop();\n        System.out.println(obj+\"------\"+stack.toString());\n        obj = stack.pop();\n        obj = stack.pop();\n        System.out.println(obj);\n    }\n}\n```\n","source":"_posts/数据结构-Java（1）-实现Stack.md","raw":"---\ntitle: 数据结构--Java（1） 实现Stack\ndate: 2016-10-31 15:59:38\ncategories: \"Data Structure\"\ntags:\n- 学习\n---\n### 利用数组实现Stack ###\n<!-- more -->\n```java\npublic class ArrayStack<T> implements StackADT<T> {\n    private final int DEFAULT_SIZE=2;//默认大小\n    private int capacity;//栈容量\n    private int size;//栈大小\n\n    private int top;\n    private Object[] array;\n\n    public ArrayStack(){\n        this.capacity = DEFAULT_SIZE;\n        this.array = new Object[this.capacity];\n        this.size = 0;\n        System.out.println(top);\n    }\n\n    public ArrayStack(int capacity){\n        this.capacity = capacity;\n        this.array = new Object[this.capacity];\n        this.size = 0;\n    }\n    @Override\n    public void clear() {\n        Arrays.fill(this.array,null);\n        this.size = 0;\n        this.top = 0;\n        this.capacity = DEFAULT_SIZE;\n        this.array = new Object[this.capacity];\n    }\n\n    @Override\n    public boolean isEmpty() {\n        return this.size == 0;\n    }\n\n    @Override\n    public T peek() {\n        if (isEmpty()){\n            return null;\n        }\n        return (T) this.array[this.top-1];\n\n    }\n\n    @Override\n    public T pop() {\n        T v = (T) this.array[top-1];\n        array[this.top-1] = null;\n        this.top = this.top - 1;\n        this.size--;\n        return v;\n    }\n\n    @Override\n    public void push(T v) {\n        if (this.size<this.capacity){\n            this.array[top] = v;\n            this.size++;\n            this.top++;\n        }else {\n            addStackCap();\n            push(v);\n        }\n    }\n\n    private void addStackCap() {//扩容\n        this.capacity = this.capacity+DEFAULT_SIZE;\n        Object[] newArray = new Object[this.capacity];\n        System.arraycopy(this.array, 0, newArray, 0,this.array.length);\n        Arrays.fill(array, null);//原来的数组置空\n        this.array = newArray;\n    }\n\n    @Override\n    public int size() {\n        return this.size;\n    }\n    /**\n     * 测试栈\n     * @param args\n     */\n    public static void main(String[] args) {\n        ArrayStack<Integer> a = new ArrayStack<Integer>();\n        a.push(3);\n        a.push(5);\n        a.push(2);\n        a.push(1);\n        a.push(6);\n        System.out.println(\"栈大小:\"+a.size());\n        System.out.println(\"栈容量:\"+a.capacity);\n        System.out.println(\"栈顶元素:\"+a.peek());\n        while (!a.isEmpty()){\n            System.out.println(a.pop());\n        }\n        System.out.println(\"栈大小:\"+a.size());\n        System.out.println(\"栈容量:\"+a.capacity);\n        System.out.println(\"栈顶元素:\"+a.peek());\n        System.out.println(\"************\");\n        a.clear();\n        System.out.println(\"栈大小:\"+a.size());\n        System.out.println(\"栈容量:\"+a.capacity);\n    }\n}\n\n\ninterface StackADT<T> {\n    public void clear();\n    public boolean isEmpty();\n    public T peek();\n    public T pop();\n    public void push(T v);\n    public int size();\n}\n```\n\n### 利用LinkedList实现Stack ###\n\n```java\npublic class Stack<T> {\n    private LinkedList<T> storage = new LinkedList<T>();\n    /** 入栈 **/\n    public void push(T v){\n        storage.addFirst(v);\n    }\n    /** 出栈 **/\n    public T pop(){\n        if(isEmpty()) return null;\n        return storage.removeFirst();\n    }\n    /** 栈为空 **/\n    public boolean isEmpty() {\n        return storage.isEmpty();\n    }\n    public String toString(){\n        return storage.toString();\n    }\n    public void clear(){ storage.clear(); }\n    public static void main(String[] args) {\n        Stack stack = new Stack<String>();\n        stack.push(\"a\");\n        stack.push(\"b\");\n        stack.push(\"c\");\n        System.out.println(stack.toString());\n        Object obj = stack.pop();\n        System.out.println(obj+\"------\"+stack.toString());\n        obj = stack.pop();\n        obj = stack.pop();\n        System.out.println(obj);\n    }\n}\n```\n","slug":"数据结构-Java（1）-实现Stack","published":1,"updated":"2016-10-31T08:03:39.591Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwyd91xn001gmc73rj9xzggn","content":"<h3 id=\"利用数组实现Stack\"><a href=\"#利用数组实现Stack\" class=\"headerlink\" title=\"利用数组实现Stack\"></a>利用数组实现Stack</h3><a id=\"more\"></a>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ArrayStack</span>&lt;<span class=\"title\">T</span>&gt; <span class=\"keyword\">implements</span> <span class=\"title\">StackADT</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> DEFAULT_SIZE=<span class=\"number\">2</span>;<span class=\"comment\">//默认大小</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> capacity;<span class=\"comment\">//栈容量</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> size;<span class=\"comment\">//栈大小</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> top;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Object[] array;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ArrayStack</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.capacity = DEFAULT_SIZE;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.array = <span class=\"keyword\">new</span> Object[<span class=\"keyword\">this</span>.capacity];</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.size = <span class=\"number\">0</span>;</span><br><span class=\"line\">        System.out.println(top);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ArrayStack</span><span class=\"params\">(<span class=\"keyword\">int</span> capacity)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.capacity = capacity;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.array = <span class=\"keyword\">new</span> Object[<span class=\"keyword\">this</span>.capacity];</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.size = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        Arrays.fill(<span class=\"keyword\">this</span>.array,<span class=\"keyword\">null</span>);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.size = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.top = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.capacity = DEFAULT_SIZE;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.array = <span class=\"keyword\">new</span> Object[<span class=\"keyword\">this</span>.capacity];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isEmpty</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.size == <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">peek</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isEmpty())&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (T) <span class=\"keyword\">this</span>.array[<span class=\"keyword\">this</span>.top-<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">pop</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        T v = (T) <span class=\"keyword\">this</span>.array[top-<span class=\"number\">1</span>];</span><br><span class=\"line\">        array[<span class=\"keyword\">this</span>.top-<span class=\"number\">1</span>] = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.top = <span class=\"keyword\">this</span>.top - <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.size--;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> v;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(T v)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.size&lt;<span class=\"keyword\">this</span>.capacity)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.array[top] = v;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.size++;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.top++;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            addStackCap();</span><br><span class=\"line\">            push(v);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">addStackCap</span><span class=\"params\">()</span> </span>&#123;<span class=\"comment\">//扩容</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.capacity = <span class=\"keyword\">this</span>.capacity+DEFAULT_SIZE;</span><br><span class=\"line\">        Object[] newArray = <span class=\"keyword\">new</span> Object[<span class=\"keyword\">this</span>.capacity];</span><br><span class=\"line\">        System.arraycopy(<span class=\"keyword\">this</span>.array, <span class=\"number\">0</span>, newArray, <span class=\"number\">0</span>,<span class=\"keyword\">this</span>.array.length);</span><br><span class=\"line\">        Arrays.fill(array, <span class=\"keyword\">null</span>);<span class=\"comment\">//原来的数组置空</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.array = newArray;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">size</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.size;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span><br><span class=\"line\">     * 测试栈</span><br><span class=\"line\">     * <span class=\"doctag\">@param</span> args</span><br><span class=\"line\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        ArrayStack&lt;Integer&gt; a = <span class=\"keyword\">new</span> ArrayStack&lt;Integer&gt;();</span><br><span class=\"line\">        a.push(<span class=\"number\">3</span>);</span><br><span class=\"line\">        a.push(<span class=\"number\">5</span>);</span><br><span class=\"line\">        a.push(<span class=\"number\">2</span>);</span><br><span class=\"line\">        a.push(<span class=\"number\">1</span>);</span><br><span class=\"line\">        a.push(<span class=\"number\">6</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"栈大小:\"</span>+a.size());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"栈容量:\"</span>+a.capacity);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"栈顶元素:\"</span>+a.peek());</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (!a.isEmpty())&#123;</span><br><span class=\"line\">            System.out.println(a.pop());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"栈大小:\"</span>+a.size());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"栈容量:\"</span>+a.capacity);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"栈顶元素:\"</span>+a.peek());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"************\"</span>);</span><br><span class=\"line\">        a.clear();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"栈大小:\"</span>+a.size());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"栈容量:\"</span>+a.capacity);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">StackADT</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isEmpty</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">peek</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">pop</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(T v)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">size</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"利用LinkedList实现Stack\"><a href=\"#利用LinkedList实现Stack\" class=\"headerlink\" title=\"利用LinkedList实现Stack\"></a>利用LinkedList实现Stack</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Stack</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> LinkedList&lt;T&gt; storage = <span class=\"keyword\">new</span> LinkedList&lt;T&gt;();</span><br><span class=\"line\">    <span class=\"comment\">/** 入栈 **/</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(T v)</span></span>&#123;</span><br><span class=\"line\">        storage.addFirst(v);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/** 出栈 **/</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">pop</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(isEmpty()) <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> storage.removeFirst();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/** 栈为空 **/</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isEmpty</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> storage.isEmpty();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> storage.toString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span></span>&#123; storage.clear(); &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Stack stack = <span class=\"keyword\">new</span> Stack&lt;String&gt;();</span><br><span class=\"line\">        stack.push(<span class=\"string\">\"a\"</span>);</span><br><span class=\"line\">        stack.push(<span class=\"string\">\"b\"</span>);</span><br><span class=\"line\">        stack.push(<span class=\"string\">\"c\"</span>);</span><br><span class=\"line\">        System.out.println(stack.toString());</span><br><span class=\"line\">        Object obj = stack.pop();</span><br><span class=\"line\">        System.out.println(obj+<span class=\"string\">\"------\"</span>+stack.toString());</span><br><span class=\"line\">        obj = stack.pop();</span><br><span class=\"line\">        obj = stack.pop();</span><br><span class=\"line\">        System.out.println(obj);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","excerpt":"<h3 id=\"利用数组实现Stack\"><a href=\"#利用数组实现Stack\" class=\"headerlink\" title=\"利用数组实现Stack\"></a>利用数组实现Stack</h3>","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ArrayStack</span>&lt;<span class=\"title\">T</span>&gt; <span class=\"keyword\">implements</span> <span class=\"title\">StackADT</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> DEFAULT_SIZE=<span class=\"number\">2</span>;<span class=\"comment\">//默认大小</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> capacity;<span class=\"comment\">//栈容量</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> size;<span class=\"comment\">//栈大小</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> top;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Object[] array;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ArrayStack</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.capacity = DEFAULT_SIZE;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.array = <span class=\"keyword\">new</span> Object[<span class=\"keyword\">this</span>.capacity];</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.size = <span class=\"number\">0</span>;</span><br><span class=\"line\">        System.out.println(top);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ArrayStack</span><span class=\"params\">(<span class=\"keyword\">int</span> capacity)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.capacity = capacity;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.array = <span class=\"keyword\">new</span> Object[<span class=\"keyword\">this</span>.capacity];</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.size = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        Arrays.fill(<span class=\"keyword\">this</span>.array,<span class=\"keyword\">null</span>);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.size = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.top = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.capacity = DEFAULT_SIZE;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.array = <span class=\"keyword\">new</span> Object[<span class=\"keyword\">this</span>.capacity];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isEmpty</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.size == <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">peek</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isEmpty())&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (T) <span class=\"keyword\">this</span>.array[<span class=\"keyword\">this</span>.top-<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">pop</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        T v = (T) <span class=\"keyword\">this</span>.array[top-<span class=\"number\">1</span>];</span><br><span class=\"line\">        array[<span class=\"keyword\">this</span>.top-<span class=\"number\">1</span>] = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.top = <span class=\"keyword\">this</span>.top - <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.size--;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> v;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(T v)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.size&lt;<span class=\"keyword\">this</span>.capacity)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.array[top] = v;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.size++;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.top++;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            addStackCap();</span><br><span class=\"line\">            push(v);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">addStackCap</span><span class=\"params\">()</span> </span>&#123;<span class=\"comment\">//扩容</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.capacity = <span class=\"keyword\">this</span>.capacity+DEFAULT_SIZE;</span><br><span class=\"line\">        Object[] newArray = <span class=\"keyword\">new</span> Object[<span class=\"keyword\">this</span>.capacity];</span><br><span class=\"line\">        System.arraycopy(<span class=\"keyword\">this</span>.array, <span class=\"number\">0</span>, newArray, <span class=\"number\">0</span>,<span class=\"keyword\">this</span>.array.length);</span><br><span class=\"line\">        Arrays.fill(array, <span class=\"keyword\">null</span>);<span class=\"comment\">//原来的数组置空</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.array = newArray;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">size</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.size;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span><br><span class=\"line\">     * 测试栈</span><br><span class=\"line\">     * <span class=\"doctag\">@param</span> args</span><br><span class=\"line\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        ArrayStack&lt;Integer&gt; a = <span class=\"keyword\">new</span> ArrayStack&lt;Integer&gt;();</span><br><span class=\"line\">        a.push(<span class=\"number\">3</span>);</span><br><span class=\"line\">        a.push(<span class=\"number\">5</span>);</span><br><span class=\"line\">        a.push(<span class=\"number\">2</span>);</span><br><span class=\"line\">        a.push(<span class=\"number\">1</span>);</span><br><span class=\"line\">        a.push(<span class=\"number\">6</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"栈大小:\"</span>+a.size());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"栈容量:\"</span>+a.capacity);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"栈顶元素:\"</span>+a.peek());</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (!a.isEmpty())&#123;</span><br><span class=\"line\">            System.out.println(a.pop());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"栈大小:\"</span>+a.size());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"栈容量:\"</span>+a.capacity);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"栈顶元素:\"</span>+a.peek());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"************\"</span>);</span><br><span class=\"line\">        a.clear();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"栈大小:\"</span>+a.size());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"栈容量:\"</span>+a.capacity);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">StackADT</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isEmpty</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">peek</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">pop</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(T v)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">size</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"利用LinkedList实现Stack\"><a href=\"#利用LinkedList实现Stack\" class=\"headerlink\" title=\"利用LinkedList实现Stack\"></a>利用LinkedList实现Stack</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Stack</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> LinkedList&lt;T&gt; storage = <span class=\"keyword\">new</span> LinkedList&lt;T&gt;();</span><br><span class=\"line\">    <span class=\"comment\">/** 入栈 **/</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(T v)</span></span>&#123;</span><br><span class=\"line\">        storage.addFirst(v);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/** 出栈 **/</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">pop</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(isEmpty()) <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> storage.removeFirst();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/** 栈为空 **/</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isEmpty</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> storage.isEmpty();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> storage.toString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span></span>&#123; storage.clear(); &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Stack stack = <span class=\"keyword\">new</span> Stack&lt;String&gt;();</span><br><span class=\"line\">        stack.push(<span class=\"string\">\"a\"</span>);</span><br><span class=\"line\">        stack.push(<span class=\"string\">\"b\"</span>);</span><br><span class=\"line\">        stack.push(<span class=\"string\">\"c\"</span>);</span><br><span class=\"line\">        System.out.println(stack.toString());</span><br><span class=\"line\">        Object obj = stack.pop();</span><br><span class=\"line\">        System.out.println(obj+<span class=\"string\">\"------\"</span>+stack.toString());</span><br><span class=\"line\">        obj = stack.pop();</span><br><span class=\"line\">        obj = stack.pop();</span><br><span class=\"line\">        System.out.println(obj);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":" 编写简单的ORM","date":"2016-08-24T01:51:46.000Z","_content":"\n最近在跟着廖雪峰的python3教程，把学习的过程记录下来。日后好反复翻阅\n<!-- more -->\n\n```python\nclass Field(object):\n    def __init__(self, name, colum_type):\n        self.name = name\n        self.column_type = colum_type\n\n    def __str__(self):\n        return '<%s : %s>' % (self.__class__.__name__, self.name)\n\n\nclass StringField(Field):\n    def __init__(self, name):\n        super(StringField, self).__init__(name, 'varchar(100)')\n\n\nclass IntegerField(Field):\n    def __init__(self, name):\n        super(IntegerField, self).__init__(name, 'bigint')\n\n\nclass ModelMetaclass(type):\n    def __new__(cls, name, bases, attrs):\n        if name == 'Model':\n            return type.__new__(cls, name, bases, attrs)\n        print(\"Found model: %s\" % name)\n        mappings = dict()\n        for k, v in attrs.items():\n            if isinstance(v, Field):\n                print(\"Found mapping: %s ==> %s\" % (k, v))\n                mappings[k] = v\n\n        for k in mappings.keys():\n            attrs.pop(k)\n\n        attrs['__mappings__'] = mappings  # 保存属性和映射关系\n        attrs['__table__'] = name  # 表明与类名一致\n        return type.__new__(cls, name, bases, attrs)\n\nclass Model(dict, metaclass=ModelMetaclass):\n    def __init__(self, **kw):\n        super(Model, self).__init__(**kw)\n\n    def __getattr__(self, key):\n        try:\n            return self[key]\n        except KeyError:\n            raise AttributeError(r\"'Model' object has no attribute '%s' \" % key)\n\n    def __setattr__(self, key, value):\n        self[key] = value\n\n    def save(self):\n        fields = []\n        params = []\n        args = []\n        for k, v in self.__mappings__.items():\n            fields.append(v.name)\n            params.append(\"?\")\n            args.append(getattr(self, k, None))\n        print('='.join(['name', 'iki']))\n        sql = \"INSERT INTO %s (%s) VALUES (%s)\" % (self.__table__, ','.join(fields), ','.join(params))\n        print('SQL: %s' % sql)\n        print('ARGS: %s' % str(args))\n\n    def update(self):\n        pass\n\n\n\n```\n\n```python\nclass User(Model):\n    # 定义类的属性到列的映射：\n    id = IntegerField('id')\n    name = StringField('username')\n    email = StringField('email')\n    password = StringField('password')\n\nu = User(id=12345, name='Michael', email='test@orm.org', password='my-pwd')\nu.save()\n\n[OUTPUT]\nFound model: User\nFound mapping: id ==> <IntegerField : id>\nFound mapping: name ==> <StringField : username>\nFound mapping: email ==> <StringField : email>\nFound mapping: password ==> <StringField : password>\n\nSQL: INSERT INTO User (username,id,email,password) VALUES (?,?,?,?)\nARGS: ['Michael', 12345, 'test@orm.org', 'my-pwd']\n\n\n```\n\n**本段代码是照着廖雪峰python3教程敲得，后续会补充一些理解和扩展该代码**\n","source":"_posts/编写简单的ORM.md","raw":"---\ntitle: ' 编写简单的ORM'\ndate: 2016-08-24 09:51:46\ncategories: \"Python\"\ntags:\n- 学习\n---\n\n最近在跟着廖雪峰的python3教程，把学习的过程记录下来。日后好反复翻阅\n<!-- more -->\n\n```python\nclass Field(object):\n    def __init__(self, name, colum_type):\n        self.name = name\n        self.column_type = colum_type\n\n    def __str__(self):\n        return '<%s : %s>' % (self.__class__.__name__, self.name)\n\n\nclass StringField(Field):\n    def __init__(self, name):\n        super(StringField, self).__init__(name, 'varchar(100)')\n\n\nclass IntegerField(Field):\n    def __init__(self, name):\n        super(IntegerField, self).__init__(name, 'bigint')\n\n\nclass ModelMetaclass(type):\n    def __new__(cls, name, bases, attrs):\n        if name == 'Model':\n            return type.__new__(cls, name, bases, attrs)\n        print(\"Found model: %s\" % name)\n        mappings = dict()\n        for k, v in attrs.items():\n            if isinstance(v, Field):\n                print(\"Found mapping: %s ==> %s\" % (k, v))\n                mappings[k] = v\n\n        for k in mappings.keys():\n            attrs.pop(k)\n\n        attrs['__mappings__'] = mappings  # 保存属性和映射关系\n        attrs['__table__'] = name  # 表明与类名一致\n        return type.__new__(cls, name, bases, attrs)\n\nclass Model(dict, metaclass=ModelMetaclass):\n    def __init__(self, **kw):\n        super(Model, self).__init__(**kw)\n\n    def __getattr__(self, key):\n        try:\n            return self[key]\n        except KeyError:\n            raise AttributeError(r\"'Model' object has no attribute '%s' \" % key)\n\n    def __setattr__(self, key, value):\n        self[key] = value\n\n    def save(self):\n        fields = []\n        params = []\n        args = []\n        for k, v in self.__mappings__.items():\n            fields.append(v.name)\n            params.append(\"?\")\n            args.append(getattr(self, k, None))\n        print('='.join(['name', 'iki']))\n        sql = \"INSERT INTO %s (%s) VALUES (%s)\" % (self.__table__, ','.join(fields), ','.join(params))\n        print('SQL: %s' % sql)\n        print('ARGS: %s' % str(args))\n\n    def update(self):\n        pass\n\n\n\n```\n\n```python\nclass User(Model):\n    # 定义类的属性到列的映射：\n    id = IntegerField('id')\n    name = StringField('username')\n    email = StringField('email')\n    password = StringField('password')\n\nu = User(id=12345, name='Michael', email='test@orm.org', password='my-pwd')\nu.save()\n\n[OUTPUT]\nFound model: User\nFound mapping: id ==> <IntegerField : id>\nFound mapping: name ==> <StringField : username>\nFound mapping: email ==> <StringField : email>\nFound mapping: password ==> <StringField : password>\n\nSQL: INSERT INTO User (username,id,email,password) VALUES (?,?,?,?)\nARGS: ['Michael', 12345, 'test@orm.org', 'my-pwd']\n\n\n```\n\n**本段代码是照着廖雪峰python3教程敲得，后续会补充一些理解和扩展该代码**\n","slug":"编写简单的ORM","published":1,"updated":"2016-10-17T09:46:22.788Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwyd91xq001kmc73iwlrfbj5","content":"<p>最近在跟着廖雪峰的python3教程，把学习的过程记录下来。日后好反复翻阅<br><a id=\"more\"></a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Field</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, name, colum_type)</span>:</span></span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.column_type = colum_type</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__str__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'&lt;%s : %s&gt;'</span> % (self.__class__.__name__, self.name)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StringField</span><span class=\"params\">(Field)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, name)</span>:</span></span><br><span class=\"line\">        super(StringField, self).__init__(name, <span class=\"string\">'varchar(100)'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IntegerField</span><span class=\"params\">(Field)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, name)</span>:</span></span><br><span class=\"line\">        super(IntegerField, self).__init__(name, <span class=\"string\">'bigint'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ModelMetaclass</span><span class=\"params\">(type)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__new__</span><span class=\"params\">(cls, name, bases, attrs)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> name == <span class=\"string\">'Model'</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> type.__new__(cls, name, bases, attrs)</span><br><span class=\"line\">        print(<span class=\"string\">\"Found model: %s\"</span> % name)</span><br><span class=\"line\">        mappings = dict()</span><br><span class=\"line\">        <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> attrs.items():</span><br><span class=\"line\">            <span class=\"keyword\">if</span> isinstance(v, Field):</span><br><span class=\"line\">                print(<span class=\"string\">\"Found mapping: %s ==&gt; %s\"</span> % (k, v))</span><br><span class=\"line\">                mappings[k] = v</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> mappings.keys():</span><br><span class=\"line\">            attrs.pop(k)</span><br><span class=\"line\"></span><br><span class=\"line\">        attrs[<span class=\"string\">'__mappings__'</span>] = mappings  <span class=\"comment\"># 保存属性和映射关系</span></span><br><span class=\"line\">        attrs[<span class=\"string\">'__table__'</span>] = name  <span class=\"comment\"># 表明与类名一致</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> type.__new__(cls, name, bases, attrs)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Model</span><span class=\"params\">(dict, metaclass=ModelMetaclass)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, **kw)</span>:</span></span><br><span class=\"line\">        super(Model, self).__init__(**kw)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__getattr__</span><span class=\"params\">(self, key)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> self[key]</span><br><span class=\"line\">        <span class=\"keyword\">except</span> KeyError:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> AttributeError(<span class=\"string\">r\"'Model' object has no attribute '%s' \"</span> % key)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__setattr__</span><span class=\"params\">(self, key, value)</span>:</span></span><br><span class=\"line\">        self[key] = value</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">save</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        fields = []</span><br><span class=\"line\">        params = []</span><br><span class=\"line\">        args = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> self.__mappings__.items():</span><br><span class=\"line\">            fields.append(v.name)</span><br><span class=\"line\">            params.append(<span class=\"string\">\"?\"</span>)</span><br><span class=\"line\">            args.append(getattr(self, k, <span class=\"keyword\">None</span>))</span><br><span class=\"line\">        print(<span class=\"string\">'='</span>.join([<span class=\"string\">'name'</span>, <span class=\"string\">'iki'</span>]))</span><br><span class=\"line\">        sql = <span class=\"string\">\"INSERT INTO %s (%s) VALUES (%s)\"</span> % (self.__table__, <span class=\"string\">','</span>.join(fields), <span class=\"string\">','</span>.join(params))</span><br><span class=\"line\">        print(<span class=\"string\">'SQL: %s'</span> % sql)</span><br><span class=\"line\">        print(<span class=\"string\">'ARGS: %s'</span> % str(args))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">update</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class User(Model):</span><br><span class=\"line\">    # 定义类的属性到列的映射：</span><br><span class=\"line\">    id = IntegerField('id')</span><br><span class=\"line\">    name = StringField('username')</span><br><span class=\"line\">    email = StringField('email')</span><br><span class=\"line\">    password = StringField('password')</span><br><span class=\"line\"></span><br><span class=\"line\">u = User(id=12345, name='Michael', email='test@orm.org', password='my-pwd')</span><br><span class=\"line\">u.save()</span><br><span class=\"line\"></span><br><span class=\"line\">[OUTPUT]</span><br><span class=\"line\">Found model: User</span><br><span class=\"line\">Found mapping: id ==&gt; &lt;IntegerField : id&gt;</span><br><span class=\"line\">Found mapping: name ==&gt; &lt;StringField : username&gt;</span><br><span class=\"line\">Found mapping: email ==&gt; &lt;StringField : email&gt;</span><br><span class=\"line\">Found mapping: password ==&gt; &lt;StringField : password&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">SQL: INSERT INTO User (username,id,email,password) VALUES (?,?,?,?)</span><br><span class=\"line\">ARGS: ['Michael', 12345, 'test@orm.org', 'my-pwd']</span><br></pre></td></tr></table></figure>\n<p><strong>本段代码是照着廖雪峰python3教程敲得，后续会补充一些理解和扩展该代码</strong></p>\n","excerpt":"<p>最近在跟着廖雪峰的python3教程，把学习的过程记录下来。日后好反复翻阅<br>","more":"</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Field</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, name, colum_type)</span>:</span></span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.column_type = colum_type</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__str__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'&lt;%s : %s&gt;'</span> % (self.__class__.__name__, self.name)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StringField</span><span class=\"params\">(Field)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, name)</span>:</span></span><br><span class=\"line\">        super(StringField, self).__init__(name, <span class=\"string\">'varchar(100)'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IntegerField</span><span class=\"params\">(Field)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, name)</span>:</span></span><br><span class=\"line\">        super(IntegerField, self).__init__(name, <span class=\"string\">'bigint'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ModelMetaclass</span><span class=\"params\">(type)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__new__</span><span class=\"params\">(cls, name, bases, attrs)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> name == <span class=\"string\">'Model'</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> type.__new__(cls, name, bases, attrs)</span><br><span class=\"line\">        print(<span class=\"string\">\"Found model: %s\"</span> % name)</span><br><span class=\"line\">        mappings = dict()</span><br><span class=\"line\">        <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> attrs.items():</span><br><span class=\"line\">            <span class=\"keyword\">if</span> isinstance(v, Field):</span><br><span class=\"line\">                print(<span class=\"string\">\"Found mapping: %s ==&gt; %s\"</span> % (k, v))</span><br><span class=\"line\">                mappings[k] = v</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> mappings.keys():</span><br><span class=\"line\">            attrs.pop(k)</span><br><span class=\"line\"></span><br><span class=\"line\">        attrs[<span class=\"string\">'__mappings__'</span>] = mappings  <span class=\"comment\"># 保存属性和映射关系</span></span><br><span class=\"line\">        attrs[<span class=\"string\">'__table__'</span>] = name  <span class=\"comment\"># 表明与类名一致</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> type.__new__(cls, name, bases, attrs)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Model</span><span class=\"params\">(dict, metaclass=ModelMetaclass)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, **kw)</span>:</span></span><br><span class=\"line\">        super(Model, self).__init__(**kw)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__getattr__</span><span class=\"params\">(self, key)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> self[key]</span><br><span class=\"line\">        <span class=\"keyword\">except</span> KeyError:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> AttributeError(<span class=\"string\">r\"'Model' object has no attribute '%s' \"</span> % key)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__setattr__</span><span class=\"params\">(self, key, value)</span>:</span></span><br><span class=\"line\">        self[key] = value</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">save</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        fields = []</span><br><span class=\"line\">        params = []</span><br><span class=\"line\">        args = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> self.__mappings__.items():</span><br><span class=\"line\">            fields.append(v.name)</span><br><span class=\"line\">            params.append(<span class=\"string\">\"?\"</span>)</span><br><span class=\"line\">            args.append(getattr(self, k, <span class=\"keyword\">None</span>))</span><br><span class=\"line\">        print(<span class=\"string\">'='</span>.join([<span class=\"string\">'name'</span>, <span class=\"string\">'iki'</span>]))</span><br><span class=\"line\">        sql = <span class=\"string\">\"INSERT INTO %s (%s) VALUES (%s)\"</span> % (self.__table__, <span class=\"string\">','</span>.join(fields), <span class=\"string\">','</span>.join(params))</span><br><span class=\"line\">        print(<span class=\"string\">'SQL: %s'</span> % sql)</span><br><span class=\"line\">        print(<span class=\"string\">'ARGS: %s'</span> % str(args))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">update</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class User(Model):</span><br><span class=\"line\">    # 定义类的属性到列的映射：</span><br><span class=\"line\">    id = IntegerField('id')</span><br><span class=\"line\">    name = StringField('username')</span><br><span class=\"line\">    email = StringField('email')</span><br><span class=\"line\">    password = StringField('password')</span><br><span class=\"line\"></span><br><span class=\"line\">u = User(id=12345, name='Michael', email='test@orm.org', password='my-pwd')</span><br><span class=\"line\">u.save()</span><br><span class=\"line\"></span><br><span class=\"line\">[OUTPUT]</span><br><span class=\"line\">Found model: User</span><br><span class=\"line\">Found mapping: id ==&gt; &lt;IntegerField : id&gt;</span><br><span class=\"line\">Found mapping: name ==&gt; &lt;StringField : username&gt;</span><br><span class=\"line\">Found mapping: email ==&gt; &lt;StringField : email&gt;</span><br><span class=\"line\">Found mapping: password ==&gt; &lt;StringField : password&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">SQL: INSERT INTO User (username,id,email,password) VALUES (?,?,?,?)</span><br><span class=\"line\">ARGS: ['Michael', 12345, 'test@orm.org', 'my-pwd']</span><br></pre></td></tr></table></figure>\n<p><strong>本段代码是照着廖雪峰python3教程敲得，后续会补充一些理解和扩展该代码</strong></p>"},{"title":"SQL 中Group by 的使用","date":"2016-05-11T02:59:47.000Z","_content":"\n## 在多表查询中使用Group by ##\n\n> 有三张表，一张是部门表-dept，一张是餐厅表-dinner，还有一张是员工消费明细表-cost(**含餐厅、部门外键**)\n> 现在需要一张报表，需求如下:\n>\n|部门名称|餐厅名称|消费总次数|消费总金额|\n|-----|-----|------|-------|\n|部门1|餐厅1|2000|20000|\n|部门1|餐厅2|2000|20000|\n|部门2|餐厅1|2000|20000|\n\n<!-- more -->\n\n```sql\nselect dept.deptname,dinner.name,cost1.countsum,cost2.money from cost as c \nleft join (select dining_id,dept_id,count(*) as countsum from  cost group by dining_id,dept_id) as c1 on c1.dining_id = c.dining_id and c1.dept_id=c.dept_id\nleft join (select dining_id,dept_id,sum(money) as money from  cost group by dining_id,dept_id) as c2 on c2.dining_id = c.dining_id and c2.dept_id=ic.dept_id\nleft join dinner as d on d.id= c.dining_id\nleft join dept as dept on dept.deptid= c.dept_id ;\n\n```\n\n**注意：**\n\n> 当使用`group by`时，`select` 指定的字段要么作为分组\n分组依据，写在`group by` 后边，要吗已经被包含在聚合函数中。\n如果不是这两种情况的话会跳出错误：\n\n> *选择列表中的列 'xxx' 无效，因为该列没有包含在聚合函数或 GROUP BY 子句中。*\n","source":"_posts/SQL 中Group by 的使用.md","raw":"---\ntitle: SQL 中Group by 的使用\ndate: 2016-05-11 10:59:47\ncategories: \"SQL\"\ntags:\n- 学习\n---\n\n## 在多表查询中使用Group by ##\n\n> 有三张表，一张是部门表-dept，一张是餐厅表-dinner，还有一张是员工消费明细表-cost(**含餐厅、部门外键**)\n> 现在需要一张报表，需求如下:\n>\n|部门名称|餐厅名称|消费总次数|消费总金额|\n|-----|-----|------|-------|\n|部门1|餐厅1|2000|20000|\n|部门1|餐厅2|2000|20000|\n|部门2|餐厅1|2000|20000|\n\n<!-- more -->\n\n```sql\nselect dept.deptname,dinner.name,cost1.countsum,cost2.money from cost as c \nleft join (select dining_id,dept_id,count(*) as countsum from  cost group by dining_id,dept_id) as c1 on c1.dining_id = c.dining_id and c1.dept_id=c.dept_id\nleft join (select dining_id,dept_id,sum(money) as money from  cost group by dining_id,dept_id) as c2 on c2.dining_id = c.dining_id and c2.dept_id=ic.dept_id\nleft join dinner as d on d.id= c.dining_id\nleft join dept as dept on dept.deptid= c.dept_id ;\n\n```\n\n**注意：**\n\n> 当使用`group by`时，`select` 指定的字段要么作为分组\n分组依据，写在`group by` 后边，要吗已经被包含在聚合函数中。\n如果不是这两种情况的话会跳出错误：\n\n> *选择列表中的列 'xxx' 无效，因为该列没有包含在聚合函数或 GROUP BY 子句中。*\n","slug":"SQL 中Group by 的使用","published":1,"updated":"2016-08-18T03:01:24.956Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwyd91xt001nmc73gsma9h2o","content":"<h2 id=\"在多表查询中使用Group-by\"><a href=\"#在多表查询中使用Group-by\" class=\"headerlink\" title=\"在多表查询中使用Group by\"></a>在多表查询中使用Group by</h2><blockquote>\n<p>有三张表，一张是部门表-dept，一张是餐厅表-dinner，还有一张是员工消费明细表-cost(<strong>含餐厅、部门外键</strong>)<br>现在需要一张报表，需求如下:</p>\n<table>\n<thead>\n<tr>\n<th>部门名称</th>\n<th>餐厅名称</th>\n<th>消费总次数</th>\n<th>消费总金额</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>部门1</td>\n<td>餐厅1</td>\n<td>2000</td>\n<td>20000</td>\n</tr>\n<tr>\n<td>部门1</td>\n<td>餐厅2</td>\n<td>2000</td>\n<td>20000</td>\n</tr>\n<tr>\n<td>部门2</td>\n<td>餐厅1</td>\n<td>2000</td>\n<td>20000</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<a id=\"more\"></a>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> dept.deptname,dinner.name,cost1.countsum,cost2.money <span class=\"keyword\">from</span> <span class=\"keyword\">cost</span> <span class=\"keyword\">as</span> c </span><br><span class=\"line\"><span class=\"keyword\">left</span> <span class=\"keyword\">join</span> (<span class=\"keyword\">select</span> dining_id,dept_id,<span class=\"keyword\">count</span>(*) <span class=\"keyword\">as</span> countsum <span class=\"keyword\">from</span>  <span class=\"keyword\">cost</span> <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> dining_id,dept_id) <span class=\"keyword\">as</span> c1 <span class=\"keyword\">on</span> c1.dining_id = c.dining_id <span class=\"keyword\">and</span> c1.dept_id=c.dept_id</span><br><span class=\"line\"><span class=\"keyword\">left</span> <span class=\"keyword\">join</span> (<span class=\"keyword\">select</span> dining_id,dept_id,<span class=\"keyword\">sum</span>(money) <span class=\"keyword\">as</span> money <span class=\"keyword\">from</span>  <span class=\"keyword\">cost</span> <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> dining_id,dept_id) <span class=\"keyword\">as</span> c2 <span class=\"keyword\">on</span> c2.dining_id = c.dining_id <span class=\"keyword\">and</span> c2.dept_id=ic.dept_id</span><br><span class=\"line\"><span class=\"keyword\">left</span> <span class=\"keyword\">join</span> dinner <span class=\"keyword\">as</span> d <span class=\"keyword\">on</span> d.id= c.dining_id</span><br><span class=\"line\"><span class=\"keyword\">left</span> <span class=\"keyword\">join</span> dept <span class=\"keyword\">as</span> dept <span class=\"keyword\">on</span> dept.deptid= c.dept_id ;</span><br></pre></td></tr></table></figure>\n<p><strong>注意：</strong></p>\n<blockquote>\n<p>当使用<code>group by</code>时，<code>select</code> 指定的字段要么作为分组<br>分组依据，写在<code>group by</code> 后边，要吗已经被包含在聚合函数中。<br>如果不是这两种情况的话会跳出错误：</p>\n<p><em>选择列表中的列 ‘xxx’ 无效，因为该列没有包含在聚合函数或 GROUP BY 子句中。</em></p>\n</blockquote>\n","excerpt":"<h2 id=\"在多表查询中使用Group-by\"><a href=\"#在多表查询中使用Group-by\" class=\"headerlink\" title=\"在多表查询中使用Group by\"></a>在多表查询中使用Group by</h2><blockquote>\n<p>有三张表，一张是部门表-dept，一张是餐厅表-dinner，还有一张是员工消费明细表-cost(<strong>含餐厅、部门外键</strong>)<br>现在需要一张报表，需求如下:</p>\n<table>\n<thead>\n<tr>\n<th>部门名称</th>\n<th>餐厅名称</th>\n<th>消费总次数</th>\n<th>消费总金额</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>部门1</td>\n<td>餐厅1</td>\n<td>2000</td>\n<td>20000</td>\n</tr>\n<tr>\n<td>部门1</td>\n<td>餐厅2</td>\n<td>2000</td>\n<td>20000</td>\n</tr>\n<tr>\n<td>部门2</td>\n<td>餐厅1</td>\n<td>2000</td>\n<td>20000</td>\n</tr>\n</tbody>\n</table>\n</blockquote>","more":"<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> dept.deptname,dinner.name,cost1.countsum,cost2.money <span class=\"keyword\">from</span> <span class=\"keyword\">cost</span> <span class=\"keyword\">as</span> c </span><br><span class=\"line\"><span class=\"keyword\">left</span> <span class=\"keyword\">join</span> (<span class=\"keyword\">select</span> dining_id,dept_id,<span class=\"keyword\">count</span>(*) <span class=\"keyword\">as</span> countsum <span class=\"keyword\">from</span>  <span class=\"keyword\">cost</span> <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> dining_id,dept_id) <span class=\"keyword\">as</span> c1 <span class=\"keyword\">on</span> c1.dining_id = c.dining_id <span class=\"keyword\">and</span> c1.dept_id=c.dept_id</span><br><span class=\"line\"><span class=\"keyword\">left</span> <span class=\"keyword\">join</span> (<span class=\"keyword\">select</span> dining_id,dept_id,<span class=\"keyword\">sum</span>(money) <span class=\"keyword\">as</span> money <span class=\"keyword\">from</span>  <span class=\"keyword\">cost</span> <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> dining_id,dept_id) <span class=\"keyword\">as</span> c2 <span class=\"keyword\">on</span> c2.dining_id = c.dining_id <span class=\"keyword\">and</span> c2.dept_id=ic.dept_id</span><br><span class=\"line\"><span class=\"keyword\">left</span> <span class=\"keyword\">join</span> dinner <span class=\"keyword\">as</span> d <span class=\"keyword\">on</span> d.id= c.dining_id</span><br><span class=\"line\"><span class=\"keyword\">left</span> <span class=\"keyword\">join</span> dept <span class=\"keyword\">as</span> dept <span class=\"keyword\">on</span> dept.deptid= c.dept_id ;</span><br></pre></td></tr></table></figure>\n<p><strong>注意：</strong></p>\n<blockquote>\n<p>当使用<code>group by</code>时，<code>select</code> 指定的字段要么作为分组<br>分组依据，写在<code>group by</code> 后边，要吗已经被包含在聚合函数中。<br>如果不是这两种情况的话会跳出错误：</p>\n<p><em>选择列表中的列 ‘xxx’ 无效，因为该列没有包含在聚合函数或 GROUP BY 子句中。</em></p>\n</blockquote>"},{"title":"Nginx学习笔记（一）","date":"2016-10-16T14:42:14.000Z","_content":"### 在Linux下安装Nginx ###\n1. 在(Nginx官网)[http://nginx.org/en/download.html]上下载压缩包。\n2. 解压后进行安装\n<!-- more -->\n\n    > 在./configure的时候会报错\n    > ./configure: error: the HTTP rewrite module requires the PCRE library.\n    >  这时候我们需要在Linux上安装PCRE库\n    >  sudo apt-get update\n    >  sudo apt-get install libpcre3 libpcre3-dev\n    >  再次编译，发现又报了缺少zlib library，我们再次照葫芦画瓢安装zlib\n    >  sudo apt-get install zlib1g-dev\n    >  再次编译，发现Nginx安装成功！\n\n### Nginx的启动，关闭命令 ###\n1. Nginx 启动命令\n```shell\n/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf\n```\n\n2. Nginx 关闭命令\n```shell\nkill -QUIT PID\n```\n\n3. 将Nginx写成服务运行\n如果每次都去执行`/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf`是非常麻烦的事。所以我们将Nginx的相关操作写成Bash脚本，就能像windows服务一样简单的几个命令就能完成任务。\n首先我们在网上Copy一份*[>>Ngnix脚本](http://github.com/amoyiki/Blog/raw/master/Document/nginx)*\n然后在Linux执行命令\n```shell\n$> sudo wget http://github.com/amoyiki/Blog/raw/master/Document/nginx -O /etc/init.d/nginx\n$> sudo chmod +x /etc/init.d/nginx\n```\n\n现在我们就可以用简短的命令启动服务了\n\n> Usage: /etc/init.d/nginx {start|stop|restart|force-reload|reload|status|configtest|quietupgrade|terminate|destroy}\n","source":"_posts/Nginx学习笔记（一）.md","raw":"---\ntitle: Nginx学习笔记（一）\ndate: 2016-10-16 22:42:14\ncategories: \"Nginx\"\ntags:\n- 学习\n---\n### 在Linux下安装Nginx ###\n1. 在(Nginx官网)[http://nginx.org/en/download.html]上下载压缩包。\n2. 解压后进行安装\n<!-- more -->\n\n    > 在./configure的时候会报错\n    > ./configure: error: the HTTP rewrite module requires the PCRE library.\n    >  这时候我们需要在Linux上安装PCRE库\n    >  sudo apt-get update\n    >  sudo apt-get install libpcre3 libpcre3-dev\n    >  再次编译，发现又报了缺少zlib library，我们再次照葫芦画瓢安装zlib\n    >  sudo apt-get install zlib1g-dev\n    >  再次编译，发现Nginx安装成功！\n\n### Nginx的启动，关闭命令 ###\n1. Nginx 启动命令\n```shell\n/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf\n```\n\n2. Nginx 关闭命令\n```shell\nkill -QUIT PID\n```\n\n3. 将Nginx写成服务运行\n如果每次都去执行`/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf`是非常麻烦的事。所以我们将Nginx的相关操作写成Bash脚本，就能像windows服务一样简单的几个命令就能完成任务。\n首先我们在网上Copy一份*[>>Ngnix脚本](http://github.com/amoyiki/Blog/raw/master/Document/nginx)*\n然后在Linux执行命令\n```shell\n$> sudo wget http://github.com/amoyiki/Blog/raw/master/Document/nginx -O /etc/init.d/nginx\n$> sudo chmod +x /etc/init.d/nginx\n```\n\n现在我们就可以用简短的命令启动服务了\n\n> Usage: /etc/init.d/nginx {start|stop|restart|force-reload|reload|status|configtest|quietupgrade|terminate|destroy}\n","slug":"Nginx学习笔记（一）","published":1,"updated":"2016-11-25T09:02:30.683Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwyd91xv001qmc73l8mw4bt0","content":"<h3 id=\"在Linux下安装Nginx\"><a href=\"#在Linux下安装Nginx\" class=\"headerlink\" title=\"在Linux下安装Nginx\"></a>在Linux下安装Nginx</h3><ol>\n<li>在(Nginx官网)[<a href=\"http://nginx.org/en/download.html]上下载压缩包。\" target=\"_blank\" rel=\"external\">http://nginx.org/en/download.html]上下载压缩包。</a></li>\n<li><p>解压后进行安装</p>\n<a id=\"more\"></a>\n<blockquote>\n<p>在./configure的时候会报错<br>./configure: error: the HTTP rewrite module requires the PCRE library.<br> 这时候我们需要在Linux上安装PCRE库<br> sudo apt-get update<br> sudo apt-get install libpcre3 libpcre3-dev<br> 再次编译，发现又报了缺少zlib library，我们再次照葫芦画瓢安装zlib<br> sudo apt-get install zlib1g-dev<br> 再次编译，发现Nginx安装成功！</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"Nginx的启动，关闭命令\"><a href=\"#Nginx的启动，关闭命令\" class=\"headerlink\" title=\"Nginx的启动，关闭命令\"></a>Nginx的启动，关闭命令</h3><ol>\n<li><p>Nginx 启动命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Nginx 关闭命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kill -QUIT PID</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将Nginx写成服务运行<br>如果每次都去执行<code>/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf</code>是非常麻烦的事。所以我们将Nginx的相关操作写成Bash脚本，就能像windows服务一样简单的几个命令就能完成任务。<br>首先我们在网上Copy一份<em><a href=\"http://github.com/amoyiki/Blog/raw/master/Document/nginx\" target=\"_blank\" rel=\"external\">&gt;&gt;Ngnix脚本</a></em><br>然后在Linux执行命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$&gt; sudo wget http://github.com/amoyiki/Blog/raw/master/Document/nginx -O /etc/init.d/nginx</span><br><span class=\"line\">$&gt; sudo chmod +x /etc/init.d/nginx</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>现在我们就可以用简短的命令启动服务了</p>\n<blockquote>\n<p>Usage: /etc/init.d/nginx {start|stop|restart|force-reload|reload|status|configtest|quietupgrade|terminate|destroy}</p>\n</blockquote>\n","excerpt":"<h3 id=\"在Linux下安装Nginx\"><a href=\"#在Linux下安装Nginx\" class=\"headerlink\" title=\"在Linux下安装Nginx\"></a>在Linux下安装Nginx</h3><ol>\n<li>在(Nginx官网)[<a href=\"http://nginx.org/en/download.html]上下载压缩包。\">http://nginx.org/en/download.html]上下载压缩包。</a></li>\n<li><p>解压后进行安装</p>","more":"<blockquote>\n<p>在./configure的时候会报错<br>./configure: error: the HTTP rewrite module requires the PCRE library.<br> 这时候我们需要在Linux上安装PCRE库<br> sudo apt-get update<br> sudo apt-get install libpcre3 libpcre3-dev<br> 再次编译，发现又报了缺少zlib library，我们再次照葫芦画瓢安装zlib<br> sudo apt-get install zlib1g-dev<br> 再次编译，发现Nginx安装成功！</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"Nginx的启动，关闭命令\"><a href=\"#Nginx的启动，关闭命令\" class=\"headerlink\" title=\"Nginx的启动，关闭命令\"></a>Nginx的启动，关闭命令</h3><ol>\n<li><p>Nginx 启动命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Nginx 关闭命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kill -QUIT PID</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将Nginx写成服务运行<br>如果每次都去执行<code>/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf</code>是非常麻烦的事。所以我们将Nginx的相关操作写成Bash脚本，就能像windows服务一样简单的几个命令就能完成任务。<br>首先我们在网上Copy一份<em><a href=\"http://github.com/amoyiki/Blog/raw/master/Document/nginx\">&gt;&gt;Ngnix脚本</a></em><br>然后在Linux执行命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$&gt; sudo wget http://github.com/amoyiki/Blog/raw/master/Document/nginx -O /etc/init.d/nginx</span><br><span class=\"line\">$&gt; sudo chmod +x /etc/init.d/nginx</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>现在我们就可以用简短的命令启动服务了</p>\n<blockquote>\n<p>Usage: /etc/init.d/nginx {start|stop|restart|force-reload|reload|status|configtest|quietupgrade|terminate|destroy}</p>\n</blockquote>"},{"title":"数据结构--Java（2）实现链表","date":"2016-11-07T08:34:03.000Z","_content":"\n### 单向链表 ###\n<!-- more -->\n```python\n/**\n * Created by Administrator on 2016-11-07.\n */\npublic class LinkedList {\n    private class Node{\n        private Node next;\n        private Object obj;\n        public Node(Object obj){\n            this.obj = obj;\n        }\n    }\n\n    public Node first;\n    public int pos = 0;\n    public LinkedList(){\n        this.first = null;\n    }\n    public void addFirst(Object obj){\n        Node node = new Node(obj);\n        node.next = this.first;\n        this.first = node;\n\n    }\n    public Object delFirst() throws Exception {\n        if(isEmpty()){\n            throw new Exception(\"This LinkedList is empty!\");\n        }\n        Node temp = this.first;\n        this.first = temp.next;\n        return temp.obj;\n    }\n    public void add(int index, Object obj) throws Exception {\n        if (isEmpty()){\n            throw new Exception(\"This LinkedList is empty!\");\n        }\n\n        Node node = new Node(obj);\n        Node cur = first;\n        Node pre = first;\n        while (index != pos){\n            pre = first;\n            cur = first.next;\n            pos++;\n        }\n        node.next = cur;\n        pre.next = node;\n        pos = 0;\n    }\n    public void remove(Object obj) throws Exception {\n        if (isEmpty()){\n            throw new Exception(\"This LinkedList is empty!\");\n        }\n        if (first.obj.equals(obj)){\n            this.first = this.first.next;\n        }else{\n            Node pre = this.first;\n            Node cur = this.first.next;\n            while (cur != null){\n                if (cur.obj.equals(obj)){\n                    pre.next = cur.next;\n                    break;\n                }\n                pre = cur;\n                cur = cur.next;\n            }\n            if (cur == null){\n                throw new Exception(\"Not Found\");\n            }\n        }\n\n    }\n\n    public Node find(Object obj) throws Exception {\n        if (isEmpty()){\n            throw new Exception(\"This LinkedList is empty!\");\n        }\n        Node cur = first;\n        while(cur != null){\n            if (cur.obj.equals(obj)){\n                return cur;\n            }\n            cur = cur.next;\n        }\n        return null;\n    }\n    public boolean isEmpty(){\n        return (first == null);\n    }\n    public void display(){\n        if(first == null)\n            System.out.println(\"empty\");\n        Node cur = first;\n        while(cur != null){\n            System.out.print(cur.obj.toString() + \" -> \");\n            cur = cur.next;\n        }\n        System.out.print(\"\\n\");\n    }\n\n    public static void main(String[] args) throws Exception {\n        LinkedList ll = new LinkedList();\n        ll.addFirst(4);\n        ll.addFirst(3);\n        ll.addFirst(2);\n        ll.addFirst(1);\n        ll.display();\n        ll.delFirst();\n        ll.display();\n        ll.remove(3);\n        ll.display();\n        System.out.println(ll.find(1));\n        System.out.println(ll.find(4).obj);\n        ll.add(1,5);\n        ll.display();\n    }\n}\n\n```\n\n**out**\n>1 -> 2 -> 3 -> 4 -> \n>2 -> 3 -> 4 -> \n>2 -> 4 -> \n>null\n>4\n>2 -> 5 -> 4 -> \n\n","source":"_posts/数据结构-Java（2）实现链表.md","raw":"---\ntitle: 数据结构--Java（2）实现链表\ndate: 2016-11-07 16:34:03\ncategories: \"Data Structure\"\ntags:\n- 学习\n---\n\n### 单向链表 ###\n<!-- more -->\n```python\n/**\n * Created by Administrator on 2016-11-07.\n */\npublic class LinkedList {\n    private class Node{\n        private Node next;\n        private Object obj;\n        public Node(Object obj){\n            this.obj = obj;\n        }\n    }\n\n    public Node first;\n    public int pos = 0;\n    public LinkedList(){\n        this.first = null;\n    }\n    public void addFirst(Object obj){\n        Node node = new Node(obj);\n        node.next = this.first;\n        this.first = node;\n\n    }\n    public Object delFirst() throws Exception {\n        if(isEmpty()){\n            throw new Exception(\"This LinkedList is empty!\");\n        }\n        Node temp = this.first;\n        this.first = temp.next;\n        return temp.obj;\n    }\n    public void add(int index, Object obj) throws Exception {\n        if (isEmpty()){\n            throw new Exception(\"This LinkedList is empty!\");\n        }\n\n        Node node = new Node(obj);\n        Node cur = first;\n        Node pre = first;\n        while (index != pos){\n            pre = first;\n            cur = first.next;\n            pos++;\n        }\n        node.next = cur;\n        pre.next = node;\n        pos = 0;\n    }\n    public void remove(Object obj) throws Exception {\n        if (isEmpty()){\n            throw new Exception(\"This LinkedList is empty!\");\n        }\n        if (first.obj.equals(obj)){\n            this.first = this.first.next;\n        }else{\n            Node pre = this.first;\n            Node cur = this.first.next;\n            while (cur != null){\n                if (cur.obj.equals(obj)){\n                    pre.next = cur.next;\n                    break;\n                }\n                pre = cur;\n                cur = cur.next;\n            }\n            if (cur == null){\n                throw new Exception(\"Not Found\");\n            }\n        }\n\n    }\n\n    public Node find(Object obj) throws Exception {\n        if (isEmpty()){\n            throw new Exception(\"This LinkedList is empty!\");\n        }\n        Node cur = first;\n        while(cur != null){\n            if (cur.obj.equals(obj)){\n                return cur;\n            }\n            cur = cur.next;\n        }\n        return null;\n    }\n    public boolean isEmpty(){\n        return (first == null);\n    }\n    public void display(){\n        if(first == null)\n            System.out.println(\"empty\");\n        Node cur = first;\n        while(cur != null){\n            System.out.print(cur.obj.toString() + \" -> \");\n            cur = cur.next;\n        }\n        System.out.print(\"\\n\");\n    }\n\n    public static void main(String[] args) throws Exception {\n        LinkedList ll = new LinkedList();\n        ll.addFirst(4);\n        ll.addFirst(3);\n        ll.addFirst(2);\n        ll.addFirst(1);\n        ll.display();\n        ll.delFirst();\n        ll.display();\n        ll.remove(3);\n        ll.display();\n        System.out.println(ll.find(1));\n        System.out.println(ll.find(4).obj);\n        ll.add(1,5);\n        ll.display();\n    }\n}\n\n```\n\n**out**\n>1 -> 2 -> 3 -> 4 -> \n>2 -> 3 -> 4 -> \n>2 -> 4 -> \n>null\n>4\n>2 -> 5 -> 4 -> \n\n","slug":"数据结构-Java（2）实现链表","published":1,"updated":"2016-11-07T08:37:05.523Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwyd91y0001umc73m3kau3ea","content":"<h3 id=\"单向链表\"><a href=\"#单向链表\" class=\"headerlink\" title=\"单向链表\"></a>单向链表</h3><a id=\"more\"></a>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * Created by Administrator on 2016-11-07.</span><br><span class=\"line\"> */</span><br><span class=\"line\">public class LinkedList &#123;</span><br><span class=\"line\">    private class Node&#123;</span><br><span class=\"line\">        private Node next;</span><br><span class=\"line\">        private Object obj;</span><br><span class=\"line\">        public Node(Object obj)&#123;</span><br><span class=\"line\">            this.obj = obj;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public Node first;</span><br><span class=\"line\">    public int pos = 0;</span><br><span class=\"line\">    public LinkedList()&#123;</span><br><span class=\"line\">        this.first = null;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public void addFirst(Object obj)&#123;</span><br><span class=\"line\">        Node node = new Node(obj);</span><br><span class=\"line\">        node.next = this.first;</span><br><span class=\"line\">        this.first = node;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public Object delFirst() throws Exception &#123;</span><br><span class=\"line\">        if(isEmpty())&#123;</span><br><span class=\"line\">            throw new Exception(\"This LinkedList is empty!\");</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Node temp = this.first;</span><br><span class=\"line\">        this.first = temp.next;</span><br><span class=\"line\">        return temp.obj;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public void add(int index, Object obj) throws Exception &#123;</span><br><span class=\"line\">        if (isEmpty())&#123;</span><br><span class=\"line\">            throw new Exception(\"This LinkedList is empty!\");</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Node node = new Node(obj);</span><br><span class=\"line\">        Node cur = first;</span><br><span class=\"line\">        Node pre = first;</span><br><span class=\"line\">        while (index != pos)&#123;</span><br><span class=\"line\">            pre = first;</span><br><span class=\"line\">            cur = first.next;</span><br><span class=\"line\">            pos++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        node.next = cur;</span><br><span class=\"line\">        pre.next = node;</span><br><span class=\"line\">        pos = 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public void remove(Object obj) throws Exception &#123;</span><br><span class=\"line\">        if (isEmpty())&#123;</span><br><span class=\"line\">            throw new Exception(\"This LinkedList is empty!\");</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if (first.obj.equals(obj))&#123;</span><br><span class=\"line\">            this.first = this.first.next;</span><br><span class=\"line\">        &#125;else&#123;</span><br><span class=\"line\">            Node pre = this.first;</span><br><span class=\"line\">            Node cur = this.first.next;</span><br><span class=\"line\">            while (cur != null)&#123;</span><br><span class=\"line\">                if (cur.obj.equals(obj))&#123;</span><br><span class=\"line\">                    pre.next = cur.next;</span><br><span class=\"line\">                    break;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                pre = cur;</span><br><span class=\"line\">                cur = cur.next;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            if (cur == null)&#123;</span><br><span class=\"line\">                throw new Exception(\"Not Found\");</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public Node find(Object obj) throws Exception &#123;</span><br><span class=\"line\">        if (isEmpty())&#123;</span><br><span class=\"line\">            throw new Exception(\"This LinkedList is empty!\");</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Node cur = first;</span><br><span class=\"line\">        while(cur != null)&#123;</span><br><span class=\"line\">            if (cur.obj.equals(obj))&#123;</span><br><span class=\"line\">                return cur;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            cur = cur.next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return null;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public boolean isEmpty()&#123;</span><br><span class=\"line\">        return (first == null);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public void display()&#123;</span><br><span class=\"line\">        if(first == null)</span><br><span class=\"line\">            System.out.println(\"empty\");</span><br><span class=\"line\">        Node cur = first;</span><br><span class=\"line\">        while(cur != null)&#123;</span><br><span class=\"line\">            System.out.print(cur.obj.toString() + \" -&gt; \");</span><br><span class=\"line\">            cur = cur.next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.print(\"\\n\");</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void main(String[] args) throws Exception &#123;</span><br><span class=\"line\">        LinkedList ll = new LinkedList();</span><br><span class=\"line\">        ll.addFirst(4);</span><br><span class=\"line\">        ll.addFirst(3);</span><br><span class=\"line\">        ll.addFirst(2);</span><br><span class=\"line\">        ll.addFirst(1);</span><br><span class=\"line\">        ll.display();</span><br><span class=\"line\">        ll.delFirst();</span><br><span class=\"line\">        ll.display();</span><br><span class=\"line\">        ll.remove(3);</span><br><span class=\"line\">        ll.display();</span><br><span class=\"line\">        System.out.println(ll.find(1));</span><br><span class=\"line\">        System.out.println(ll.find(4).obj);</span><br><span class=\"line\">        ll.add(1,5);</span><br><span class=\"line\">        ll.display();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>out</strong></p>\n<blockquote>\n<p>1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt;<br>2 -&gt; 3 -&gt; 4 -&gt;<br>2 -&gt; 4 -&gt;<br>null<br>4<br>2 -&gt; 5 -&gt; 4 -&gt; </p>\n</blockquote>\n","excerpt":"<h3 id=\"单向链表\"><a href=\"#单向链表\" class=\"headerlink\" title=\"单向链表\"></a>单向链表</h3>","more":"<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * Created by Administrator on 2016-11-07.</span><br><span class=\"line\"> */</span><br><span class=\"line\">public class LinkedList &#123;</span><br><span class=\"line\">    private class Node&#123;</span><br><span class=\"line\">        private Node next;</span><br><span class=\"line\">        private Object obj;</span><br><span class=\"line\">        public Node(Object obj)&#123;</span><br><span class=\"line\">            this.obj = obj;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public Node first;</span><br><span class=\"line\">    public int pos = 0;</span><br><span class=\"line\">    public LinkedList()&#123;</span><br><span class=\"line\">        this.first = null;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public void addFirst(Object obj)&#123;</span><br><span class=\"line\">        Node node = new Node(obj);</span><br><span class=\"line\">        node.next = this.first;</span><br><span class=\"line\">        this.first = node;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public Object delFirst() throws Exception &#123;</span><br><span class=\"line\">        if(isEmpty())&#123;</span><br><span class=\"line\">            throw new Exception(\"This LinkedList is empty!\");</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Node temp = this.first;</span><br><span class=\"line\">        this.first = temp.next;</span><br><span class=\"line\">        return temp.obj;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public void add(int index, Object obj) throws Exception &#123;</span><br><span class=\"line\">        if (isEmpty())&#123;</span><br><span class=\"line\">            throw new Exception(\"This LinkedList is empty!\");</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Node node = new Node(obj);</span><br><span class=\"line\">        Node cur = first;</span><br><span class=\"line\">        Node pre = first;</span><br><span class=\"line\">        while (index != pos)&#123;</span><br><span class=\"line\">            pre = first;</span><br><span class=\"line\">            cur = first.next;</span><br><span class=\"line\">            pos++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        node.next = cur;</span><br><span class=\"line\">        pre.next = node;</span><br><span class=\"line\">        pos = 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public void remove(Object obj) throws Exception &#123;</span><br><span class=\"line\">        if (isEmpty())&#123;</span><br><span class=\"line\">            throw new Exception(\"This LinkedList is empty!\");</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if (first.obj.equals(obj))&#123;</span><br><span class=\"line\">            this.first = this.first.next;</span><br><span class=\"line\">        &#125;else&#123;</span><br><span class=\"line\">            Node pre = this.first;</span><br><span class=\"line\">            Node cur = this.first.next;</span><br><span class=\"line\">            while (cur != null)&#123;</span><br><span class=\"line\">                if (cur.obj.equals(obj))&#123;</span><br><span class=\"line\">                    pre.next = cur.next;</span><br><span class=\"line\">                    break;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                pre = cur;</span><br><span class=\"line\">                cur = cur.next;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            if (cur == null)&#123;</span><br><span class=\"line\">                throw new Exception(\"Not Found\");</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public Node find(Object obj) throws Exception &#123;</span><br><span class=\"line\">        if (isEmpty())&#123;</span><br><span class=\"line\">            throw new Exception(\"This LinkedList is empty!\");</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Node cur = first;</span><br><span class=\"line\">        while(cur != null)&#123;</span><br><span class=\"line\">            if (cur.obj.equals(obj))&#123;</span><br><span class=\"line\">                return cur;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            cur = cur.next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return null;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public boolean isEmpty()&#123;</span><br><span class=\"line\">        return (first == null);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public void display()&#123;</span><br><span class=\"line\">        if(first == null)</span><br><span class=\"line\">            System.out.println(\"empty\");</span><br><span class=\"line\">        Node cur = first;</span><br><span class=\"line\">        while(cur != null)&#123;</span><br><span class=\"line\">            System.out.print(cur.obj.toString() + \" -&gt; \");</span><br><span class=\"line\">            cur = cur.next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.print(\"\\n\");</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void main(String[] args) throws Exception &#123;</span><br><span class=\"line\">        LinkedList ll = new LinkedList();</span><br><span class=\"line\">        ll.addFirst(4);</span><br><span class=\"line\">        ll.addFirst(3);</span><br><span class=\"line\">        ll.addFirst(2);</span><br><span class=\"line\">        ll.addFirst(1);</span><br><span class=\"line\">        ll.display();</span><br><span class=\"line\">        ll.delFirst();</span><br><span class=\"line\">        ll.display();</span><br><span class=\"line\">        ll.remove(3);</span><br><span class=\"line\">        ll.display();</span><br><span class=\"line\">        System.out.println(ll.find(1));</span><br><span class=\"line\">        System.out.println(ll.find(4).obj);</span><br><span class=\"line\">        ll.add(1,5);</span><br><span class=\"line\">        ll.display();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>out</strong></p>\n<blockquote>\n<p>1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt;<br>2 -&gt; 3 -&gt; 4 -&gt;<br>2 -&gt; 4 -&gt;<br>null<br>4<br>2 -&gt; 5 -&gt; 4 -&gt; </p>\n</blockquote>"},{"title":"git技巧--gitignore配置","date":"2016-12-15T05:54:08.000Z","_content":"## .gitignore 文件配置 ##\n<!-- more -->\n<!-- todo -->\n\n### .gitignore 配置无法解决问题时 ###\n如果`.gitignore`配置完后，仍无法屏蔽掉特殊文件的情况。我们可以手动修改项目路径下的`.git/info/exclude`文件。例如：\n> 在Pycharm下进行Python开发时会生成临时文件`__pycache__/`,只需将这个文件名写到exclude文件内即可。\n","source":"_posts/git技巧-gitignore配置.md","raw":"---\ntitle: git技巧--gitignore配置\ndate: 2016-12-15 13:54:08\ncategories: \"Git\"\ntags:\n- git\n---\n## .gitignore 文件配置 ##\n<!-- more -->\n<!-- todo -->\n\n### .gitignore 配置无法解决问题时 ###\n如果`.gitignore`配置完后，仍无法屏蔽掉特殊文件的情况。我们可以手动修改项目路径下的`.git/info/exclude`文件。例如：\n> 在Pycharm下进行Python开发时会生成临时文件`__pycache__/`,只需将这个文件名写到exclude文件内即可。\n","slug":"git技巧-gitignore配置","published":1,"updated":"2016-12-15T06:32:24.983Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwyd91y9001xmc7360ihunll","content":"<h2 id=\"gitignore-文件配置\"><a href=\"#gitignore-文件配置\" class=\"headerlink\" title=\".gitignore 文件配置\"></a>.gitignore 文件配置</h2><a id=\"more\"></a>\n<!-- todo -->\n<h3 id=\"gitignore-配置无法解决问题时\"><a href=\"#gitignore-配置无法解决问题时\" class=\"headerlink\" title=\".gitignore 配置无法解决问题时\"></a>.gitignore 配置无法解决问题时</h3><p>如果<code>.gitignore</code>配置完后，仍无法屏蔽掉特殊文件的情况。我们可以手动修改项目路径下的<code>.git/info/exclude</code>文件。例如：</p>\n<blockquote>\n<p>在Pycharm下进行Python开发时会生成临时文件<code>__pycache__/</code>,只需将这个文件名写到exclude文件内即可。</p>\n</blockquote>\n","excerpt":"<h2 id=\"gitignore-文件配置\"><a href=\"#gitignore-文件配置\" class=\"headerlink\" title=\".gitignore 文件配置\"></a>.gitignore 文件配置</h2>","more":"<!-- todo -->\n<h3 id=\"gitignore-配置无法解决问题时\"><a href=\"#gitignore-配置无法解决问题时\" class=\"headerlink\" title=\".gitignore 配置无法解决问题时\"></a>.gitignore 配置无法解决问题时</h3><p>如果<code>.gitignore</code>配置完后，仍无法屏蔽掉特殊文件的情况。我们可以手动修改项目路径下的<code>.git/info/exclude</code>文件。例如：</p>\n<blockquote>\n<p>在Pycharm下进行Python开发时会生成临时文件<code>__pycache__/</code>,只需将这个文件名写到exclude文件内即可。</p>\n</blockquote>"},{"title":"编写一个Chrome extension--网页二维码生成","date":"2016-12-13T14:11:33.000Z","_content":"> 很早之前就想过要用Chrome扩展开发一些实用的，或者有意思扩展。今天在看了`segmentfault`的技术周刊后，决定先按照别人写过的东西去~~抄一遍~~模仿的做一遍。\n\n本篇文章是看了[从小目标开始，编写一个简洁的二维码chrome扩展](https://segmentfault.com/a/1190000007594008)模仿的。这篇文章写得很详细。我主要写写自己模仿过程中的一些问题。\n<!-- more -->\n## Chrome extension基础 ##\n编写Chrome 扩展之前我们需要大致的了解一下Google提供的开发文档。鉴于我可怜的英文水平，我推荐花几分钟看一下下面的文档：\n1. [360翻译的官方API文档](http://open.chrome.360.cn/extension_dev/overview.html)\n2. [Chrome扩展及应用开发](http://www.ituring.com.cn/minibook/950) ←这本书不仅介绍API用法，还提供了好多实例。\n\n\n## 编写过程 ##\n有了上面几分钟的基础后，我们可以开始正式编写代码了。创建一个文件夹，将扩展所创建的文件都放在里面，方便完成后打包。\n### 首先编写`manifest.json` ###\n这是所有扩展的入口文件。看到后缀我们就知道这文件的语法结构必须符合json的写法。Chrome 扩展必须包含的属性有`name`、`version`、`manifest_version`。其他可选属性包括：`background`、`permissions`、`browser_action`、`page_action`、`options_page`、`content_scripts`等等。\n```javascript\n{\n    //目前Chrome版本为2\n    \"manifest_version\": 2,\n    //扩展名称\n    \"name\": \"QRcode\",\n    //扩展版本，可自定义\n    \"version\": \"1.0\",\n    //扩展描述，显示在扩展程序中\n    \"description\": \"简洁的二维码生成器\",\n    //显示在扩展程序中的图标\n    \"icons\": {\n        \"16\": \"images/icon16.png\",\n        \"128\": \"images/icon128.png\"\n    },\n    //权限声明\n    \"permissions\":[\"tabs\"]\n}\n```\n### 接下来就要编写扩展弹出页面`popup.html`文件 ###\npopup页面在被用户点击时初始化，关闭后就会销毁。所以该页面更多的是用来展示结果的。数据处理则需要`background`这个属性来声明，这里暂时没用到就不多说了。需要注意的是，应该用css指定popup页面大小。另外，Google不允许HTML和JavaScript混写在同一个文件内。所有我们把相应的JS提出来，在HTML中添加外部引用。\n```html\n<!DOCTYPE html>\n<html>\n<head>\n</head>\n<style type=\"text/css\">\n    .box {\n        height: 200px;\n        width: 200px;\n        background: #EEE;\n    }\n    .box .title{\n        text-align: center;\n        margin-bottom: 10px;\n    }\n</style>\n<body>\n<div class=\"box\">\n    <div class=\"title\">扫描二维码浏览本页面</div>\n    <center>\n    <div class=\"qrcode\" id=\"qrcode\"></div>\n    </center>\n</div>\n<script src=\"js/qrcode.js\" type=\"text/javascript\"></script>\n<script src=\"js/popup.js\" type=\"text/javascript\"></script>\n</body>\n</html>\n```\n\n### 编写相应的`popup.js`文件 ###\n`chrome.tabs`这个API可以与浏览器的标签页系统进行交互。具体API说明参考[标签--扩展开发文档](http://open.chrome.360.cn/extension_dev/tabs.html)\n通过获取到的标签页url传给[QRCode](http://code.ciaoca.com/javascript/qrcode/)。通过`QRCode.js`生成二维码。\n```javascript\nonload=function(){\n  chrome.tabs.getSelected(function(tab){\n      //QRCode(元素id,相关配置文件)\n      var qrcode = new QRCode(\"qrcode\", {\n              text: tab.url,\n              width: 160,\n              height: 160,\n              colorDark : '#000000',\n              colorLight : '#ffffff',\n              // QRCode的容错级别\n              correctLevel : QRCode.CorrectLevel.H\n            });\n    console.log(qrcode);\n  });\n}\n```\n到目前为止，一个简单的QRCode生成器边完成了。\n![加载自定义插件](http://oi6538cys.bkt.clouddn.com/chrome_extension_qrcode01.png)\n![QRCode](http://oi6538cys.bkt.clouddn.com/chrome_extension_qrcode02.png)\n\n## 后续 ##\n\n如果想让二维码中间位置显示自定义图片(如上图)，那么只需要在popup页面自定义一段CSS即可。\n### 修改`popup.html`文件 ###\n```html\n<!DOCTYPE html>\n<html>\n<head>\n</head>\n<style type=\"text/css\">\n    .box {\n        height: 200px;\n        width: 200px;\n        background: #EEE;\n        position: relative;\n    }\n    .box .title{\n        text-align: center;\n        margin-bottom: 10px;\n    }\n    .box .qrcode{\n        width: 100%;\n        height: 100%;\n        position: absolute;\n    }\n    .box .logo {\n          top: 80px;\n          left: 80px;\n          width: 40px;\n          height: 40px;\n          position: absolute;\n\n    }\n</style>\n<body>\n<div class=\"box\">\n    <div class=\"title\">扫描二维码浏览本页面</div>\n    <center>\n    <div class=\"qrcode\" id=\"qrcode\"></div>\n    <div class='logo'>\n    <img src=\"http://amoyiki.github.io/images/avatar.jpg\" width=\"40\" height=\"40\"/>\n    </div>\n    </center>\n</div>\n<script src=\"js/qrcode.js\" type=\"text/javascript\"></script>\n<script src=\"js/popup.js\" type=\"text/javascript\"></script>\n</body>\n</html>\n```\n\n### 动态获取网页icon ###\n如果想让icon图标随着每个网站不同的icon进行变动的话，就只要利用`tab`的`favIconUrl`属性就能得到标签页面的图标url地址,改动如下\n```javascript\nonload=function(){\n  chrome.tabs.getSelected(function(tab){\n      //QRCode(元素id,相关配置文件)\n      var qrcode = new QRCode(\"qrcode\", {\n              text: tab.url,\n              width: 160,\n              height: 160,\n              colorDark : '#000000',\n              colorLight : '#ffffff',\n              // QRCode的容错级别\n              correctLevel : QRCode.CorrectLevel.H\n            });\n    if (tab.favIconUrl) {//tab有图标的情况下动态赋值\n      var img = document.getElementsByTagName(\"img\")[1].src = tab.favIconUrl;\n    }\n    console.log(img);\n  });\n}\n```\n详细代码可以查看[github源码地址](https://github.com/amoyiki/LearnedAndProTest/tree/master/QRCode)\n","source":"_posts/编写一个Chrome-extension-网页二维码生成.md","raw":"---\ntitle: 编写一个Chrome extension--网页二维码生成\ndate: 2016-12-13 22:11:33\ncategories: \"Chrome extension\"\ntags:\n---\n> 很早之前就想过要用Chrome扩展开发一些实用的，或者有意思扩展。今天在看了`segmentfault`的技术周刊后，决定先按照别人写过的东西去~~抄一遍~~模仿的做一遍。\n\n本篇文章是看了[从小目标开始，编写一个简洁的二维码chrome扩展](https://segmentfault.com/a/1190000007594008)模仿的。这篇文章写得很详细。我主要写写自己模仿过程中的一些问题。\n<!-- more -->\n## Chrome extension基础 ##\n编写Chrome 扩展之前我们需要大致的了解一下Google提供的开发文档。鉴于我可怜的英文水平，我推荐花几分钟看一下下面的文档：\n1. [360翻译的官方API文档](http://open.chrome.360.cn/extension_dev/overview.html)\n2. [Chrome扩展及应用开发](http://www.ituring.com.cn/minibook/950) ←这本书不仅介绍API用法，还提供了好多实例。\n\n\n## 编写过程 ##\n有了上面几分钟的基础后，我们可以开始正式编写代码了。创建一个文件夹，将扩展所创建的文件都放在里面，方便完成后打包。\n### 首先编写`manifest.json` ###\n这是所有扩展的入口文件。看到后缀我们就知道这文件的语法结构必须符合json的写法。Chrome 扩展必须包含的属性有`name`、`version`、`manifest_version`。其他可选属性包括：`background`、`permissions`、`browser_action`、`page_action`、`options_page`、`content_scripts`等等。\n```javascript\n{\n    //目前Chrome版本为2\n    \"manifest_version\": 2,\n    //扩展名称\n    \"name\": \"QRcode\",\n    //扩展版本，可自定义\n    \"version\": \"1.0\",\n    //扩展描述，显示在扩展程序中\n    \"description\": \"简洁的二维码生成器\",\n    //显示在扩展程序中的图标\n    \"icons\": {\n        \"16\": \"images/icon16.png\",\n        \"128\": \"images/icon128.png\"\n    },\n    //权限声明\n    \"permissions\":[\"tabs\"]\n}\n```\n### 接下来就要编写扩展弹出页面`popup.html`文件 ###\npopup页面在被用户点击时初始化，关闭后就会销毁。所以该页面更多的是用来展示结果的。数据处理则需要`background`这个属性来声明，这里暂时没用到就不多说了。需要注意的是，应该用css指定popup页面大小。另外，Google不允许HTML和JavaScript混写在同一个文件内。所有我们把相应的JS提出来，在HTML中添加外部引用。\n```html\n<!DOCTYPE html>\n<html>\n<head>\n</head>\n<style type=\"text/css\">\n    .box {\n        height: 200px;\n        width: 200px;\n        background: #EEE;\n    }\n    .box .title{\n        text-align: center;\n        margin-bottom: 10px;\n    }\n</style>\n<body>\n<div class=\"box\">\n    <div class=\"title\">扫描二维码浏览本页面</div>\n    <center>\n    <div class=\"qrcode\" id=\"qrcode\"></div>\n    </center>\n</div>\n<script src=\"js/qrcode.js\" type=\"text/javascript\"></script>\n<script src=\"js/popup.js\" type=\"text/javascript\"></script>\n</body>\n</html>\n```\n\n### 编写相应的`popup.js`文件 ###\n`chrome.tabs`这个API可以与浏览器的标签页系统进行交互。具体API说明参考[标签--扩展开发文档](http://open.chrome.360.cn/extension_dev/tabs.html)\n通过获取到的标签页url传给[QRCode](http://code.ciaoca.com/javascript/qrcode/)。通过`QRCode.js`生成二维码。\n```javascript\nonload=function(){\n  chrome.tabs.getSelected(function(tab){\n      //QRCode(元素id,相关配置文件)\n      var qrcode = new QRCode(\"qrcode\", {\n              text: tab.url,\n              width: 160,\n              height: 160,\n              colorDark : '#000000',\n              colorLight : '#ffffff',\n              // QRCode的容错级别\n              correctLevel : QRCode.CorrectLevel.H\n            });\n    console.log(qrcode);\n  });\n}\n```\n到目前为止，一个简单的QRCode生成器边完成了。\n![加载自定义插件](http://oi6538cys.bkt.clouddn.com/chrome_extension_qrcode01.png)\n![QRCode](http://oi6538cys.bkt.clouddn.com/chrome_extension_qrcode02.png)\n\n## 后续 ##\n\n如果想让二维码中间位置显示自定义图片(如上图)，那么只需要在popup页面自定义一段CSS即可。\n### 修改`popup.html`文件 ###\n```html\n<!DOCTYPE html>\n<html>\n<head>\n</head>\n<style type=\"text/css\">\n    .box {\n        height: 200px;\n        width: 200px;\n        background: #EEE;\n        position: relative;\n    }\n    .box .title{\n        text-align: center;\n        margin-bottom: 10px;\n    }\n    .box .qrcode{\n        width: 100%;\n        height: 100%;\n        position: absolute;\n    }\n    .box .logo {\n          top: 80px;\n          left: 80px;\n          width: 40px;\n          height: 40px;\n          position: absolute;\n\n    }\n</style>\n<body>\n<div class=\"box\">\n    <div class=\"title\">扫描二维码浏览本页面</div>\n    <center>\n    <div class=\"qrcode\" id=\"qrcode\"></div>\n    <div class='logo'>\n    <img src=\"http://amoyiki.github.io/images/avatar.jpg\" width=\"40\" height=\"40\"/>\n    </div>\n    </center>\n</div>\n<script src=\"js/qrcode.js\" type=\"text/javascript\"></script>\n<script src=\"js/popup.js\" type=\"text/javascript\"></script>\n</body>\n</html>\n```\n\n### 动态获取网页icon ###\n如果想让icon图标随着每个网站不同的icon进行变动的话，就只要利用`tab`的`favIconUrl`属性就能得到标签页面的图标url地址,改动如下\n```javascript\nonload=function(){\n  chrome.tabs.getSelected(function(tab){\n      //QRCode(元素id,相关配置文件)\n      var qrcode = new QRCode(\"qrcode\", {\n              text: tab.url,\n              width: 160,\n              height: 160,\n              colorDark : '#000000',\n              colorLight : '#ffffff',\n              // QRCode的容错级别\n              correctLevel : QRCode.CorrectLevel.H\n            });\n    if (tab.favIconUrl) {//tab有图标的情况下动态赋值\n      var img = document.getElementsByTagName(\"img\")[1].src = tab.favIconUrl;\n    }\n    console.log(img);\n  });\n}\n```\n详细代码可以查看[github源码地址](https://github.com/amoyiki/LearnedAndProTest/tree/master/QRCode)\n","slug":"编写一个Chrome-extension-网页二维码生成","published":1,"updated":"2016-12-14T09:36:26.533Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwyd91yd0021mc73b59a0z64","content":"<blockquote>\n<p>很早之前就想过要用Chrome扩展开发一些实用的，或者有意思扩展。今天在看了<code>segmentfault</code>的技术周刊后，决定先按照别人写过的东西去<del>抄一遍</del>模仿的做一遍。</p>\n</blockquote>\n<p>本篇文章是看了<a href=\"https://segmentfault.com/a/1190000007594008\" target=\"_blank\" rel=\"external\">从小目标开始，编写一个简洁的二维码chrome扩展</a>模仿的。这篇文章写得很详细。我主要写写自己模仿过程中的一些问题。<br><a id=\"more\"></a></p>\n<h2 id=\"Chrome-extension基础\"><a href=\"#Chrome-extension基础\" class=\"headerlink\" title=\"Chrome extension基础\"></a>Chrome extension基础</h2><p>编写Chrome 扩展之前我们需要大致的了解一下Google提供的开发文档。鉴于我可怜的英文水平，我推荐花几分钟看一下下面的文档：</p>\n<ol>\n<li><a href=\"http://open.chrome.360.cn/extension_dev/overview.html\" target=\"_blank\" rel=\"external\">360翻译的官方API文档</a></li>\n<li><a href=\"http://www.ituring.com.cn/minibook/950\" target=\"_blank\" rel=\"external\">Chrome扩展及应用开发</a> ←这本书不仅介绍API用法，还提供了好多实例。</li>\n</ol>\n<h2 id=\"编写过程\"><a href=\"#编写过程\" class=\"headerlink\" title=\"编写过程\"></a>编写过程</h2><p>有了上面几分钟的基础后，我们可以开始正式编写代码了。创建一个文件夹，将扩展所创建的文件都放在里面，方便完成后打包。</p>\n<h3 id=\"首先编写manifest-json\"><a href=\"#首先编写manifest-json\" class=\"headerlink\" title=\"首先编写manifest.json\"></a>首先编写<code>manifest.json</code></h3><p>这是所有扩展的入口文件。看到后缀我们就知道这文件的语法结构必须符合json的写法。Chrome 扩展必须包含的属性有<code>name</code>、<code>version</code>、<code>manifest_version</code>。其他可选属性包括：<code>background</code>、<code>permissions</code>、<code>browser_action</code>、<code>page_action</code>、<code>options_page</code>、<code>content_scripts</code>等等。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//目前Chrome版本为2</span></span><br><span class=\"line\">    <span class=\"string\">\"manifest_version\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"comment\">//扩展名称</span></span><br><span class=\"line\">    <span class=\"string\">\"name\"</span>: <span class=\"string\">\"QRcode\"</span>,</span><br><span class=\"line\">    <span class=\"comment\">//扩展版本，可自定义</span></span><br><span class=\"line\">    <span class=\"string\">\"version\"</span>: <span class=\"string\">\"1.0\"</span>,</span><br><span class=\"line\">    <span class=\"comment\">//扩展描述，显示在扩展程序中</span></span><br><span class=\"line\">    <span class=\"string\">\"description\"</span>: <span class=\"string\">\"简洁的二维码生成器\"</span>,</span><br><span class=\"line\">    <span class=\"comment\">//显示在扩展程序中的图标</span></span><br><span class=\"line\">    <span class=\"string\">\"icons\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">\"16\"</span>: <span class=\"string\">\"images/icon16.png\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"128\"</span>: <span class=\"string\">\"images/icon128.png\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//权限声明</span></span><br><span class=\"line\">    <span class=\"string\">\"permissions\"</span>:[<span class=\"string\">\"tabs\"</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"接下来就要编写扩展弹出页面popup-html文件\"><a href=\"#接下来就要编写扩展弹出页面popup-html文件\" class=\"headerlink\" title=\"接下来就要编写扩展弹出页面popup.html文件\"></a>接下来就要编写扩展弹出页面<code>popup.html</code>文件</h3><p>popup页面在被用户点击时初始化，关闭后就会销毁。所以该页面更多的是用来展示结果的。数据处理则需要<code>background</code>这个属性来声明，这里暂时没用到就不多说了。需要注意的是，应该用css指定popup页面大小。另外，Google不允许HTML和JavaScript混写在同一个文件内。所有我们把相应的JS提出来，在HTML中添加外部引用。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"undefined\"></span><br><span class=\"line\">    .box &#123;</span><br><span class=\"line\">        height: 200px;</span><br><span class=\"line\">        width: 200px;</span><br><span class=\"line\">        background: #EEE;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .box .title&#123;</span><br><span class=\"line\">        text-align: center;</span><br><span class=\"line\">        margin-bottom: 10px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"title\"</span>&gt;</span>扫描二维码浏览本页面<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">center</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"qrcode\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"qrcode\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">center</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/qrcode.js\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/popup.js\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"编写相应的popup-js文件\"><a href=\"#编写相应的popup-js文件\" class=\"headerlink\" title=\"编写相应的popup.js文件\"></a>编写相应的<code>popup.js</code>文件</h3><p><code>chrome.tabs</code>这个API可以与浏览器的标签页系统进行交互。具体API说明参考<a href=\"http://open.chrome.360.cn/extension_dev/tabs.html\" target=\"_blank\" rel=\"external\">标签–扩展开发文档</a><br>通过获取到的标签页url传给<a href=\"http://code.ciaoca.com/javascript/qrcode/\" target=\"_blank\" rel=\"external\">QRCode</a>。通过<code>QRCode.js</code>生成二维码。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onload=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  chrome.tabs.getSelected(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">tab</span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"comment\">//QRCode(元素id,相关配置文件)</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> qrcode = <span class=\"keyword\">new</span> QRCode(<span class=\"string\">\"qrcode\"</span>, &#123;</span><br><span class=\"line\">              text: tab.url,</span><br><span class=\"line\">              width: <span class=\"number\">160</span>,</span><br><span class=\"line\">              height: <span class=\"number\">160</span>,</span><br><span class=\"line\">              colorDark : <span class=\"string\">'#000000'</span>,</span><br><span class=\"line\">              colorLight : <span class=\"string\">'#ffffff'</span>,</span><br><span class=\"line\">              <span class=\"comment\">// QRCode的容错级别</span></span><br><span class=\"line\">              correctLevel : QRCode.CorrectLevel.H</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(qrcode);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>到目前为止，一个简单的QRCode生成器边完成了。<br><img src=\"http://oi6538cys.bkt.clouddn.com/chrome_extension_qrcode01.png\" alt=\"加载自定义插件\"><br><img src=\"http://oi6538cys.bkt.clouddn.com/chrome_extension_qrcode02.png\" alt=\"QRCode\"></p>\n<h2 id=\"后续\"><a href=\"#后续\" class=\"headerlink\" title=\"后续\"></a>后续</h2><p>如果想让二维码中间位置显示自定义图片(如上图)，那么只需要在popup页面自定义一段CSS即可。</p>\n<h3 id=\"修改popup-html文件\"><a href=\"#修改popup-html文件\" class=\"headerlink\" title=\"修改popup.html文件\"></a>修改<code>popup.html</code>文件</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"undefined\"></span><br><span class=\"line\">    .box &#123;</span><br><span class=\"line\">        height: 200px;</span><br><span class=\"line\">        width: 200px;</span><br><span class=\"line\">        background: #EEE;</span><br><span class=\"line\">        position: relative;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .box .title&#123;</span><br><span class=\"line\">        text-align: center;</span><br><span class=\"line\">        margin-bottom: 10px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .box .qrcode&#123;</span><br><span class=\"line\">        width: 100%;</span><br><span class=\"line\">        height: 100%;</span><br><span class=\"line\">        position: absolute;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .box .logo &#123;</span><br><span class=\"line\">          top: 80px;</span><br><span class=\"line\">          left: 80px;</span><br><span class=\"line\">          width: 40px;</span><br><span class=\"line\">          height: 40px;</span><br><span class=\"line\">          position: absolute;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"title\"</span>&gt;</span>扫描二维码浏览本页面<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">center</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"qrcode\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"qrcode\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">'logo'</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://amoyiki.github.io/images/avatar.jpg\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"40\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"40\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">center</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/qrcode.js\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/popup.js\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"动态获取网页icon\"><a href=\"#动态获取网页icon\" class=\"headerlink\" title=\"动态获取网页icon\"></a>动态获取网页icon</h3><p>如果想让icon图标随着每个网站不同的icon进行变动的话，就只要利用<code>tab</code>的<code>favIconUrl</code>属性就能得到标签页面的图标url地址,改动如下<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onload=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  chrome.tabs.getSelected(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">tab</span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"comment\">//QRCode(元素id,相关配置文件)</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> qrcode = <span class=\"keyword\">new</span> QRCode(<span class=\"string\">\"qrcode\"</span>, &#123;</span><br><span class=\"line\">              text: tab.url,</span><br><span class=\"line\">              width: <span class=\"number\">160</span>,</span><br><span class=\"line\">              height: <span class=\"number\">160</span>,</span><br><span class=\"line\">              colorDark : <span class=\"string\">'#000000'</span>,</span><br><span class=\"line\">              colorLight : <span class=\"string\">'#ffffff'</span>,</span><br><span class=\"line\">              <span class=\"comment\">// QRCode的容错级别</span></span><br><span class=\"line\">              correctLevel : QRCode.CorrectLevel.H</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (tab.favIconUrl) &#123;<span class=\"comment\">//tab有图标的情况下动态赋值</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> img = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">\"img\"</span>)[<span class=\"number\">1</span>].src = tab.favIconUrl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(img);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>详细代码可以查看<a href=\"https://github.com/amoyiki/LearnedAndProTest/tree/master/QRCode\" target=\"_blank\" rel=\"external\">github源码地址</a></p>\n","excerpt":"<blockquote>\n<p>很早之前就想过要用Chrome扩展开发一些实用的，或者有意思扩展。今天在看了<code>segmentfault</code>的技术周刊后，决定先按照别人写过的东西去<del>抄一遍</del>模仿的做一遍。</p>\n</blockquote>\n<p>本篇文章是看了<a href=\"https://segmentfault.com/a/1190000007594008\">从小目标开始，编写一个简洁的二维码chrome扩展</a>模仿的。这篇文章写得很详细。我主要写写自己模仿过程中的一些问题。<br>","more":"</p>\n<h2 id=\"Chrome-extension基础\"><a href=\"#Chrome-extension基础\" class=\"headerlink\" title=\"Chrome extension基础\"></a>Chrome extension基础</h2><p>编写Chrome 扩展之前我们需要大致的了解一下Google提供的开发文档。鉴于我可怜的英文水平，我推荐花几分钟看一下下面的文档：</p>\n<ol>\n<li><a href=\"http://open.chrome.360.cn/extension_dev/overview.html\">360翻译的官方API文档</a></li>\n<li><a href=\"http://www.ituring.com.cn/minibook/950\">Chrome扩展及应用开发</a> ←这本书不仅介绍API用法，还提供了好多实例。</li>\n</ol>\n<h2 id=\"编写过程\"><a href=\"#编写过程\" class=\"headerlink\" title=\"编写过程\"></a>编写过程</h2><p>有了上面几分钟的基础后，我们可以开始正式编写代码了。创建一个文件夹，将扩展所创建的文件都放在里面，方便完成后打包。</p>\n<h3 id=\"首先编写manifest-json\"><a href=\"#首先编写manifest-json\" class=\"headerlink\" title=\"首先编写manifest.json\"></a>首先编写<code>manifest.json</code></h3><p>这是所有扩展的入口文件。看到后缀我们就知道这文件的语法结构必须符合json的写法。Chrome 扩展必须包含的属性有<code>name</code>、<code>version</code>、<code>manifest_version</code>。其他可选属性包括：<code>background</code>、<code>permissions</code>、<code>browser_action</code>、<code>page_action</code>、<code>options_page</code>、<code>content_scripts</code>等等。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//目前Chrome版本为2</span></span><br><span class=\"line\">    <span class=\"string\">\"manifest_version\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"comment\">//扩展名称</span></span><br><span class=\"line\">    <span class=\"string\">\"name\"</span>: <span class=\"string\">\"QRcode\"</span>,</span><br><span class=\"line\">    <span class=\"comment\">//扩展版本，可自定义</span></span><br><span class=\"line\">    <span class=\"string\">\"version\"</span>: <span class=\"string\">\"1.0\"</span>,</span><br><span class=\"line\">    <span class=\"comment\">//扩展描述，显示在扩展程序中</span></span><br><span class=\"line\">    <span class=\"string\">\"description\"</span>: <span class=\"string\">\"简洁的二维码生成器\"</span>,</span><br><span class=\"line\">    <span class=\"comment\">//显示在扩展程序中的图标</span></span><br><span class=\"line\">    <span class=\"string\">\"icons\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">\"16\"</span>: <span class=\"string\">\"images/icon16.png\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"128\"</span>: <span class=\"string\">\"images/icon128.png\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//权限声明</span></span><br><span class=\"line\">    <span class=\"string\">\"permissions\"</span>:[<span class=\"string\">\"tabs\"</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"接下来就要编写扩展弹出页面popup-html文件\"><a href=\"#接下来就要编写扩展弹出页面popup-html文件\" class=\"headerlink\" title=\"接下来就要编写扩展弹出页面popup.html文件\"></a>接下来就要编写扩展弹出页面<code>popup.html</code>文件</h3><p>popup页面在被用户点击时初始化，关闭后就会销毁。所以该页面更多的是用来展示结果的。数据处理则需要<code>background</code>这个属性来声明，这里暂时没用到就不多说了。需要注意的是，应该用css指定popup页面大小。另外，Google不允许HTML和JavaScript混写在同一个文件内。所有我们把相应的JS提出来，在HTML中添加外部引用。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"undefined\"></span><br><span class=\"line\">    .box &#123;</span><br><span class=\"line\">        height: 200px;</span><br><span class=\"line\">        width: 200px;</span><br><span class=\"line\">        background: #EEE;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .box .title&#123;</span><br><span class=\"line\">        text-align: center;</span><br><span class=\"line\">        margin-bottom: 10px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"title\"</span>&gt;</span>扫描二维码浏览本页面<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">center</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"qrcode\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"qrcode\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">center</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/qrcode.js\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/popup.js\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"编写相应的popup-js文件\"><a href=\"#编写相应的popup-js文件\" class=\"headerlink\" title=\"编写相应的popup.js文件\"></a>编写相应的<code>popup.js</code>文件</h3><p><code>chrome.tabs</code>这个API可以与浏览器的标签页系统进行交互。具体API说明参考<a href=\"http://open.chrome.360.cn/extension_dev/tabs.html\">标签–扩展开发文档</a><br>通过获取到的标签页url传给<a href=\"http://code.ciaoca.com/javascript/qrcode/\">QRCode</a>。通过<code>QRCode.js</code>生成二维码。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onload=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  chrome.tabs.getSelected(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">tab</span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"comment\">//QRCode(元素id,相关配置文件)</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> qrcode = <span class=\"keyword\">new</span> QRCode(<span class=\"string\">\"qrcode\"</span>, &#123;</span><br><span class=\"line\">              text: tab.url,</span><br><span class=\"line\">              width: <span class=\"number\">160</span>,</span><br><span class=\"line\">              height: <span class=\"number\">160</span>,</span><br><span class=\"line\">              colorDark : <span class=\"string\">'#000000'</span>,</span><br><span class=\"line\">              colorLight : <span class=\"string\">'#ffffff'</span>,</span><br><span class=\"line\">              <span class=\"comment\">// QRCode的容错级别</span></span><br><span class=\"line\">              correctLevel : QRCode.CorrectLevel.H</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(qrcode);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>到目前为止，一个简单的QRCode生成器边完成了。<br><img src=\"http://oi6538cys.bkt.clouddn.com/chrome_extension_qrcode01.png\" alt=\"加载自定义插件\"><br><img src=\"http://oi6538cys.bkt.clouddn.com/chrome_extension_qrcode02.png\" alt=\"QRCode\"></p>\n<h2 id=\"后续\"><a href=\"#后续\" class=\"headerlink\" title=\"后续\"></a>后续</h2><p>如果想让二维码中间位置显示自定义图片(如上图)，那么只需要在popup页面自定义一段CSS即可。</p>\n<h3 id=\"修改popup-html文件\"><a href=\"#修改popup-html文件\" class=\"headerlink\" title=\"修改popup.html文件\"></a>修改<code>popup.html</code>文件</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"undefined\"></span><br><span class=\"line\">    .box &#123;</span><br><span class=\"line\">        height: 200px;</span><br><span class=\"line\">        width: 200px;</span><br><span class=\"line\">        background: #EEE;</span><br><span class=\"line\">        position: relative;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .box .title&#123;</span><br><span class=\"line\">        text-align: center;</span><br><span class=\"line\">        margin-bottom: 10px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .box .qrcode&#123;</span><br><span class=\"line\">        width: 100%;</span><br><span class=\"line\">        height: 100%;</span><br><span class=\"line\">        position: absolute;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .box .logo &#123;</span><br><span class=\"line\">          top: 80px;</span><br><span class=\"line\">          left: 80px;</span><br><span class=\"line\">          width: 40px;</span><br><span class=\"line\">          height: 40px;</span><br><span class=\"line\">          position: absolute;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"title\"</span>&gt;</span>扫描二维码浏览本页面<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">center</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"qrcode\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"qrcode\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">'logo'</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://amoyiki.github.io/images/avatar.jpg\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"40\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"40\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">center</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/qrcode.js\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/popup.js\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"动态获取网页icon\"><a href=\"#动态获取网页icon\" class=\"headerlink\" title=\"动态获取网页icon\"></a>动态获取网页icon</h3><p>如果想让icon图标随着每个网站不同的icon进行变动的话，就只要利用<code>tab</code>的<code>favIconUrl</code>属性就能得到标签页面的图标url地址,改动如下<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onload=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  chrome.tabs.getSelected(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">tab</span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"comment\">//QRCode(元素id,相关配置文件)</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> qrcode = <span class=\"keyword\">new</span> QRCode(<span class=\"string\">\"qrcode\"</span>, &#123;</span><br><span class=\"line\">              text: tab.url,</span><br><span class=\"line\">              width: <span class=\"number\">160</span>,</span><br><span class=\"line\">              height: <span class=\"number\">160</span>,</span><br><span class=\"line\">              colorDark : <span class=\"string\">'#000000'</span>,</span><br><span class=\"line\">              colorLight : <span class=\"string\">'#ffffff'</span>,</span><br><span class=\"line\">              <span class=\"comment\">// QRCode的容错级别</span></span><br><span class=\"line\">              correctLevel : QRCode.CorrectLevel.H</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (tab.favIconUrl) &#123;<span class=\"comment\">//tab有图标的情况下动态赋值</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> img = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">\"img\"</span>)[<span class=\"number\">1</span>].src = tab.favIconUrl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(img);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>详细代码可以查看<a href=\"https://github.com/amoyiki/LearnedAndProTest/tree/master/QRCode\">github源码地址</a></p>"},{"title":"零碎的小技巧","date":"2016-08-05T01:47:18.000Z","_content":"### 如何科学上网 ###\n作为一名折腾的人，一名苦逼搬砖程序员，最不能缺少的就是和世界接轨。如果不去了解国外的技术发展，就没有办法提升自身的技术水平。所以，科学上网是一个程序员应该有的基础能力。\n这里简单的介绍一下目前我使用的科学上网工具。\n<!-- more -->\n>1. vpn代理\n这个是最常见，最简单的方法。VPN软件也是多的数不胜数。目前我有在使用的是有两款，都是免费的（说到底还是因为穷）。一款是Lantern，另外一款是赛风。\n2. 更改Host\n这个方法只能浏览一些特定的网站，而且网速也是时好时坏。但是，对于只简单的想使用Google相关网站，还是很好用的。因为Host的IP经常会ban掉，所以需要经常更新一下。更新[Host地址](https://laod.cn/hosts/2016-google-hosts.html)\n\n### Chrome Google 首页及默认搜索设置 ###\n在成功的科学上网后，如果用的是Chrome的话，还可以设置下图操作，利用Https防止链接被和谐。\n![image](http://oi6538cys.bkt.clouddn.com/16_08_05_01.gif)\n","source":"_posts/零碎的小技巧.md","raw":"---\ntitle: 零碎的小技巧\ndate: 2016-08-05 09:47:18\ncategories: \"工具配置\"\n---\n### 如何科学上网 ###\n作为一名折腾的人，一名苦逼搬砖程序员，最不能缺少的就是和世界接轨。如果不去了解国外的技术发展，就没有办法提升自身的技术水平。所以，科学上网是一个程序员应该有的基础能力。\n这里简单的介绍一下目前我使用的科学上网工具。\n<!-- more -->\n>1. vpn代理\n这个是最常见，最简单的方法。VPN软件也是多的数不胜数。目前我有在使用的是有两款，都是免费的（说到底还是因为穷）。一款是Lantern，另外一款是赛风。\n2. 更改Host\n这个方法只能浏览一些特定的网站，而且网速也是时好时坏。但是，对于只简单的想使用Google相关网站，还是很好用的。因为Host的IP经常会ban掉，所以需要经常更新一下。更新[Host地址](https://laod.cn/hosts/2016-google-hosts.html)\n\n### Chrome Google 首页及默认搜索设置 ###\n在成功的科学上网后，如果用的是Chrome的话，还可以设置下图操作，利用Https防止链接被和谐。\n![image](http://oi6538cys.bkt.clouddn.com/16_08_05_01.gif)\n","slug":"零碎的小技巧","published":1,"updated":"2016-12-14T09:35:56.851Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwyd91yi0024mc73287i4xju","content":"<h3 id=\"如何科学上网\"><a href=\"#如何科学上网\" class=\"headerlink\" title=\"如何科学上网\"></a>如何科学上网</h3><p>作为一名折腾的人，一名苦逼搬砖程序员，最不能缺少的就是和世界接轨。如果不去了解国外的技术发展，就没有办法提升自身的技术水平。所以，科学上网是一个程序员应该有的基础能力。<br>这里简单的介绍一下目前我使用的科学上网工具。<br><a id=\"more\"></a></p>\n<blockquote>\n<ol>\n<li>vpn代理<br>这个是最常见，最简单的方法。VPN软件也是多的数不胜数。目前我有在使用的是有两款，都是免费的（说到底还是因为穷）。一款是Lantern，另外一款是赛风。</li>\n<li>更改Host<br>这个方法只能浏览一些特定的网站，而且网速也是时好时坏。但是，对于只简单的想使用Google相关网站，还是很好用的。因为Host的IP经常会ban掉，所以需要经常更新一下。更新<a href=\"https://laod.cn/hosts/2016-google-hosts.html\" target=\"_blank\" rel=\"external\">Host地址</a></li>\n</ol>\n</blockquote>\n<h3 id=\"Chrome-Google-首页及默认搜索设置\"><a href=\"#Chrome-Google-首页及默认搜索设置\" class=\"headerlink\" title=\"Chrome Google 首页及默认搜索设置\"></a>Chrome Google 首页及默认搜索设置</h3><p>在成功的科学上网后，如果用的是Chrome的话，还可以设置下图操作，利用Https防止链接被和谐。<br><img src=\"http://oi6538cys.bkt.clouddn.com/16_08_05_01.gif\" alt=\"image\"></p>\n","excerpt":"<h3 id=\"如何科学上网\"><a href=\"#如何科学上网\" class=\"headerlink\" title=\"如何科学上网\"></a>如何科学上网</h3><p>作为一名折腾的人，一名苦逼搬砖程序员，最不能缺少的就是和世界接轨。如果不去了解国外的技术发展，就没有办法提升自身的技术水平。所以，科学上网是一个程序员应该有的基础能力。<br>这里简单的介绍一下目前我使用的科学上网工具。<br>","more":"</p>\n<blockquote>\n<ol>\n<li>vpn代理<br>这个是最常见，最简单的方法。VPN软件也是多的数不胜数。目前我有在使用的是有两款，都是免费的（说到底还是因为穷）。一款是Lantern，另外一款是赛风。</li>\n<li>更改Host<br>这个方法只能浏览一些特定的网站，而且网速也是时好时坏。但是，对于只简单的想使用Google相关网站，还是很好用的。因为Host的IP经常会ban掉，所以需要经常更新一下。更新<a href=\"https://laod.cn/hosts/2016-google-hosts.html\">Host地址</a></li>\n</ol>\n</blockquote>\n<h3 id=\"Chrome-Google-首页及默认搜索设置\"><a href=\"#Chrome-Google-首页及默认搜索设置\" class=\"headerlink\" title=\"Chrome Google 首页及默认搜索设置\"></a>Chrome Google 首页及默认搜索设置</h3><p>在成功的科学上网后，如果用的是Chrome的话，还可以设置下图操作，利用Https防止链接被和谐。<br><img src=\"http://oi6538cys.bkt.clouddn.com/16_08_05_01.gif\" alt=\"image\"></p>"},{"title":"新的开始","date":"2016-05-01T02:59:47.000Z","visible":"hide","_content":"\n## 新的开始，建立在曾经的废墟之上 ##\n\n说来也是怪我自己脑子太二，在之前笔记本电脑内的Blog源文件没有备份就将电脑重装系统，结果就是之前的所有文章都消失得一干二净，虽然不是什么重要的文章，但毕竟是自己花心思写下的经验，丢了还是觉得蛮可惜的。所以这一次，我老老实实在GitHub上新开一个repository放我的hexo文件。以后每写一篇文章，就都要把源文件上传一次，妈妈再也不用担心换电脑没法继续写Blog了，顺带还能熟悉一些git命令，岂不美哉。\n<!-- more -->\n### 既然开了一篇杂谈，那我就再说说找工作的事吧 ###\n\n虽然没人看，但是我还是记录一下大四找工作的一些经历和体会，以后回顾的时候也能在心里啐一句\n：`当初怎么跟个傻子似的`。\n\n想开始找工作是在大四上的时候，虽然那个时候周围的同学都还在重复过着悠闲自在的大学生活，但是我比较杞人忧天，或许是在知乎逛多了，感觉其他大学生都屌的不行，而我以前也从未有过去实习的经历，如果还不趁着秋招公司多，到毕业时想找恐怕就难了。\n开始写简历的时候才发现，自己这四年来好像没什么好写的，一来学习成绩不怎么样，再来自己也没有参与过什么软件项目的开发，简直就只能白纸一张。想了好几个晚上，把自己大三开始所有写过的代码捋了一遍，挑了三个称的上开发的项目，然后一顿瞎掰开发过程。总算勉勉强强凑成了一页。\n接下来就是不断的参加校招，不断的递简历，不断的参加笔试面试。\n参加了几个比较有名的公司的校招，有的递完简历就了无音讯，有的参加完笔试就知道没机会了。不过在不断失败中，我还是攒到了一些经验，会针对面试公司可能出的问题进行复习。\n功夫不负有心人，虽然大公司一家都没有消息，不过海投中的一些小公司还是有给我回信。陆陆续续的面试了好几个公司，从一开始自我介绍就会声音就会发抖，到后面稍微从容的跟面试官聊一聊人生。这样的进步我觉得比我拿到offer更值得高兴。\n然后，我也收到了五个左右的offer，包括初创，电商，软件等公司，虽然大家都说在初创公司会得到很好的锻炼，但是我对自身技术水平还是不自信，怕到了初创公司会处于拖后腿的地位，考虑了很久，选择了一件面向企业的软件公司。\n工作了差不多4月，现在我也慢慢进入了社会人的角色。现在这个公司工作量不算太大，给的工资也说的过去。不过，工作内容不是自己期待中呢那样。所以，我开始思考一年以后，我该何去何从。\n\n### 对未来的展望 ###\n\n说完当下现状，就该想想以后的发展目标了。现在这个公司实在太过安逸了，每天要么处理客户问题，要么做一些重复的软件二次开发，要么就发发呆。这样让我开始担忧我的技术水平能不能在这一年有所提高，还是会比在学校更糟糕，每天下班回来基本不会再看技术书，不会在家里写一行代码。而且岗位本身就不是一个单纯的开发岗位，更像一个售后技术人员和软件定制开发人员的结合。公司同个技术小组同事虽然都很好，但是没有技术的交流，没有共同开发，大家各干各的活，这点让我很是失望。\n所以，我开始考虑明年跳槽，下一份工作，我决定去上海发展，在我们这个二流城市，互联网公司还是太少。机会感觉也不多。所以想去上海看看会不会有更多的机会。\n同时，我开始了前期的准备工作。现在做的python开发，之前在学校学的java基本上也忘了差不多，而python我也没有很深的了解，这个状态肯定无法跳槽。所以，我开始重新捡起书籍，为明年而奋斗！！\n\n","source":"_posts/新的开始.md","raw":"---\ntitle: 新的开始\ndate: 2016-05-01 10:59:47\ncategories: [半畳]\ntags: [杂谈]\nvisible: hide\n---\n\n## 新的开始，建立在曾经的废墟之上 ##\n\n说来也是怪我自己脑子太二，在之前笔记本电脑内的Blog源文件没有备份就将电脑重装系统，结果就是之前的所有文章都消失得一干二净，虽然不是什么重要的文章，但毕竟是自己花心思写下的经验，丢了还是觉得蛮可惜的。所以这一次，我老老实实在GitHub上新开一个repository放我的hexo文件。以后每写一篇文章，就都要把源文件上传一次，妈妈再也不用担心换电脑没法继续写Blog了，顺带还能熟悉一些git命令，岂不美哉。\n<!-- more -->\n### 既然开了一篇杂谈，那我就再说说找工作的事吧 ###\n\n虽然没人看，但是我还是记录一下大四找工作的一些经历和体会，以后回顾的时候也能在心里啐一句\n：`当初怎么跟个傻子似的`。\n\n想开始找工作是在大四上的时候，虽然那个时候周围的同学都还在重复过着悠闲自在的大学生活，但是我比较杞人忧天，或许是在知乎逛多了，感觉其他大学生都屌的不行，而我以前也从未有过去实习的经历，如果还不趁着秋招公司多，到毕业时想找恐怕就难了。\n开始写简历的时候才发现，自己这四年来好像没什么好写的，一来学习成绩不怎么样，再来自己也没有参与过什么软件项目的开发，简直就只能白纸一张。想了好几个晚上，把自己大三开始所有写过的代码捋了一遍，挑了三个称的上开发的项目，然后一顿瞎掰开发过程。总算勉勉强强凑成了一页。\n接下来就是不断的参加校招，不断的递简历，不断的参加笔试面试。\n参加了几个比较有名的公司的校招，有的递完简历就了无音讯，有的参加完笔试就知道没机会了。不过在不断失败中，我还是攒到了一些经验，会针对面试公司可能出的问题进行复习。\n功夫不负有心人，虽然大公司一家都没有消息，不过海投中的一些小公司还是有给我回信。陆陆续续的面试了好几个公司，从一开始自我介绍就会声音就会发抖，到后面稍微从容的跟面试官聊一聊人生。这样的进步我觉得比我拿到offer更值得高兴。\n然后，我也收到了五个左右的offer，包括初创，电商，软件等公司，虽然大家都说在初创公司会得到很好的锻炼，但是我对自身技术水平还是不自信，怕到了初创公司会处于拖后腿的地位，考虑了很久，选择了一件面向企业的软件公司。\n工作了差不多4月，现在我也慢慢进入了社会人的角色。现在这个公司工作量不算太大，给的工资也说的过去。不过，工作内容不是自己期待中呢那样。所以，我开始思考一年以后，我该何去何从。\n\n### 对未来的展望 ###\n\n说完当下现状，就该想想以后的发展目标了。现在这个公司实在太过安逸了，每天要么处理客户问题，要么做一些重复的软件二次开发，要么就发发呆。这样让我开始担忧我的技术水平能不能在这一年有所提高，还是会比在学校更糟糕，每天下班回来基本不会再看技术书，不会在家里写一行代码。而且岗位本身就不是一个单纯的开发岗位，更像一个售后技术人员和软件定制开发人员的结合。公司同个技术小组同事虽然都很好，但是没有技术的交流，没有共同开发，大家各干各的活，这点让我很是失望。\n所以，我开始考虑明年跳槽，下一份工作，我决定去上海发展，在我们这个二流城市，互联网公司还是太少。机会感觉也不多。所以想去上海看看会不会有更多的机会。\n同时，我开始了前期的准备工作。现在做的python开发，之前在学校学的java基本上也忘了差不多，而python我也没有很深的了解，这个状态肯定无法跳槽。所以，我开始重新捡起书籍，为明年而奋斗！！\n\n","slug":"新的开始","published":1,"updated":"2016-10-17T09:46:22.788Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwyd91ym0028mc73e8qkcpb0","content":"<h2 id=\"新的开始，建立在曾经的废墟之上\"><a href=\"#新的开始，建立在曾经的废墟之上\" class=\"headerlink\" title=\"新的开始，建立在曾经的废墟之上\"></a>新的开始，建立在曾经的废墟之上</h2><p>说来也是怪我自己脑子太二，在之前笔记本电脑内的Blog源文件没有备份就将电脑重装系统，结果就是之前的所有文章都消失得一干二净，虽然不是什么重要的文章，但毕竟是自己花心思写下的经验，丢了还是觉得蛮可惜的。所以这一次，我老老实实在GitHub上新开一个repository放我的hexo文件。以后每写一篇文章，就都要把源文件上传一次，妈妈再也不用担心换电脑没法继续写Blog了，顺带还能熟悉一些git命令，岂不美哉。<br><a id=\"more\"></a></p>\n<h3 id=\"既然开了一篇杂谈，那我就再说说找工作的事吧\"><a href=\"#既然开了一篇杂谈，那我就再说说找工作的事吧\" class=\"headerlink\" title=\"既然开了一篇杂谈，那我就再说说找工作的事吧\"></a>既然开了一篇杂谈，那我就再说说找工作的事吧</h3><p>虽然没人看，但是我还是记录一下大四找工作的一些经历和体会，以后回顾的时候也能在心里啐一句<br>：<code>当初怎么跟个傻子似的</code>。</p>\n<p>想开始找工作是在大四上的时候，虽然那个时候周围的同学都还在重复过着悠闲自在的大学生活，但是我比较杞人忧天，或许是在知乎逛多了，感觉其他大学生都屌的不行，而我以前也从未有过去实习的经历，如果还不趁着秋招公司多，到毕业时想找恐怕就难了。<br>开始写简历的时候才发现，自己这四年来好像没什么好写的，一来学习成绩不怎么样，再来自己也没有参与过什么软件项目的开发，简直就只能白纸一张。想了好几个晚上，把自己大三开始所有写过的代码捋了一遍，挑了三个称的上开发的项目，然后一顿瞎掰开发过程。总算勉勉强强凑成了一页。<br>接下来就是不断的参加校招，不断的递简历，不断的参加笔试面试。<br>参加了几个比较有名的公司的校招，有的递完简历就了无音讯，有的参加完笔试就知道没机会了。不过在不断失败中，我还是攒到了一些经验，会针对面试公司可能出的问题进行复习。<br>功夫不负有心人，虽然大公司一家都没有消息，不过海投中的一些小公司还是有给我回信。陆陆续续的面试了好几个公司，从一开始自我介绍就会声音就会发抖，到后面稍微从容的跟面试官聊一聊人生。这样的进步我觉得比我拿到offer更值得高兴。<br>然后，我也收到了五个左右的offer，包括初创，电商，软件等公司，虽然大家都说在初创公司会得到很好的锻炼，但是我对自身技术水平还是不自信，怕到了初创公司会处于拖后腿的地位，考虑了很久，选择了一件面向企业的软件公司。<br>工作了差不多4月，现在我也慢慢进入了社会人的角色。现在这个公司工作量不算太大，给的工资也说的过去。不过，工作内容不是自己期待中呢那样。所以，我开始思考一年以后，我该何去何从。</p>\n<h3 id=\"对未来的展望\"><a href=\"#对未来的展望\" class=\"headerlink\" title=\"对未来的展望\"></a>对未来的展望</h3><p>说完当下现状，就该想想以后的发展目标了。现在这个公司实在太过安逸了，每天要么处理客户问题，要么做一些重复的软件二次开发，要么就发发呆。这样让我开始担忧我的技术水平能不能在这一年有所提高，还是会比在学校更糟糕，每天下班回来基本不会再看技术书，不会在家里写一行代码。而且岗位本身就不是一个单纯的开发岗位，更像一个售后技术人员和软件定制开发人员的结合。公司同个技术小组同事虽然都很好，但是没有技术的交流，没有共同开发，大家各干各的活，这点让我很是失望。<br>所以，我开始考虑明年跳槽，下一份工作，我决定去上海发展，在我们这个二流城市，互联网公司还是太少。机会感觉也不多。所以想去上海看看会不会有更多的机会。<br>同时，我开始了前期的准备工作。现在做的python开发，之前在学校学的java基本上也忘了差不多，而python我也没有很深的了解，这个状态肯定无法跳槽。所以，我开始重新捡起书籍，为明年而奋斗！！</p>\n","excerpt":"<h2 id=\"新的开始，建立在曾经的废墟之上\"><a href=\"#新的开始，建立在曾经的废墟之上\" class=\"headerlink\" title=\"新的开始，建立在曾经的废墟之上\"></a>新的开始，建立在曾经的废墟之上</h2><p>说来也是怪我自己脑子太二，在之前笔记本电脑内的Blog源文件没有备份就将电脑重装系统，结果就是之前的所有文章都消失得一干二净，虽然不是什么重要的文章，但毕竟是自己花心思写下的经验，丢了还是觉得蛮可惜的。所以这一次，我老老实实在GitHub上新开一个repository放我的hexo文件。以后每写一篇文章，就都要把源文件上传一次，妈妈再也不用担心换电脑没法继续写Blog了，顺带还能熟悉一些git命令，岂不美哉。<br>","more":"</p>\n<h3 id=\"既然开了一篇杂谈，那我就再说说找工作的事吧\"><a href=\"#既然开了一篇杂谈，那我就再说说找工作的事吧\" class=\"headerlink\" title=\"既然开了一篇杂谈，那我就再说说找工作的事吧\"></a>既然开了一篇杂谈，那我就再说说找工作的事吧</h3><p>虽然没人看，但是我还是记录一下大四找工作的一些经历和体会，以后回顾的时候也能在心里啐一句<br>：<code>当初怎么跟个傻子似的</code>。</p>\n<p>想开始找工作是在大四上的时候，虽然那个时候周围的同学都还在重复过着悠闲自在的大学生活，但是我比较杞人忧天，或许是在知乎逛多了，感觉其他大学生都屌的不行，而我以前也从未有过去实习的经历，如果还不趁着秋招公司多，到毕业时想找恐怕就难了。<br>开始写简历的时候才发现，自己这四年来好像没什么好写的，一来学习成绩不怎么样，再来自己也没有参与过什么软件项目的开发，简直就只能白纸一张。想了好几个晚上，把自己大三开始所有写过的代码捋了一遍，挑了三个称的上开发的项目，然后一顿瞎掰开发过程。总算勉勉强强凑成了一页。<br>接下来就是不断的参加校招，不断的递简历，不断的参加笔试面试。<br>参加了几个比较有名的公司的校招，有的递完简历就了无音讯，有的参加完笔试就知道没机会了。不过在不断失败中，我还是攒到了一些经验，会针对面试公司可能出的问题进行复习。<br>功夫不负有心人，虽然大公司一家都没有消息，不过海投中的一些小公司还是有给我回信。陆陆续续的面试了好几个公司，从一开始自我介绍就会声音就会发抖，到后面稍微从容的跟面试官聊一聊人生。这样的进步我觉得比我拿到offer更值得高兴。<br>然后，我也收到了五个左右的offer，包括初创，电商，软件等公司，虽然大家都说在初创公司会得到很好的锻炼，但是我对自身技术水平还是不自信，怕到了初创公司会处于拖后腿的地位，考虑了很久，选择了一件面向企业的软件公司。<br>工作了差不多4月，现在我也慢慢进入了社会人的角色。现在这个公司工作量不算太大，给的工资也说的过去。不过，工作内容不是自己期待中呢那样。所以，我开始思考一年以后，我该何去何从。</p>\n<h3 id=\"对未来的展望\"><a href=\"#对未来的展望\" class=\"headerlink\" title=\"对未来的展望\"></a>对未来的展望</h3><p>说完当下现状，就该想想以后的发展目标了。现在这个公司实在太过安逸了，每天要么处理客户问题，要么做一些重复的软件二次开发，要么就发发呆。这样让我开始担忧我的技术水平能不能在这一年有所提高，还是会比在学校更糟糕，每天下班回来基本不会再看技术书，不会在家里写一行代码。而且岗位本身就不是一个单纯的开发岗位，更像一个售后技术人员和软件定制开发人员的结合。公司同个技术小组同事虽然都很好，但是没有技术的交流，没有共同开发，大家各干各的活，这点让我很是失望。<br>所以，我开始考虑明年跳槽，下一份工作，我决定去上海发展，在我们这个二流城市，互联网公司还是太少。机会感觉也不多。所以想去上海看看会不会有更多的机会。<br>同时，我开始了前期的准备工作。现在做的python开发，之前在学校学的java基本上也忘了差不多，而python我也没有很深的了解，这个状态肯定无法跳槽。所以，我开始重新捡起书籍，为明年而奋斗！！</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"ciwyd91ue0000mc738v4fy5ez","category_id":"ciwyd91v60005mc73vf8tefjk","_id":"ciwyd91w2000fmc73n8ocub9a"},{"post_id":"ciwyd91vx000dmc73zdrlaf0a","category_id":"ciwyd91vr000bmc739pvth8mc","_id":"ciwyd91wc000mmc73i4w7bk02"},{"post_id":"ciwyd91ut0002mc73aiza4gw4","category_id":"ciwyd91vr000bmc739pvth8mc","_id":"ciwyd91wi000qmc732vgqmzuu"},{"post_id":"ciwyd91w4000hmc73mwo8x6pq","category_id":"ciwyd91vr000bmc739pvth8mc","_id":"ciwyd91wn000tmc73vaqau6t8"},{"post_id":"ciwyd91vb0006mc73fdlnyu03","category_id":"ciwyd91vr000bmc739pvth8mc","_id":"ciwyd91wu000ymc7390ba9ke3"},{"post_id":"ciwyd91vg0008mc733xcx8kyc","category_id":"ciwyd91vr000bmc739pvth8mc","_id":"ciwyd91x40012mc73lyitm6x1"},{"post_id":"ciwyd91wu000zmc7373sy6rww","category_id":"ciwyd91vr000bmc739pvth8mc","_id":"ciwyd91xd0018mc73nuhuxoht"},{"post_id":"ciwyd91wa000kmc73fai11kik","category_id":"ciwyd91x40013mc73155pig63","_id":"ciwyd91xp001hmc73deq94etb"},{"post_id":"ciwyd91wd000nmc73z37u7qf0","category_id":"ciwyd91xf001bmc73sjvie351","_id":"ciwyd91xv001pmc731zhi40x9"},{"post_id":"ciwyd91xq001kmc73iwlrfbj5","category_id":"ciwyd91x40013mc73155pig63","_id":"ciwyd91xy001tmc7395qdqs0j"},{"post_id":"ciwyd91xt001nmc73gsma9h2o","category_id":"ciwyd91xf001bmc73sjvie351","_id":"ciwyd91y9001wmc73f7cxkp8f"},{"post_id":"ciwyd91wk000rmc73a0uki7ps","category_id":"ciwyd91xp001jmc73m1p2ydwu","_id":"ciwyd91yc0020mc73d76dw0a6"},{"post_id":"ciwyd91wn000umc73o3g20r40","category_id":"ciwyd91xx001rmc73wl19ckxr","_id":"ciwyd91yk0025mc73wis7ihgu"},{"post_id":"ciwyd91ww0011mc736te8u06y","category_id":"ciwyd91x40013mc73155pig63","_id":"ciwyd91yo002amc739i9i4t8h"},{"post_id":"ciwyd91yi0024mc73287i4xju","category_id":"ciwyd91xx001rmc73wl19ckxr","_id":"ciwyd91yq002emc73v529kt2a"},{"post_id":"ciwyd91x70016mc73mwyrjovm","category_id":"ciwyd91xp001jmc73m1p2ydwu","_id":"ciwyd91yq002gmc73uyw930h9"},{"post_id":"ciwyd91xe0019mc73960fk018","category_id":"ciwyd91xx001rmc73wl19ckxr","_id":"ciwyd91yt002jmc739k5xv2bi"},{"post_id":"ciwyd91xk001dmc73te2b8h0h","category_id":"ciwyd91yr002hmc737b30r2e3","_id":"ciwyd91yv002lmc73ynta6f3e"},{"post_id":"ciwyd91xn001gmc73rj9xzggn","category_id":"ciwyd91yu002kmc73ycf1r4o4","_id":"ciwyd91yw002nmc73lo7xlwga"},{"post_id":"ciwyd91xv001qmc73l8mw4bt0","category_id":"ciwyd91yv002mmc73i9ftn5ks","_id":"ciwyd91z3002pmc73s40sfgcj"},{"post_id":"ciwyd91y0001umc73m3kau3ea","category_id":"ciwyd91yu002kmc73ycf1r4o4","_id":"ciwyd91z5002rmc73r48huhon"},{"post_id":"ciwyd91y9001xmc7360ihunll","category_id":"ciwyd91z4002qmc73mmriz12o","_id":"ciwyd91z9002tmc73c8ec9arl"},{"post_id":"ciwyd91yd0021mc73b59a0z64","category_id":"ciwyd91z6002smc73my01kpsa","_id":"ciwyd91zb002vmc730c9j8a4n"},{"post_id":"ciwyd91ym0028mc73e8qkcpb0","category_id":"ciwyd91z9002umc73rua6r2zf","_id":"ciwyd91zc002wmc73vpyd57m6"},{"post_id":"ciwyd91vj000amc73v6bpsz6h","category_id":"ciwyd91vr000bmc739pvth8mc","_id":"ciwydxxui0001zc737r3v0cnl"}],"PostTag":[{"post_id":"ciwyd91vg0008mc733xcx8kyc","tag_id":"ciwyd91v30004mc73bfrl4cr8","_id":"ciwyd91vw000cmc73yp5amcfm"},{"post_id":"ciwyd91ue0000mc738v4fy5ez","tag_id":"ciwyd91v30004mc73bfrl4cr8","_id":"ciwyd91vz000emc7326ti9077"},{"post_id":"ciwyd91vx000dmc73zdrlaf0a","tag_id":"ciwyd91v30004mc73bfrl4cr8","_id":"ciwyd91wb000lmc731etb24jj"},{"post_id":"ciwyd91ut0002mc73aiza4gw4","tag_id":"ciwyd91v30004mc73bfrl4cr8","_id":"ciwyd91wh000pmc73mzc3iisu"},{"post_id":"ciwyd91w4000hmc73mwo8x6pq","tag_id":"ciwyd91v30004mc73bfrl4cr8","_id":"ciwyd91wm000smc73soq1y70a"},{"post_id":"ciwyd91wa000kmc73fai11kik","tag_id":"ciwyd91v30004mc73bfrl4cr8","_id":"ciwyd91wt000xmc73jhcbnh59"},{"post_id":"ciwyd91vb0006mc73fdlnyu03","tag_id":"ciwyd91v30004mc73bfrl4cr8","_id":"ciwyd91wv0010mc73ps3v9ssx"},{"post_id":"ciwyd91wu000zmc7373sy6rww","tag_id":"ciwyd91v30004mc73bfrl4cr8","_id":"ciwyd91x50014mc73s4qip5gk"},{"post_id":"ciwyd91ww0011mc736te8u06y","tag_id":"ciwyd91v30004mc73bfrl4cr8","_id":"ciwyd91xc0017mc731emsvkj4"},{"post_id":"ciwyd91wk000rmc73a0uki7ps","tag_id":"ciwyd91v30004mc73bfrl4cr8","_id":"ciwyd91xf001amc732eabuvk2"},{"post_id":"ciwyd91wk000rmc73a0uki7ps","tag_id":"ciwyd91ws000wmc73rlw7cmdo","_id":"ciwyd91xn001fmc739wy8hao1"},{"post_id":"ciwyd91x70016mc73mwyrjovm","tag_id":"ciwyd91v30004mc73bfrl4cr8","_id":"ciwyd91xp001imc733l2mc1mi"},{"post_id":"ciwyd91xk001dmc73te2b8h0h","tag_id":"ciwyd91v30004mc73bfrl4cr8","_id":"ciwyd91xs001mmc73l24sf9te"},{"post_id":"ciwyd91xn001gmc73rj9xzggn","tag_id":"ciwyd91v30004mc73bfrl4cr8","_id":"ciwyd91xv001omc73xzc8i3n2"},{"post_id":"ciwyd91wn000umc73o3g20r40","tag_id":"ciwyd91x50015mc73djhcylas","_id":"ciwyd91xy001smc736biyvew7"},{"post_id":"ciwyd91wn000umc73o3g20r40","tag_id":"ciwyd91xl001emc73xkxiedg6","_id":"ciwyd91y9001vmc73nzmau8vm"},{"post_id":"ciwyd91xq001kmc73iwlrfbj5","tag_id":"ciwyd91v30004mc73bfrl4cr8","_id":"ciwyd91yb001zmc737mggdei4"},{"post_id":"ciwyd91xt001nmc73gsma9h2o","tag_id":"ciwyd91v30004mc73bfrl4cr8","_id":"ciwyd91yh0023mc73dwqoko4v"},{"post_id":"ciwyd91xe0019mc73960fk018","tag_id":"ciwyd91xs001lmc733wbjokg5","_id":"ciwyd91ym0027mc736y8zbrkx"},{"post_id":"ciwyd91xv001qmc73l8mw4bt0","tag_id":"ciwyd91v30004mc73bfrl4cr8","_id":"ciwyd91yo0029mc73eaf6ev90"},{"post_id":"ciwyd91y0001umc73m3kau3ea","tag_id":"ciwyd91v30004mc73bfrl4cr8","_id":"ciwyd91yp002dmc73d7ng6l58"},{"post_id":"ciwyd91y9001xmc7360ihunll","tag_id":"ciwyd91yh0022mc73npm3ksrw","_id":"ciwyd91yq002fmc73ftsk31ji"},{"post_id":"ciwyd91ym0028mc73e8qkcpb0","tag_id":"ciwyd91yp002cmc73ibuultjs","_id":"ciwyd91yt002imc73scinmuom"},{"post_id":"ciwyd91vj000amc73v6bpsz6h","tag_id":"ciwyd91v30004mc73bfrl4cr8","_id":"ciwydxxuf0000zc73qtsm5oc4"}],"Tag":[{"name":"学习","_id":"ciwyd91v30004mc73bfrl4cr8"},{"name":"vim","_id":"ciwyd91ws000wmc73rlw7cmdo"},{"name":"Virtualenv","_id":"ciwyd91x50015mc73djhcylas"},{"name":"Python","_id":"ciwyd91xl001emc73xkxiedg6"},{"name":"WMWare","_id":"ciwyd91xs001lmc733wbjokg5"},{"name":"git","_id":"ciwyd91yh0022mc73npm3ksrw"},{"name":"杂谈","_id":"ciwyd91yp002cmc73ibuultjs"}]}}